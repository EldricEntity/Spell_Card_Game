{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\DND_Spell_Cards\\\\Spell_Card_Game\\\\DND_Spell_Cards_online\\\\frontend - Copy\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// dnd-spell-cards-app/frontend/src/App.js\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid for unique keys for deck card instances\n\n// IMPORTANT: Update this to your VM's Public IP address (or domain name if configured)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://193.122.147.91:5000/api';\n\n// Inline CSS for self-contained component\nconst AppStyles = `\n    body {\n        background-color: #f0e6d2;\n        font-family: 'Inter', sans-serif;\n        color: #333;\n        margin: 0;\n        padding: 0;\n        line-height: 1.6;\n    }\n\n    .App {\n        display: flex;\n        flex-direction: column;\n        min-height: 100vh;\n        align-items: center;\n        padding: 1rem;\n        box-sizing: border-box;\n    }\n\n    .app-title {\n        color: #2d3748;\n        text-align: center;\n        margin-bottom: 1.5rem;\n        font-size: 2.5rem;\n        font-weight: 700;\n    }\n\n    .login-container, .stats-container {\n        background: #4a5568; /* Dark gray for a solid background */\n        color: #e2e8f0; /* Light gray text */\n        padding: 1.5rem;\n        margin-bottom: 1.5rem;\n        border-radius: 0.75rem;\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n        display: flex;\n        gap: 1rem;\n        align-items: center;\n        justify-content: center;\n        flex-wrap: wrap;\n        width: 100%;\n        max-width: 1200px;\n    }\n\n    .login-container input {\n        padding: 0.6rem 0.8rem;\n        border-radius: 0.5rem;\n        border: 1px solid #a0aec0;\n        background: #e2e8f0;\n        color: #2d3748;\n        font-size: 1rem;\n        flex-grow: 1;\n        max-width: 180px;\n    }\n\n    .login-container button, .use-button, .reset-button, .remove-button, .select-button, .booster-button {\n        background-color: #63b3ed; /* Blue button */\n        color: white;\n        padding: 0.75rem 1.25rem;\n        border: none;\n        border-radius: 0.5rem;\n        cursor: pointer;\n        font-weight: bold;\n        transition: background-color 0.3s ease, transform 0.2s ease;\n        white-space: nowrap;\n    }\n\n    .login-container button:hover, .select-button:hover:not(:disabled), .booster-button:hover:not(:disabled) {\n        background-color: #4299e1; /* Darker blue on hover */\n        transform: translateY(-2px);\n    }\n\n    .select-button:disabled, .use-button:disabled, .booster-button:disabled {\n        background-color: #cbd5e0;\n        cursor: not-allowed;\n        transform: none;\n    }\n\n    .stats-container {\n        background: #2d3748;\n        color: #e2e8f0;\n    }\n\n    .stats-container label {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        font-weight: 500;\n    }\n\n    .stats-container input {\n        width: 4rem;\n        padding: 0.25rem;\n        border-radius: 0.5rem;\n        border: none;\n        background: #e2e8f0;\n        color: #2d3748;\n        text-align: center;\n    }\n\n    .stats-container p {\n        margin: 0;\n        padding: 0;\n        font-size: 1rem;\n    }\n\n    .message-box {\n        position: fixed;\n        top: 1rem;\n        left: 50%;\n        transform: translateX(-50%);\n        padding: 0.75rem 1.5rem;\n        border-radius: 0.5rem;\n        font-weight: bold;\n        z-index: 1000; /* High z-index to appear above everything */\n        animation: fadein 0.5s, fadeout 0.5s 2.5s;\n        text-align: center;\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n    }\n\n    .message-box.success {\n        background-color: #48bb78; /* Green success color */\n        color: white;\n    }\n\n    .message-box.error {\n        background-color: #f56565; /* Red error color */\n        color: white;\n    }\n\n    .message-box.info {\n        background-color: #63b3ed;\n        color: white;\n    }\n\n    @keyframes fadein {\n        from { opacity: 0; }\n        to   { opacity: 1; }\n    }\n\n    @keyframes fadeout {\n        from { opacity: 1; }\n        to   { opacity: 0; }\n    }\n\n    .tab-navigation {\n        display: flex;\n        justify-content: center;\n        width: 100%;\n        max-width: 1200px;\n        margin-bottom: 1.5rem;\n        background-color: #e2e8f0;\n        border-radius: 0.75rem;\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n        overflow: hidden; /* Ensures rounded corners */\n    }\n\n    .tab-item {\n        flex: 1;\n        text-align: center;\n        padding: 1rem 1.5rem;\n        cursor: pointer;\n        font-weight: bold;\n        color: #4a5568;\n        background-color: #e2e8f0;\n        transition: background-color 0.3s ease, color 0.3s ease;\n        border-bottom: 3px solid transparent; /* For active indicator */\n    }\n\n    .tab-item:hover:not(.active) {\n        background-color: #cbd5e0;\n    }\n\n    .tab-item.active {\n        background-color: #63b3ed;\n        color: white;\n        border-bottom-color: #2b6cb0;\n    }\n\n    .main-content {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 1.5rem;\n        width: 100%;\n        max-width: 1200px;\n        flex: 1; /* Allows content to take up remaining space */\n    }\n\n    .card-collection-panel, .built-deck-panel {\n        background: #fdfaf5;\n        border-radius: 0.75rem;\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n        padding: 1.5rem;\n        flex: 1;\n        min-width: 300px;\n        display: flex;\n        flex-direction: column;\n    }\n\n    .panel-title {\n        text-align: center;\n        color: #2c5282;\n        margin-top: 0;\n        margin-bottom: 1.5rem;\n        font-size: 1.8rem;\n    }\n\n    .card-list, .deck-list {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n        gap: 1rem;\n        flex-grow: 1;\n    }\n\n    .card-item {\n        background: #fff;\n        border: 1px solid #e2e8f0;\n        border-radius: 0.75rem;\n        padding: 1rem;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);\n        transition: transform 0.2s ease, box-shadow 0.2s ease;\n        display: flex;\n        flex-direction: column;\n        text-align: center;\n    }\n\n    .card-item:hover.available-card {\n        transform: translateY(-5px);\n        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);\n        cursor: pointer;\n    }\n\n    .card-item.deck-card {\n        background: #edf2f7; /* Lighter background for deck cards */\n    }\n\n    .card-image {\n        max-width: 100%;\n        height: auto;\n        border-radius: 0.5rem;\n        margin-bottom: 0.75rem;\n    }\n\n    .card-name {\n        font-weight: bold;\n        font-size: 1.1rem;\n        color: #2c5282;\n        margin-bottom: 0.4rem;\n    }\n\n    .card-type {\n        font-style: italic;\n        color: #718096;\n        margin-bottom: 0.5rem;\n    }\n\n    .card-description {\n        font-size: 0.85rem;\n        color: #4a5568;\n        flex-grow: 1; /* Allows description to take up available space */\n        margin-bottom: 0.75rem;\n    }\n\n    .card-meta, .card-uses {\n        font-size: 0.8rem;\n        color: #666;\n        margin-bottom: 0.5rem;\n    }\n\n    .card-actions {\n        margin-top: 0.75rem;\n        display: flex;\n        flex-wrap: wrap;\n        gap: 0.5rem;\n        justify-content: center;\n    }\n\n    .use-button {\n        background-color: #3182ce; /* Blue use button */\n        color: white;\n    }\n    .use-button:hover:not(:disabled) {\n        background-color: #2b6cb0;\n        transform: translateY(-1px);\n    }\n\n    .reset-button {\n        background-color: #68d391; /* Green reset button */\n        color: white;\n    }\n    .reset-button:hover {\n        background-color: #48bb78;\n        transform: translateY(-1px);\n    }\n\n    .remove-button {\n        background-color: #fc8181; /* Red remove button */\n        color: white;\n    }\n    .remove-button:hover {\n        background-color: #e53e3e;\n        transform: translateY(-1px);\n    }\n\n    .empty-message, .pre-login-message {\n        text-align: center;\n        padding: 2rem;\n        background: #e9e9e9;\n        border-radius: 0.75rem;\n        color: #555;\n        font-style: italic;\n        margin: 1rem;\n    }\n\n    .error-message {\n        color: #e53e3e;\n        background-color: #fed7d7;\n        border: 1px solid #fc8181;\n        padding: 0.75rem;\n        border-radius: 0.5rem;\n        text-align: center;\n        margin-top: 1rem;\n        font-weight: bold;\n    }\n\n    .highlight {\n        color: #3182ce;\n        font-weight: bold;\n    }\n\n    .booster-pack-section {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin-top: 1.5rem;\n        padding-top: 1.5rem;\n        border-top: 1px solid #e2e8f0;\n        width: 100%;\n    }\n\n    .booster-pack-section button {\n        margin-top: 1rem;\n    }\n\n    .new-cards-display {\n        margin-top: 1rem;\n        padding: 1rem;\n        background: #e2e8f0;\n        border-radius: 0.5rem;\n        text-align: center;\n        width: 100%;\n        max-width: 400px;\n    }\n\n    /* Responsive Adjustments */\n    @media (max-width: 768px) {\n        .main-content {\n            flex-direction: column;\n        }\n        .login-container, .stats-container, .tab-navigation {\n            flex-direction: column;\n            align-items: stretch;\n        }\n        .login-container input {\n            max-width: 100%;\n        }\n        .tab-item {\n            border-bottom: none; /* No bottom border on stacked tabs */\n            border-right: 3px solid transparent; /* Use right border for active indicator */\n        }\n        .tab-item.active {\n            border-bottom-color: transparent;\n            border-right-color: #2b6cb0;\n        }\n    }\n\n    @media (max-width: 480px) {\n        .app-title {\n            font-size: 2rem;\n        }\n        .panel-title {\n            font-size: 1.5rem;\n        }\n        .login-container button, .use-button, .reset-button, .remove-button, .select-button, .booster-button {\n            width: 100%; /* Full width buttons on very small screens */\n            padding: 0.6rem 1rem;\n        }\n        .card-list, .deck-list {\n            grid-template-columns: 1fr; /* Single column layout for cards */\n        }\n    }\n`;\nfunction App() {\n  _s();\n  // --- State Variables ---\n  const [allCards, setAllCards] = useState([]); // All cards fetched from the backend (master list)\n  const [characterLevel, setCharacterLevel] = useState(1);\n  const [wisMod, setWisMod] = useState(0);\n  const [intMod, setIntMod] = useState(0);\n  const [chaMod, setChaMod] = useState(0);\n  const [maxDeckSize, setMaxDeckSize] = useState(0);\n  const [selectedCards, setSelectedCards] = useState([]); // Cards currently in the player's ACTIVE deck (persistent instances)\n  const [unlockedCardIds, setUnlockedCardIds] = useState([]); // IDs of all cards the player HAS UNLOCKED (owned pool)\n  const [error, setError] = useState(''); // General error messages for UI\n\n  // New states for login/auth\n  const [playerId, setPlayerId] = useState('');\n  const [password, setPassword] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [message, setMessage] = useState({\n    text: '',\n    type: ''\n  });\n  const [loading, setLoading] = useState(true); // Loading state for initial data fetch of allCards\n\n  // New state for tab management\n  const [activeTab, setActiveTab] = useState('available'); // 'available' or 'deck'\n\n  // State for newly acquired cards from booster packs\n  const [newlyAcquiredCards, setNewlyAcquiredCards] = useState([]);\n\n  // --- Helper function to display messages ---\n  const showMessage = useCallback((text, type) => {\n    setMessage({\n      text,\n      type\n    });\n    // Clear message after 5 seconds for info, 3 seconds for others\n    const duration = type === 'info' ? 5000 : 3000;\n    setTimeout(() => setMessage({\n      text: '',\n      type: ''\n    }), duration);\n  }, []);\n\n  // --- API Call: Create Account ---\n  const handleCreateAccount = async () => {\n    if (!playerId || !password) {\n      showMessage('Player ID and password are required to create an account.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/deck/create`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to create account.');\n      }\n      showMessage('Account created successfully! You can now log in.', 'success');\n    } catch (err) {\n      console.error('Error creating account:', err);\n      showMessage(`Failed to create account: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- API Call: Login and Load Deck ---\n  const handleLoginAndLoadDeck = async () => {\n    if (!playerId || !password) {\n      showMessage('Player ID and password are required to log in.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/deck/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Authentication failed.');\n      }\n\n      // Load data from backend upon successful login\n      setSelectedCards(data.active_deck_instances || []); // Load active deck instances\n      setUnlockedCardIds(data.unlocked_card_ids || []); // Load unlocked card IDs\n      setCharacterLevel(data.character_level !== undefined ? data.character_level : 1);\n      setWisMod(data.wis_mod !== undefined ? data.wis_mod : 0);\n      setIntMod(data.int_mod !== undefined ? data.int_mod : 0);\n      setChaMod(data.cha_mod !== undefined ? data.cha_mod : 0);\n      setIsAuthenticated(true);\n      setActiveTab('deck'); // Automatically switch to the deck tab after login\n\n      showMessage('Login successful! Deck and unlocked cards loaded.', 'success');\n    } catch (err) {\n      setIsAuthenticated(false);\n      console.error('Error logging in:', err);\n      showMessage(`Failed to load deck: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- API Call: Save Deck ---\n  const handleSaveDeck = async () => {\n    if (!isAuthenticated) {\n      showMessage('You must be logged in to save your deck.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/deck/save`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password,\n          // Send password for re-validation on backend\n          active_deck_instances: selectedCards,\n          // Save active deck instances\n          unlocked_card_ids: unlockedCardIds,\n          // Save unlocked card IDs\n          character_level: characterLevel,\n          wis_mod: wisMod,\n          int_mod: intMod,\n          cha_mod: chaMod\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to save deck.');\n      }\n      showMessage('Deck and unlocked cards saved successfully!', 'success');\n    } catch (err) {\n      console.error('Error saving deck:', err);\n      showMessage(`Failed to save deck: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Effect to Fetch All Cards on Component Mount ---\n  useEffect(() => {\n    const fetchAllCards = async () => {\n      setLoading(true);\n      try {\n        const cardsResponse = await fetch(`${API_BASE_URL}/cards`);\n        if (!cardsResponse.ok) {\n          throw new Error(`HTTP error fetching cards! status: ${cardsResponse.status}`);\n        }\n        const cardsData = await cardsResponse.json();\n        setAllCards(cardsData);\n      } catch (err) {\n        console.error('Error fetching initial data:', err);\n        showMessage('Failed to fetch initial data: ' + err.message, 'error');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllCards();\n  }, [showMessage]); // Empty dependency array, this effect runs only once on mount\n\n  // --- Effect to Calculate Max Deck Size when Character Stats Change ---\n  useEffect(() => {\n    const calculateDeckSize = async () => {\n      setError(''); // Clear previous errors related to deck size\n      try {\n        const response = await fetch(`${API_BASE_URL}/calculate_deck_size`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            character_level: characterLevel,\n            wis_mod: wisMod,\n            int_mod: intMod,\n            cha_mod: chaMod\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setMaxDeckSize(data.max_deck_size);\n      } catch (err) {\n        setError('Failed to calculate deck size: ' + err.message);\n        console.error('Error calculating deck size:', err);\n      }\n    };\n    if (!isNaN(characterLevel) && !isNaN(wisMod) && !isNaN(intMod) && !isNaN(chaMod)) {\n      calculateDeckSize();\n    }\n  }, [characterLevel, wisMod, intMod, chaMod]);\n\n  // --- Booster Pack Logic: Open a new pack ---\n  const handleOpenBoosterPack = async () => {\n    if (!isAuthenticated) {\n      showMessage(\"You must be logged in to open booster packs.\", \"error\");\n      return;\n    }\n    setLoading(true); // Indicate loading while opening pack\n    setNewlyAcquiredCards([]); // Clear previous new cards display\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/deck/open_booster`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password,\n          pack_size: 5\n        }) // Request 5 cards\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to open booster pack.');\n      }\n      if (data.new_cards && data.new_cards.length > 0) {\n        // Update the unlockedCardIds state with the new IDs\n        setUnlockedCardIds(prevIds => {\n          const newIds = data.new_cards.map(card => card.id);\n          return [...new Set([...prevIds, ...newIds])]; // Use Set to prevent duplicates\n        });\n        setNewlyAcquiredCards(data.new_cards); // Store new cards for display\n        showMessage(`You unlocked ${data.new_cards.length} new cards!`, 'success');\n      } else {\n        showMessage(data.message || \"No new cards were found in the booster pack.\", 'info');\n      }\n    } catch (err) {\n      console.error('Error opening booster pack:', err);\n      showMessage(`Failed to open booster pack: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Deck Building Logic: Add Card ---\n  const handleAddCardToDeck = useCallback(card => {\n    if (!isAuthenticated) {\n      showMessage(\"You must be logged in to build a deck.\", \"error\");\n      return;\n    }\n    if (selectedCards.length >= maxDeckSize) {\n      showMessage('Deck is full! Remove cards to add new ones.', 'error');\n      return;\n    }\n    // Ensure the card being added is actually unlocked\n    if (!unlockedCardIds.includes(card.id)) {\n      showMessage(\"You don't own this card yet! Open booster packs to unlock more spells.\", \"error\");\n      return;\n    }\n    const cantripCountInDeck = selectedCards.filter(c => c.type === 'Cantrip').length;\n    if (card.type !== 'Cantrip' && cantripCountInDeck === 0 && selectedCards.length === 0) {\n      showMessage('Your deck must contain at least one Cantrip! Add a Cantrip first.', 'error');\n      return;\n    }\n    setSelectedCards(prev => [...prev, {\n      ...card,\n      instance_id: uuidv4(),\n      current_uses: card.default_uses_per_rest\n    }]);\n    showMessage('Card added to your deck!', 'success');\n  }, [isAuthenticated, maxDeckSize, selectedCards, unlockedCardIds, showMessage]);\n\n  // --- Deck Building Logic: Remove Card ---\n  const handleRemoveCardFromDeck = useCallback(instance_id => {\n    const updatedDeck = selectedCards.filter(card => card.instance_id !== instance_id);\n    const cantripCount = updatedDeck.filter(c => c.type === 'Cantrip').length;\n    if (cantripCount === 0 && updatedDeck.length > 0) {\n      showMessage('Your deck must contain at least one Cantrip! You cannot remove the last one.', 'error');\n      return;\n    }\n    setSelectedCards(updatedDeck);\n    showMessage('Card removed from deck.', 'success');\n  }, [selectedCards, showMessage]);\n\n  // --- Card Usage Logic: Mark Card as Used ---\n  const handleMarkCardUsed = useCallback(async instance_id => {\n    const cardToUse = selectedCards.find(card => card.instance_id === instance_id);\n    if (!cardToUse) return;\n    if (cardToUse.current_uses > 0) {\n      setSelectedCards(prev => prev.map(card => card.instance_id === instance_id ? {\n        ...card,\n        current_uses: card.current_uses - 1\n      } : card));\n\n      // Notify backend about the card usage for logging purposes.\n      try {\n        const response = await fetch(`${API_BASE_URL}/card_used`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: cardToUse.name,\n            // Use 'name' to match backend's 'card_name' expectation\n            type: cardToUse.type,\n            // Use 'type' to match backend's 'card_type' expectation\n            deck_card_id: cardToUse.instance_id\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Backend notification:', data.message);\n        console.log('Simulated System Log Entry from Backend:', data.log_entry);\n      } catch (err) {\n        showMessage('Failed to notify backend of card usage for logging: ' + err.message, 'error');\n        console.error('Error sending card used notification:', err);\n      }\n    } else {\n      showMessage(`\"${cardToUse.name}\" has no uses left! It needs a long rest.`, 'error');\n    }\n  }, [selectedCards, showMessage]);\n\n  // --- Card Usage Logic: Reset Card Uses (Long Rest) ---\n  const handleResetCardUses = useCallback(instance_id => {\n    setSelectedCards(prev => prev.map(card => card.instance_id === instance_id ? {\n      ...card,\n      current_uses: card.default_uses_per_rest\n    } : card));\n    showMessage('Card uses reset!', 'success');\n  }, [showMessage]);\n\n  // Filter available cards based on what the player has unlocked\n  const filteredAvailableCards = allCards.filter(card => unlockedCardIds.includes(card.id));\n\n  // --- Main Component Render ---\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: AppStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Spell Trading Cards Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Player ID\",\n          value: playerId,\n          onChange: e => setPlayerId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLoginAndLoadDeck,\n          disabled: loading,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateAccount,\n          disabled: loading,\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 21\n        }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveDeck,\n          disabled: loading,\n          children: \"Save Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Level: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: characterLevel,\n            onChange: e => setCharacterLevel(Math.max(1, parseInt(e.target.value) || 1)),\n            min: \"1\",\n            max: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"WIS Mod: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: wisMod,\n            onChange: e => setWisMod(parseInt(e.target.value) || 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"INT Mod: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: intMod,\n            onChange: e => setIntMod(parseInt(e.target.value) || 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"CHA Mod: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: chaMod,\n            onChange: e => setChaMod(parseInt(e.target.value) || 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Max Deck Size: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"highlight\",\n            children: maxDeckSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 17\n      }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-box ${message.type}`,\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tab-item ${activeTab === 'available' ? 'active' : ''}`,\n          onClick: () => setActiveTab('available'),\n          children: [\"Available Spells (\", unlockedCardIds.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tab-item ${activeTab === 'deck' ? 'active' : ''}`,\n          onClick: () => setActiveTab('deck'),\n          children: [\"Your Deck (\", selectedCards.length, \"/\", maxDeckSize, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [activeTab === 'available' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-collection-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"panel-title\",\n            children: \"Available Spells\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 29\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-message\",\n            children: \"Loading cards...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 33\n          }, this) : !isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pre-login-message\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Log in to see your available spells.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 33\n          }, this) : filteredAvailableCards.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-list\",\n            children: filteredAvailableCards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-item available-card\",\n              onClick: () => handleAddCardToDeck(card),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`,\n                alt: card.name,\n                className: \"card-image\",\n                onError: e => {\n                  e.target.onerror = null;\n                  e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\";\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 801,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"card-name\",\n                children: [card.name, \" (\", card.type, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-description\",\n                children: card.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-meta\",\n                children: [\"Rarity: \", card.rarity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation();\n                  handleAddCardToDeck(card);\n                } // Stop propagation to prevent parent onClick\n                ,\n                disabled: selectedCards.length >= maxDeckSize,\n                className: \"select-button\",\n                children: \"Add to Deck\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 45\n              }, this)]\n            }, card.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You haven't unlocked any spells yet! Open a booster pack to get started.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"booster-pack-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleOpenBoosterPack,\n                disabled: loading || !isAuthenticated,\n                className: \"booster-button\",\n                children: \"Open Booster Pack\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 41\n              }, this), newlyAcquiredCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"new-cards-display\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Newly Unlocked Cards:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 833,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: newlyAcquiredCards.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [card.name, \" (\", card.type, \")\"]\n                  }, card.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 836,\n                    columnNumber: 57\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 834,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 33\n          }, this), isAuthenticated && filteredAvailableCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"booster-pack-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleOpenBoosterPack,\n              disabled: loading || !isAuthenticated,\n              className: \"booster-button\",\n              children: \"Open Booster Pack\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 37\n            }, this), newlyAcquiredCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-cards-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Newly Unlocked Cards:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 856,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: newlyAcquiredCards.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [card.name, \" (\", card.type, \")\"]\n                }, card.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 859,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 855,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 25\n        }, this), activeTab === 'deck' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"built-deck-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"panel-title\",\n            children: [\"Your Deck (\", selectedCards.length, \"/\", maxDeckSize, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"deck-list\",\n            children: isAuthenticated ? selectedCards.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-message\",\n              children: \"Select cards from the \\\"Available Spells\\\" tab to build your deck!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 876,\n              columnNumber: 41\n            }, this) : selectedCards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-item deck-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`,\n                alt: card.name,\n                className: \"card-image\",\n                onError: e => {\n                  e.target.onerror = null;\n                  e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\";\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"card-name\",\n                children: [card.name, \" (\", card.type, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-description\",\n                children: card.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 887,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-uses\",\n                children: [\"Uses Left: \", card.current_uses, \"/\", card.default_uses_per_rest]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 888,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleMarkCardUsed(card.instance_id),\n                  disabled: card.current_uses <= 0,\n                  className: \"use-button\",\n                  children: \"Use\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 890,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleResetCardUses(card.instance_id),\n                  className: \"reset-button\",\n                  children: \"Reset Uses\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 897,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleRemoveCardFromDeck(card.instance_id),\n                  className: \"remove-button\",\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 903,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 889,\n                columnNumber: 49\n              }, this)]\n            }, card.instance_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 45\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pre-login-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Please log in to load your character and spell deck.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Once logged in, your deck and stats will appear here.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 916,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yGrynO1oQMPbErbEv36VEmhI2J4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","AppStyles","App","_s","allCards","setAllCards","characterLevel","setCharacterLevel","wisMod","setWisMod","intMod","setIntMod","chaMod","setChaMod","maxDeckSize","setMaxDeckSize","selectedCards","setSelectedCards","unlockedCardIds","setUnlockedCardIds","error","setError","playerId","setPlayerId","password","setPassword","isAuthenticated","setIsAuthenticated","message","setMessage","text","type","loading","setLoading","activeTab","setActiveTab","newlyAcquiredCards","setNewlyAcquiredCards","showMessage","duration","setTimeout","handleCreateAccount","response","fetch","method","headers","body","JSON","stringify","player_id","data","json","ok","Error","err","console","handleLoginAndLoadDeck","active_deck_instances","unlocked_card_ids","character_level","undefined","wis_mod","int_mod","cha_mod","handleSaveDeck","fetchAllCards","cardsResponse","status","cardsData","calculateDeckSize","max_deck_size","isNaN","handleOpenBoosterPack","pack_size","new_cards","length","prevIds","newIds","map","card","id","Set","handleAddCardToDeck","includes","cantripCountInDeck","filter","c","prev","instance_id","current_uses","default_uses_per_rest","handleRemoveCardFromDeck","updatedDeck","cantripCount","handleMarkCardUsed","cardToUse","find","name","deck_card_id","log","log_entry","handleResetCardUses","filteredAvailableCards","children","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","value","onChange","e","target","onClick","disabled","Math","max","parseInt","min","src","split","replace","alt","onError","onerror","description","rarity","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/aaron/DND_Spell_Cards/Spell_Card_Game/DND_Spell_Cards_online/frontend - Copy/src/App.js"],"sourcesContent":["// dnd-spell-cards-app/frontend/src/App.js\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid for unique keys for deck card instances\r\n\r\n// IMPORTANT: Update this to your VM's Public IP address (or domain name if configured)\r\nconst API_BASE_URL = 'http://193.122.147.91:5000/api';\r\n\r\n// Inline CSS for self-contained component\r\nconst AppStyles = `\r\n    body {\r\n        background-color: #f0e6d2;\r\n        font-family: 'Inter', sans-serif;\r\n        color: #333;\r\n        margin: 0;\r\n        padding: 0;\r\n        line-height: 1.6;\r\n    }\r\n\r\n    .App {\r\n        display: flex;\r\n        flex-direction: column;\r\n        min-height: 100vh;\r\n        align-items: center;\r\n        padding: 1rem;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .app-title {\r\n        color: #2d3748;\r\n        text-align: center;\r\n        margin-bottom: 1.5rem;\r\n        font-size: 2.5rem;\r\n        font-weight: 700;\r\n    }\r\n\r\n    .login-container, .stats-container {\r\n        background: #4a5568; /* Dark gray for a solid background */\r\n        color: #e2e8f0; /* Light gray text */\r\n        padding: 1.5rem;\r\n        margin-bottom: 1.5rem;\r\n        border-radius: 0.75rem;\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n        display: flex;\r\n        gap: 1rem;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex-wrap: wrap;\r\n        width: 100%;\r\n        max-width: 1200px;\r\n    }\r\n\r\n    .login-container input {\r\n        padding: 0.6rem 0.8rem;\r\n        border-radius: 0.5rem;\r\n        border: 1px solid #a0aec0;\r\n        background: #e2e8f0;\r\n        color: #2d3748;\r\n        font-size: 1rem;\r\n        flex-grow: 1;\r\n        max-width: 180px;\r\n    }\r\n\r\n    .login-container button, .use-button, .reset-button, .remove-button, .select-button, .booster-button {\r\n        background-color: #63b3ed; /* Blue button */\r\n        color: white;\r\n        padding: 0.75rem 1.25rem;\r\n        border: none;\r\n        border-radius: 0.5rem;\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n        transition: background-color 0.3s ease, transform 0.2s ease;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .login-container button:hover, .select-button:hover:not(:disabled), .booster-button:hover:not(:disabled) {\r\n        background-color: #4299e1; /* Darker blue on hover */\r\n        transform: translateY(-2px);\r\n    }\r\n\r\n    .select-button:disabled, .use-button:disabled, .booster-button:disabled {\r\n        background-color: #cbd5e0;\r\n        cursor: not-allowed;\r\n        transform: none;\r\n    }\r\n\r\n    .stats-container {\r\n        background: #2d3748;\r\n        color: #e2e8f0;\r\n    }\r\n\r\n    .stats-container label {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 0.5rem;\r\n        font-weight: 500;\r\n    }\r\n\r\n    .stats-container input {\r\n        width: 4rem;\r\n        padding: 0.25rem;\r\n        border-radius: 0.5rem;\r\n        border: none;\r\n        background: #e2e8f0;\r\n        color: #2d3748;\r\n        text-align: center;\r\n    }\r\n\r\n    .stats-container p {\r\n        margin: 0;\r\n        padding: 0;\r\n        font-size: 1rem;\r\n    }\r\n\r\n    .message-box {\r\n        position: fixed;\r\n        top: 1rem;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        padding: 0.75rem 1.5rem;\r\n        border-radius: 0.5rem;\r\n        font-weight: bold;\r\n        z-index: 1000; /* High z-index to appear above everything */\r\n        animation: fadein 0.5s, fadeout 0.5s 2.5s;\r\n        text-align: center;\r\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .message-box.success {\r\n        background-color: #48bb78; /* Green success color */\r\n        color: white;\r\n    }\r\n\r\n    .message-box.error {\r\n        background-color: #f56565; /* Red error color */\r\n        color: white;\r\n    }\r\n\r\n    .message-box.info {\r\n        background-color: #63b3ed;\r\n        color: white;\r\n    }\r\n\r\n    @keyframes fadein {\r\n        from { opacity: 0; }\r\n        to   { opacity: 1; }\r\n    }\r\n\r\n    @keyframes fadeout {\r\n        from { opacity: 1; }\r\n        to   { opacity: 0; }\r\n    }\r\n\r\n    .tab-navigation {\r\n        display: flex;\r\n        justify-content: center;\r\n        width: 100%;\r\n        max-width: 1200px;\r\n        margin-bottom: 1.5rem;\r\n        background-color: #e2e8f0;\r\n        border-radius: 0.75rem;\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n        overflow: hidden; /* Ensures rounded corners */\r\n    }\r\n\r\n    .tab-item {\r\n        flex: 1;\r\n        text-align: center;\r\n        padding: 1rem 1.5rem;\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n        color: #4a5568;\r\n        background-color: #e2e8f0;\r\n        transition: background-color 0.3s ease, color 0.3s ease;\r\n        border-bottom: 3px solid transparent; /* For active indicator */\r\n    }\r\n\r\n    .tab-item:hover:not(.active) {\r\n        background-color: #cbd5e0;\r\n    }\r\n\r\n    .tab-item.active {\r\n        background-color: #63b3ed;\r\n        color: white;\r\n        border-bottom-color: #2b6cb0;\r\n    }\r\n\r\n    .main-content {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 1.5rem;\r\n        width: 100%;\r\n        max-width: 1200px;\r\n        flex: 1; /* Allows content to take up remaining space */\r\n    }\r\n\r\n    .card-collection-panel, .built-deck-panel {\r\n        background: #fdfaf5;\r\n        border-radius: 0.75rem;\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n        padding: 1.5rem;\r\n        flex: 1;\r\n        min-width: 300px;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .panel-title {\r\n        text-align: center;\r\n        color: #2c5282;\r\n        margin-top: 0;\r\n        margin-bottom: 1.5rem;\r\n        font-size: 1.8rem;\r\n    }\r\n\r\n    .card-list, .deck-list {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n        gap: 1rem;\r\n        flex-grow: 1;\r\n    }\r\n\r\n    .card-item {\r\n        background: #fff;\r\n        border: 1px solid #e2e8f0;\r\n        border-radius: 0.75rem;\r\n        padding: 1rem;\r\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);\r\n        transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n        display: flex;\r\n        flex-direction: column;\r\n        text-align: center;\r\n    }\r\n\r\n    .card-item:hover.available-card {\r\n        transform: translateY(-5px);\r\n        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);\r\n        cursor: pointer;\r\n    }\r\n\r\n    .card-item.deck-card {\r\n        background: #edf2f7; /* Lighter background for deck cards */\r\n    }\r\n\r\n    .card-image {\r\n        max-width: 100%;\r\n        height: auto;\r\n        border-radius: 0.5rem;\r\n        margin-bottom: 0.75rem;\r\n    }\r\n\r\n    .card-name {\r\n        font-weight: bold;\r\n        font-size: 1.1rem;\r\n        color: #2c5282;\r\n        margin-bottom: 0.4rem;\r\n    }\r\n\r\n    .card-type {\r\n        font-style: italic;\r\n        color: #718096;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n\r\n    .card-description {\r\n        font-size: 0.85rem;\r\n        color: #4a5568;\r\n        flex-grow: 1; /* Allows description to take up available space */\r\n        margin-bottom: 0.75rem;\r\n    }\r\n\r\n    .card-meta, .card-uses {\r\n        font-size: 0.8rem;\r\n        color: #666;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n\r\n    .card-actions {\r\n        margin-top: 0.75rem;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 0.5rem;\r\n        justify-content: center;\r\n    }\r\n\r\n    .use-button {\r\n        background-color: #3182ce; /* Blue use button */\r\n        color: white;\r\n    }\r\n    .use-button:hover:not(:disabled) {\r\n        background-color: #2b6cb0;\r\n        transform: translateY(-1px);\r\n    }\r\n\r\n    .reset-button {\r\n        background-color: #68d391; /* Green reset button */\r\n        color: white;\r\n    }\r\n    .reset-button:hover {\r\n        background-color: #48bb78;\r\n        transform: translateY(-1px);\r\n    }\r\n\r\n    .remove-button {\r\n        background-color: #fc8181; /* Red remove button */\r\n        color: white;\r\n    }\r\n    .remove-button:hover {\r\n        background-color: #e53e3e;\r\n        transform: translateY(-1px);\r\n    }\r\n\r\n    .empty-message, .pre-login-message {\r\n        text-align: center;\r\n        padding: 2rem;\r\n        background: #e9e9e9;\r\n        border-radius: 0.75rem;\r\n        color: #555;\r\n        font-style: italic;\r\n        margin: 1rem;\r\n    }\r\n\r\n    .error-message {\r\n        color: #e53e3e;\r\n        background-color: #fed7d7;\r\n        border: 1px solid #fc8181;\r\n        padding: 0.75rem;\r\n        border-radius: 0.5rem;\r\n        text-align: center;\r\n        margin-top: 1rem;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .highlight {\r\n        color: #3182ce;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .booster-pack-section {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin-top: 1.5rem;\r\n        padding-top: 1.5rem;\r\n        border-top: 1px solid #e2e8f0;\r\n        width: 100%;\r\n    }\r\n\r\n    .booster-pack-section button {\r\n        margin-top: 1rem;\r\n    }\r\n\r\n    .new-cards-display {\r\n        margin-top: 1rem;\r\n        padding: 1rem;\r\n        background: #e2e8f0;\r\n        border-radius: 0.5rem;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 400px;\r\n    }\r\n\r\n    /* Responsive Adjustments */\r\n    @media (max-width: 768px) {\r\n        .main-content {\r\n            flex-direction: column;\r\n        }\r\n        .login-container, .stats-container, .tab-navigation {\r\n            flex-direction: column;\r\n            align-items: stretch;\r\n        }\r\n        .login-container input {\r\n            max-width: 100%;\r\n        }\r\n        .tab-item {\r\n            border-bottom: none; /* No bottom border on stacked tabs */\r\n            border-right: 3px solid transparent; /* Use right border for active indicator */\r\n        }\r\n        .tab-item.active {\r\n            border-bottom-color: transparent;\r\n            border-right-color: #2b6cb0;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 480px) {\r\n        .app-title {\r\n            font-size: 2rem;\r\n        }\r\n        .panel-title {\r\n            font-size: 1.5rem;\r\n        }\r\n        .login-container button, .use-button, .reset-button, .remove-button, .select-button, .booster-button {\r\n            width: 100%; /* Full width buttons on very small screens */\r\n            padding: 0.6rem 1rem;\r\n        }\r\n        .card-list, .deck-list {\r\n            grid-template-columns: 1fr; /* Single column layout for cards */\r\n        }\r\n    }\r\n`;\r\n\r\nfunction App() {\r\n    // --- State Variables ---\r\n    const [allCards, setAllCards] = useState([]); // All cards fetched from the backend (master list)\r\n    const [characterLevel, setCharacterLevel] = useState(1);\r\n    const [wisMod, setWisMod] = useState(0);\r\n    const [intMod, setIntMod] = useState(0);\r\n    const [chaMod, setChaMod] = useState(0);\r\n    const [maxDeckSize, setMaxDeckSize] = useState(0);\r\n    const [selectedCards, setSelectedCards] = useState([]); // Cards currently in the player's ACTIVE deck (persistent instances)\r\n    const [unlockedCardIds, setUnlockedCardIds] = useState([]); // IDs of all cards the player HAS UNLOCKED (owned pool)\r\n    const [error, setError] = useState(''); // General error messages for UI\r\n\r\n    // New states for login/auth\r\n    const [playerId, setPlayerId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [message, setMessage] = useState({ text: '', type: '' });\r\n    const [loading, setLoading] = useState(true); // Loading state for initial data fetch of allCards\r\n\r\n    // New state for tab management\r\n    const [activeTab, setActiveTab] = useState('available'); // 'available' or 'deck'\r\n\r\n    // State for newly acquired cards from booster packs\r\n    const [newlyAcquiredCards, setNewlyAcquiredCards] = useState([]);\r\n\r\n    // --- Helper function to display messages ---\r\n    const showMessage = useCallback((text, type) => {\r\n        setMessage({ text, type });\r\n        // Clear message after 5 seconds for info, 3 seconds for others\r\n        const duration = type === 'info' ? 5000 : 3000;\r\n        setTimeout(() => setMessage({ text: '', type: '' }), duration);\r\n    }, []);\r\n\r\n    // --- API Call: Create Account ---\r\n    const handleCreateAccount = async () => {\r\n        if (!playerId || !password) {\r\n            showMessage('Player ID and password are required to create an account.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/deck/create`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to create account.');\r\n            }\r\n            \r\n            showMessage('Account created successfully! You can now log in.', 'success');\r\n        } catch (err) {\r\n            console.error('Error creating account:', err);\r\n            showMessage(`Failed to create account: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- API Call: Login and Load Deck ---\r\n    const handleLoginAndLoadDeck = async () => {\r\n        if (!playerId || !password) {\r\n            showMessage('Player ID and password are required to log in.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/deck/login`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Authentication failed.');\r\n            }\r\n\r\n            // Load data from backend upon successful login\r\n            setSelectedCards(data.active_deck_instances || []); // Load active deck instances\r\n            setUnlockedCardIds(data.unlocked_card_ids || []); // Load unlocked card IDs\r\n            setCharacterLevel(data.character_level !== undefined ? data.character_level : 1);\r\n            setWisMod(data.wis_mod !== undefined ? data.wis_mod : 0);\r\n            setIntMod(data.int_mod !== undefined ? data.int_mod : 0);\r\n            setChaMod(data.cha_mod !== undefined ? data.cha_mod : 0);\r\n            setIsAuthenticated(true);\r\n            setActiveTab('deck'); // Automatically switch to the deck tab after login\r\n\r\n            showMessage('Login successful! Deck and unlocked cards loaded.', 'success');\r\n        } catch (err) {\r\n            setIsAuthenticated(false);\r\n            console.error('Error logging in:', err);\r\n            showMessage(`Failed to load deck: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- API Call: Save Deck ---\r\n    const handleSaveDeck = async () => {\r\n        if (!isAuthenticated) {\r\n            showMessage('You must be logged in to save your deck.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/deck/save`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    player_id: playerId,\r\n                    password: password, // Send password for re-validation on backend\r\n                    active_deck_instances: selectedCards, // Save active deck instances\r\n                    unlocked_card_ids: unlockedCardIds, // Save unlocked card IDs\r\n                    character_level: characterLevel,\r\n                    wis_mod: wisMod,\r\n                    int_mod: intMod,\r\n                    cha_mod: chaMod,\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to save deck.');\r\n            }\r\n\r\n            showMessage('Deck and unlocked cards saved successfully!', 'success');\r\n        } catch (err) {\r\n            console.error('Error saving deck:', err);\r\n            showMessage(`Failed to save deck: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- Effect to Fetch All Cards on Component Mount ---\r\n    useEffect(() => {\r\n        const fetchAllCards = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const cardsResponse = await fetch(`${API_BASE_URL}/cards`);\r\n                if (!cardsResponse.ok) {\r\n                    throw new Error(`HTTP error fetching cards! status: ${cardsResponse.status}`);\r\n                }\r\n                const cardsData = await cardsResponse.json();\r\n                setAllCards(cardsData);\r\n            } catch (err) {\r\n                console.error('Error fetching initial data:', err);\r\n                showMessage('Failed to fetch initial data: ' + err.message, 'error');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchAllCards();\r\n    }, [showMessage]); // Empty dependency array, this effect runs only once on mount\r\n\r\n    // --- Effect to Calculate Max Deck Size when Character Stats Change ---\r\n    useEffect(() => {\r\n        const calculateDeckSize = async () => {\r\n            setError(''); // Clear previous errors related to deck size\r\n            try {\r\n                const response = await fetch(`${API_BASE_URL}/calculate_deck_size`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        character_level: characterLevel,\r\n                        wis_mod: wisMod,\r\n                        int_mod: intMod,\r\n                        cha_mod: chaMod,\r\n                    }),\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setMaxDeckSize(data.max_deck_size);\r\n            } catch (err) {\r\n                setError('Failed to calculate deck size: ' + err.message);\r\n                console.error('Error calculating deck size:', err);\r\n            }\r\n        };\r\n\r\n        if (!isNaN(characterLevel) && !isNaN(wisMod) && !isNaN(intMod) && !isNaN(chaMod)) {\r\n            calculateDeckSize();\r\n        }\r\n    }, [characterLevel, wisMod, intMod, chaMod]);\r\n\r\n    // --- Booster Pack Logic: Open a new pack ---\r\n    const handleOpenBoosterPack = async () => {\r\n        if (!isAuthenticated) {\r\n            showMessage(\"You must be logged in to open booster packs.\", \"error\");\r\n            return;\r\n        }\r\n        setLoading(true); // Indicate loading while opening pack\r\n        setNewlyAcquiredCards([]); // Clear previous new cards display\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/deck/open_booster`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password, pack_size: 5 }), // Request 5 cards\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to open booster pack.');\r\n            }\r\n\r\n            if (data.new_cards && data.new_cards.length > 0) {\r\n                // Update the unlockedCardIds state with the new IDs\r\n                setUnlockedCardIds(prevIds => {\r\n                    const newIds = data.new_cards.map(card => card.id);\r\n                    return [...new Set([...prevIds, ...newIds])]; // Use Set to prevent duplicates\r\n                });\r\n                setNewlyAcquiredCards(data.new_cards); // Store new cards for display\r\n                showMessage(`You unlocked ${data.new_cards.length} new cards!`, 'success');\r\n            } else {\r\n                showMessage(data.message || \"No new cards were found in the booster pack.\", 'info');\r\n            }\r\n        } catch (err) {\r\n            console.error('Error opening booster pack:', err);\r\n            showMessage(`Failed to open booster pack: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    // --- Deck Building Logic: Add Card ---\r\n    const handleAddCardToDeck = useCallback((card) => {\r\n        if (!isAuthenticated) {\r\n            showMessage(\"You must be logged in to build a deck.\", \"error\");\r\n            return;\r\n        }\r\n        if (selectedCards.length >= maxDeckSize) {\r\n            showMessage('Deck is full! Remove cards to add new ones.', 'error');\r\n            return;\r\n        }\r\n        // Ensure the card being added is actually unlocked\r\n        if (!unlockedCardIds.includes(card.id)) {\r\n            showMessage(\"You don't own this card yet! Open booster packs to unlock more spells.\", \"error\");\r\n            return;\r\n        }\r\n\r\n        const cantripCountInDeck = selectedCards.filter(c => c.type === 'Cantrip').length;\r\n        if (card.type !== 'Cantrip' && cantripCountInDeck === 0 && selectedCards.length === 0) {\r\n             showMessage('Your deck must contain at least one Cantrip! Add a Cantrip first.', 'error');\r\n             return;\r\n        }\r\n\r\n        setSelectedCards(prev => [...prev, {\r\n            ...card,\r\n            instance_id: uuidv4(),\r\n            current_uses: card.default_uses_per_rest\r\n        }]);\r\n        showMessage('Card added to your deck!', 'success');\r\n    }, [isAuthenticated, maxDeckSize, selectedCards, unlockedCardIds, showMessage]);\r\n\r\n    // --- Deck Building Logic: Remove Card ---\r\n    const handleRemoveCardFromDeck = useCallback((instance_id) => {\r\n        const updatedDeck = selectedCards.filter(card => card.instance_id !== instance_id);\r\n        const cantripCount = updatedDeck.filter(c => c.type === 'Cantrip').length;\r\n\r\n        if (cantripCount === 0 && updatedDeck.length > 0) {\r\n            showMessage('Your deck must contain at least one Cantrip! You cannot remove the last one.', 'error');\r\n            return;\r\n        }\r\n        setSelectedCards(updatedDeck);\r\n        showMessage('Card removed from deck.', 'success');\r\n    }, [selectedCards, showMessage]);\r\n\r\n    // --- Card Usage Logic: Mark Card as Used ---\r\n    const handleMarkCardUsed = useCallback(async (instance_id) => {\r\n        const cardToUse = selectedCards.find(card => card.instance_id === instance_id);\r\n        if (!cardToUse) return;\r\n\r\n        if (cardToUse.current_uses > 0) {\r\n            setSelectedCards(prev =>\r\n                prev.map(card =>\r\n                    card.instance_id === instance_id ? { ...card, current_uses: card.current_uses - 1 } : card\r\n                )\r\n            );\r\n\r\n            // Notify backend about the card usage for logging purposes.\r\n            try {\r\n                const response = await fetch(`${API_BASE_URL}/card_used`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        name: cardToUse.name, // Use 'name' to match backend's 'card_name' expectation\r\n                        type: cardToUse.type, // Use 'type' to match backend's 'card_type' expectation\r\n                        deck_card_id: cardToUse.instance_id\r\n                    }),\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                console.log('Backend notification:', data.message);\r\n                console.log('Simulated System Log Entry from Backend:', data.log_entry);\r\n            } catch (err) {\r\n                showMessage('Failed to notify backend of card usage for logging: ' + err.message, 'error');\r\n                console.error('Error sending card used notification:', err);\r\n            }\r\n        } else {\r\n            showMessage(`\"${cardToUse.name}\" has no uses left! It needs a long rest.`, 'error');\r\n        }\r\n    }, [selectedCards, showMessage]);\r\n\r\n    // --- Card Usage Logic: Reset Card Uses (Long Rest) ---\r\n    const handleResetCardUses = useCallback((instance_id) => {\r\n        setSelectedCards(prev =>\r\n            prev.map(card =>\r\n                card.instance_id === instance_id ? { ...card, current_uses: card.default_uses_per_rest } : card\r\n            )\r\n        );\r\n        showMessage('Card uses reset!', 'success');\r\n    }, [showMessage]);\r\n\r\n    // Filter available cards based on what the player has unlocked\r\n    const filteredAvailableCards = allCards.filter(card => unlockedCardIds.includes(card.id));\r\n\r\n\r\n    // --- Main Component Render ---\r\n    return (\r\n        <>\r\n            <style>{AppStyles}</style>\r\n            <div className=\"App\">\r\n                <h1 className=\"app-title\">Spell Trading Cards Manager</h1>\r\n\r\n                {/* Login/Auth Section */}\r\n                <div className=\"login-container\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Player ID\"\r\n                        value={playerId}\r\n                        onChange={(e) => setPlayerId(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <button onClick={handleLoginAndLoadDeck} disabled={loading}>Log In</button>\r\n                    <button onClick={handleCreateAccount} disabled={loading}>Create Account</button>\r\n                    {isAuthenticated && <button onClick={handleSaveDeck} disabled={loading}>Save Deck</button>}\r\n                </div>\r\n\r\n                {/* Character Stats Input Panel */}\r\n                <div className=\"stats-container\">\r\n                    <label>Level: <input type=\"number\" value={characterLevel} onChange={(e) => setCharacterLevel(Math.max(1, parseInt(e.target.value) || 1))} min=\"1\" max=\"20\" /></label>\r\n                    <label>WIS Mod: <input type=\"number\" value={wisMod} onChange={(e) => setWisMod(parseInt(e.target.value) || 0)} /></label>\r\n                    <label>INT Mod: <input type=\"number\" value={intMod} onChange={(e) => setIntMod(parseInt(e.target.value) || 0)} /></label>\r\n                    <label>CHA Mod: <input type=\"number\" value={chaMod} onChange={(e) => setChaMod(parseInt(e.target.value) || 0)} /></label>\r\n                    <p>Max Deck Size: <span className=\"highlight\">{maxDeckSize}</span></p>\r\n                </div>\r\n\r\n                {/* Message Box */}\r\n                {message.text && <div className={`message-box ${message.type}`}>{message.text}</div>}\r\n\r\n                {/* Tab Navigation */}\r\n                <div className=\"tab-navigation\">\r\n                    <div \r\n                        className={`tab-item ${activeTab === 'available' ? 'active' : ''}`} \r\n                        onClick={() => setActiveTab('available')}\r\n                    >\r\n                        Available Spells ({unlockedCardIds.length})\r\n                    </div>\r\n                    <div \r\n                        className={`tab-item ${activeTab === 'deck' ? 'active' : ''}`} \r\n                        onClick={() => setActiveTab('deck')}\r\n                    >\r\n                        Your Deck ({selectedCards.length}/{maxDeckSize})\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Main Content Area - Conditional Rendering based on activeTab */}\r\n                <div className=\"main-content\">\r\n                    {/* Available Cards Section */}\r\n                    {activeTab === 'available' && (\r\n                        <div className=\"card-collection-panel\">\r\n                            <h2 className=\"panel-title\">Available Spells</h2>\r\n                            {loading ? (\r\n                                <p className=\"empty-message\">Loading cards...</p>\r\n                            ) : !isAuthenticated ? (\r\n                                <div className=\"pre-login-message\">\r\n                                    <h3>Log in to see your available spells.</h3>\r\n                                </div>\r\n                            ) : filteredAvailableCards.length > 0 ? (\r\n                                <div className=\"card-list\">\r\n                                    {filteredAvailableCards.map((card) => (\r\n                                        <div key={card.id} className=\"card-item available-card\" onClick={() => handleAddCardToDeck(card)}>\r\n                                            <img\r\n                                                src={`https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`}\r\n                                                alt={card.name}\r\n                                                className=\"card-image\"\r\n                                                onError={(e) => { e.target.onerror = null; e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\"; }}\r\n                                            />\r\n                                            <h3 className=\"card-name\">{card.name} ({card.type})</h3>\r\n                                            <p className=\"card-description\">{card.description}</p>\r\n                                            <p className=\"card-meta\">Rarity: {card.rarity}</p>\r\n                                            <button\r\n                                                onClick={(e) => { e.stopPropagation(); handleAddCardToDeck(card); }} // Stop propagation to prevent parent onClick\r\n                                                disabled={selectedCards.length >= maxDeckSize}\r\n                                                className=\"select-button\"\r\n                                            >\r\n                                                Add to Deck\r\n                                            </button>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"empty-message\">\r\n                                    <p>You haven't unlocked any spells yet! Open a booster pack to get started.</p>\r\n                                    <div className=\"booster-pack-section\">\r\n                                        <button \r\n                                            onClick={handleOpenBoosterPack} \r\n                                            disabled={loading || !isAuthenticated}\r\n                                            className=\"booster-button\"\r\n                                        >\r\n                                            Open Booster Pack\r\n                                        </button>\r\n                                        {newlyAcquiredCards.length > 0 && (\r\n                                            <div className=\"new-cards-display\">\r\n                                                <h4>Newly Unlocked Cards:</h4>\r\n                                                <ul>\r\n                                                    {newlyAcquiredCards.map(card => (\r\n                                                        <li key={card.id}>{card.name} ({card.type})</li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {isAuthenticated && filteredAvailableCards.length > 0 && (\r\n                                <div className=\"booster-pack-section\">\r\n                                    <button \r\n                                        onClick={handleOpenBoosterPack} \r\n                                        disabled={loading || !isAuthenticated}\r\n                                        className=\"booster-button\"\r\n                                    >\r\n                                        Open Booster Pack\r\n                                    </button>\r\n                                    {newlyAcquiredCards.length > 0 && (\r\n                                        <div className=\"new-cards-display\">\r\n                                            <h4>Newly Unlocked Cards:</h4>\r\n                                            <ul>\r\n                                                {newlyAcquiredCards.map(card => (\r\n                                                    <li key={card.id}>{card.name} ({card.type})</li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Built Deck Section */}\r\n                    {activeTab === 'deck' && (\r\n                        <div className=\"built-deck-panel\">\r\n                            <h2 className=\"panel-title\">Your Deck ({selectedCards.length}/{maxDeckSize})</h2>\r\n                            <div className=\"deck-list\">\r\n                                {isAuthenticated ? (\r\n                                    selectedCards.length === 0 ? (\r\n                                        <p className=\"empty-message\">Select cards from the \"Available Spells\" tab to build your deck!</p>\r\n                                    ) : (\r\n                                        selectedCards.map((card) => (\r\n                                            <div key={card.instance_id} className=\"card-item deck-card\">\r\n                                                <img\r\n                                                    src={`https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`}\r\n                                                    alt={card.name}\r\n                                                    className=\"card-image\"\r\n                                                    onError={(e) => { e.target.onerror = null; e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\"; }}\r\n                                                />\r\n                                                <h3 className=\"card-name\">{card.name} ({card.type})</h3>\r\n                                                <p className=\"card-description\">{card.description}</p>\r\n                                                <p className=\"card-uses\">Uses Left: {card.current_uses}/{card.default_uses_per_rest}</p>\r\n                                                <div className=\"card-actions\">\r\n                                                    <button\r\n                                                        onClick={() => handleMarkCardUsed(card.instance_id)}\r\n                                                        disabled={card.current_uses <= 0}\r\n                                                        className=\"use-button\"\r\n                                                    >\r\n                                                        Use\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={() => handleResetCardUses(card.instance_id)}\r\n                                                        className=\"reset-button\"\r\n                                                    >\r\n                                                        Reset Uses\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={() => handleRemoveCardFromDeck(card.instance_id)}\r\n                                                        className=\"remove-button\"\r\n                                                    >\r\n                                                        Remove\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                    )\r\n                                ) : (\r\n                                    <div className=\"pre-login-message\">\r\n                                        <h3>Please log in to load your character and spell deck.</h3>\r\n                                        <p>Once logged in, your deck and stats will appear here.</p>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}