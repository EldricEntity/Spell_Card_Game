{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\DND_Spell_Cards\\\\Spell_Card_Game\\\\DND_Spell_Cards_online\\\\Online_DM_additions\\\\frontend - Copy\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// dnd-spell-cards-app/frontend/src/App.js\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid for unique keys for deck card instances\n\n// IMPORTANT: Update this to your VM's Public IP address (or domain name if configured)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://193.122.147.91:5000/api';\n\n// Inline CSS for self-contained component\nconst AppStyles = `\n    /* Import Google Fonts for a D&D feel */\n    @import url('https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Merriweather:wght@400;700&display=swap');\n\n    body {\n        background-color: #3b2f2f; /* Dark brown background, like a closed grimoire */\n        font-family: 'Merriweather', serif; /* Readable serif for body text */\n        color: #5a4b4b; /* Darker, faded text */\n        margin: 0;\n        padding: 0;\n        line-height: 1.6;\n    }\n\n    .App {\n        display: flex;\n        flex-direction: column;\n        min-height: 100vh;\n        align-items: center;\n        padding: 1.5rem; /* Increased padding */\n        box-sizing: border-box;\n        /* --- NEW WOODEN FLOOR TEXTURE --- */\n        background-image: url('/images/wooden-floor.jpg');\n        background-size: cover;\n        background-position: center; /* Center the background image */\n        background-attachment: fixed;\n        border: 10px solid #4a3e3c; /* Thick, dark border for the \"book\" effect */\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5); /* Deep shadow for depth */\n        margin: 1rem; /* Margin to show body background */\n        border-radius: 1rem; /* Slightly rounded edges for the book */\n    }\n\n    .app-title {\n        font-family: 'Cinzel', serif; /* Ornate font for title */\n        color: #8c6e4e; /* Gold/parchment color */\n        text-align: center;\n        margin-bottom: 2rem;\n        font-size: 3.2rem; /* Larger title */\n        font-weight: 700;\n        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.6); /* Text shadow for depth */\n    }\n\n    .login-container, .stats-container, .dm-section-panel, .player-notification-area, .booster-pack-section { /* Added .booster-pack-section */\n        background: #6a5d5a; /* Muted stone/dark wood color */\n        color: #f5f5dc; /* Off-white for readability */\n        padding: 1.8rem; /* More padding */\n        margin-bottom: 2rem;\n        border-radius: 0.8rem;\n        box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3); /* Inset shadow for carved look */\n        display: flex;\n        gap: 1.2rem;\n        align-items: center;\n        justify-content: center;\n        flex-wrap: wrap;\n        width: 100%;\n        max-width: 1000px; /* Slightly narrower */\n        border: 2px solid #4a3e3c; /* Matching dark border */\n    }\n\n    .login-container input, .dm-section-panel input, .dm-section-panel select {\n        padding: 0.8rem 1rem;\n        border-radius: 0.5rem;\n        border: 1px solid #8c6e4e; /* Goldish border */\n        background: #e9dcc9; /* Parchment background */\n        color: #3b2f2f; /* Dark text */\n        font-family: 'Merriweather', serif;\n        font-size: 1.1rem;\n        flex-grow: 1;\n        max-width: 200px;\n    }\n\n    .login-container button, .use-button, .reset-button, .remove-button, .select-button, .booster-button, .dm-section-panel button, .player-notification-area button {\n        background-color: #8c6e4e; /* Gold/bronze button */\n        color: #f5f5dc; /* Off-white text */\n        padding: 0.8rem 1.5rem;\n        border: 2px solid #5a4b4b; /* Darker edge */\n        border-radius: 0.5rem;\n        cursor: pointer;\n        font-weight: bold;\n        transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;\n        white-space: nowrap;\n        font-family: 'Cinzel', serif; /* Thematic button font */\n        text-transform: uppercase;\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    }\n\n    .login-container button:hover, .select-button:hover:not(:disabled), .booster-button:hover:not(:disabled), .dm-section-panel button:hover:not(:disabled), .player-notification-area button:hover:not(:disabled) {\n        background-color: #a38b6d; /* Lighter gold on hover */\n        transform: translateY(-3px); /* More pronounced lift */\n        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);\n    }\n\n    .select-button:disabled, .use-button:disabled, .booster-button:disabled, .dm-section-panel button:disabled, .player-notification-area button:disabled {\n        background-color: #5a4b4b; /* Muted disabled color */\n        color: #a0a0a0;\n        cursor: not-allowed;\n        transform: none;\n        box-shadow: none;\n    }\n\n    .stats-container {\n        background: #5a4b4b; /* Darker tone for stats */\n        color: #f5f5dc;\n        padding: 1.8rem;\n    }\n\n    .stats-container label {\n        display: flex;\n        align-items: center;\n        gap: 0.6rem;\n        font-weight: 700;\n        font-family: 'Cinzel', serif;\n    }\n\n    .stats-container input {\n        width: 5rem; /* Wider input */\n        padding: 0.4rem;\n        border-radius: 0.4rem;\n        border: 1px solid #8c6e4e;\n        background: #e9dcc9;\n        color: #3b2f2f;\n        text-align: center;\n        font-family: 'Merriweather', serif;\n    }\n\n    .stats-container p {\n        margin: 0;\n        padding: 0;\n        font-size: 1.1rem;\n        font-weight: 700;\n    }\n\n    .message-box {\n        position: fixed;\n        top: 2rem; /* Lowered position */\n        left: 50%;\n        transform: translateX(-50%);\n        padding: 0.9rem 1.8rem;\n        border-radius: 0.6rem;\n        font-weight: bold;\n        z-index: 1000;\n        animation: fadein 0.5s, fadeout 0.5s 4.5s; /* Longer display */\n        text-align: center;\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);\n        font-family: 'Cinzel', serif;\n        text-transform: uppercase;\n    }\n\n    .message-box.success {\n        background-color: #488c5d; /* Darker green */\n        color: white;\n    }\n\n    .message-box.error {\n        background-color: #a33b3b; /* Darker red */\n        color: white;\n    }\n\n    .message-box.info {\n        background-color: #6a5d5a;\n        color: #f5f5dc;\n    }\n\n    @keyframes fadein {\n        from { opacity: 0; transform: translateX(-50%) translateY(-20px); }\n        to   { opacity: 1; transform: translateX(-50%) translateY(0); }\n    }\n\n    @keyframes fadeout {\n        from { opacity: 1; transform: translateX(-50%) translateY(0); }\n        to   { opacity: 0; transform: translateX(-50%) translateY(-20px); }\n    }\n\n    .tab-navigation {\n        display: flex;\n        justify-content: center;\n        width: 100%;\n        max-width: 1000px;\n        margin-bottom: 2rem;\n        background-color: #5a4b4b; /* Darker tab background */\n        border-radius: 0.8rem;\n        box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.4);\n        overflow: hidden;\n        border: 2px solid #4a3e3c;\n    }\n\n    .tab-item {\n        flex: 1;\n        text-align: center;\n        padding: 1.2rem 1.8rem; /* More generous padding */\n        cursor: pointer;\n        font-weight: bold;\n        color: #e9dcc9; /* Parchment text */\n        background-color: #5a4b4b;\n        transition: background-color 0.3s ease, color 0.3s ease;\n        border-bottom: 4px solid transparent; /* Thicker active indicator */\n        font-family: 'Cinzel', serif;\n        text-transform: uppercase;\n    }\n\n    .tab-item:hover:not(.active) {\n        background-color: #6a5d5a; /* Slightly lighter on hover */\n    }\n\n    .tab-item.active {\n        background-color: #8c6e4e; /* Gold active tab */\n        color: white;\n        border-bottom-color: #a38b6d; /* Lighter gold accent */\n    }\n\n    .main-content {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 2rem; /* Increased gap */\n        width: 100%;\n        max-width: 1000px;\n        flex: 1;\n    }\n\n    .card-collection-panel, .built-deck-panel {\n        background: #e9dcc9; /* Parchment background for panels */\n        border-radius: 0.8rem;\n        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\n        padding: 2rem; /* More padding */\n        flex: 1;\n        min-width: 320px; /* Slightly larger min-width */\n        display: flex;\n        flex-direction: column;\n        border: 2px solid #8c6e4e; /* Gold border */\n    }\n\n    /* Player's Available Spells panel - now scrollable */\n    .card-collection-panel {\n        max-height: 700px; /* Fixed height for scrolling */\n        overflow-y: auto; /* Enable vertical scrolling */\n    }\n\n    .panel-title {\n        font-family: 'Cinzel', serif;\n        text-align: center;\n        color: #3b2f2f; /* Dark text for title */\n        margin-top: 0;\n        margin-bottom: 2rem;\n        font-size: 2.2rem; /* Larger panel title */\n        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\n    }\n\n    .card-list, .deck-list {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr)); /* Larger cards */\n        gap: 1.5rem; /* Increased gap */\n        flex-grow: 1;\n    }\n\n    .card-item {\n        background: #fdf6e6; /* Lighter parchment for individual cards */\n        border: 1px solid #d3c4a2; /* Faded parchment border */\n        border-radius: 0.6rem;\n        padding: 1.2rem;\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n        transition: transform 0.2s ease, box-shadow 0.2s ease;\n        display: flex;\n        flex-direction: column;\n        text-align: center;\n        font-family: 'Merriweather', serif;\n    }\n\n    .card-item:hover.available-card {\n        transform: translateY(-7px); /* More dramatic lift */\n        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.25);\n        cursor: pointer;\n    }\n\n    .card-item.deck-card {\n        background: #e9dcc9; /* Muted parchment for deck cards */\n        border: 1px solid #8c6e4e; /* Goldish border for deck cards */\n    }\n\n    .card-image {\n        max-width: 100%;\n        height: auto;\n        border-radius: 0.4rem;\n        margin-bottom: 1rem;\n        border: 1px solid #8c6e4e; /* Gold frame for image */\n    }\n    \n    .card-backlash {\n        font-family: 'Merriweather', serif;\n        font-size: 0.85rem;\n        color: #a33b3b; /* Red color for backlash effect */\n        margin-bottom: 0.5rem;\n        font-weight: bold;\n        text-transform: uppercase;\n    }\n\n    .card-name {\n        font-family: 'Cinzel', serif;\n        font-weight: 700;\n        font-size: 1.25rem;\n        color: #3b2f2f;\n        margin-bottom: 0.6rem;\n    }\n\n    .card-type {\n        font-style: italic;\n        color: #5a4b4b;\n        margin-bottom: 0.7rem;\n        font-size: 0.95rem;\n    }\n\n    .card-description {\n        font-size: 0.9rem;\n        color: #4a3e3c;\n        flex-grow: 1;\n        margin-bottom: 0.7rem; /* Adjusted margin */\n    }\n\n    .card-effect {\n        font-size: 0.9rem;\n        color: #4a6d8c; /* Blue color for effect */\n        margin-bottom: 0.7rem; /* Adjusted margin */\n        font-style: italic;\n    }\n\n    .card-meta, .card-uses {\n        font-size: 0.85rem;\n        color: #5a4b4b;\n        margin-bottom: 0.6rem;\n    }\n    \n    .card-meta span {\n        font-weight: bold;\n        color: #3b2f2f;\n    }\n\n    .card-actions {\n        margin-top: 1rem;\n        display: flex;\n        flex-wrap: wrap;\n        gap: 0.6rem;\n        justify-content: center;\n    }\n\n    .use-button {\n        background-color: #4a6d8c; /* Muted blue for use */\n        color: white;\n    }\n    .use-button:hover:not(:disabled) {\n        background-color: #3a5c78;\n        transform: translateY(-2px);\n    }\n\n    .reset-button {\n        background-color: #5a8c4a; /* Muted green for reset */\n        color: white;\n    }\n    .reset-button:hover {\n        background-color: #4a783a;\n        transform: translateY(-2px);\n    }\n\n    .remove-button {\n        background-color: #8c4a4a; /* Muted red for remove */\n        color: white;\n    }\n    .remove-button:hover {\n        background-color: #783a3a;\n        transform: translateY(-2px);\n    }\n\n    .empty-message, .pre-login-message {\n        text-align: center;\n        padding: 2.5rem;\n        background: #d3c4a2; /* Lighter parchment */\n        border-radius: 0.8rem;\n        color: #5a4b4b;\n        font-style: italic;\n        margin: 1.5rem;\n        border: 1px solid #8c6e4e;\n        box-shadow: inset 0 1px 5px rgba(0, 0, 0, 0.2);\n    }\n\n    .error-message {\n        color: #a33b3b;\n        background-color: #fce2e2;\n        border: 1px solid #a33b3b;\n        padding: 0.8rem;\n        border-radius: 0.6rem;\n        text-align: center;\n        margin-top: 1.5rem;\n        font-weight: bold;\n        font-family: 'Merriweather', serif;\n    }\n\n    .highlight {\n        color: #4a6d8c; /* Muted blue highlight */\n        font-weight: bold;\n    }\n\n    /* Booster pack section on Player side - now has its own styling for layout */\n    .booster-pack-section {\n        flex-direction: column;\n        align-items: center;\n        padding-top: 1.8rem; /* Use the same padding as other panels */\n        border-top: 2px solid #4a3e3c; /* Consistent border */\n        width: 100%;\n        max-width: 1000px;\n        margin-top: 0; /* Adjusted since it's now a separate block */\n    }\n\n    .booster-pack-section button {\n        margin-top: 1.5rem;\n    }\n\n    .new-cards-display {\n        margin-top: 1.5rem;\n        padding: 1.5rem;\n        background: #d3c4a2;\n        border-radius: 0.6rem;\n        text-align: center;\n        width: 100%;\n        max-width: 450px;\n        border: 1px solid #8c6e4e;\n        box-shadow: inset 0 1px 5px rgba(0, 0, 0, 0.2);\n        font-family: 'Merriweather', serif;\n    }\n    .new-cards-display h4 {\n        font-family: 'Cinzel', serif;\n        color: #3b2f2f;\n        margin-bottom: 0.8rem;\n        font-size: 1.2rem;\n    }\n    .new-cards-display ul {\n        list-style-type: none;\n        padding: 0;\n        margin: 0;\n    }\n    .new-cards-display li {\n        margin-bottom: 0.3rem;\n        color: #4a3e3c;\n        font-size: 0.95rem;\n    }\n\n    /* DM Screen Specific Styles */\n    .dm-screen-container {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        max-width: 1000px;\n        gap: 1.5rem;\n    }\n\n    .dm-sub-nav {\n        display: flex;\n        justify-content: center;\n        background-color: #5a4b4b;\n        border-radius: 0.8rem;\n        box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.4);\n        overflow: hidden;\n        border: 2px solid #4a3e3c;\n    }\n\n    .dm-sub-nav-item {\n        flex: 1;\n        text-align: center;\n        padding: 1rem 1.5rem;\n        cursor: pointer;\n        font-weight: bold;\n        color: #e9dcc9;\n        background-color: #5a4b4b;\n        transition: background-color 0.3s ease, color 0.3s ease;\n        border-bottom: 3px solid transparent;\n        font-family: 'Cinzel', serif;\n        text-transform: uppercase;\n        font-size: 0.95rem;\n    }\n\n    .dm-sub-nav-item:hover:not(.active) {\n        background-color: #6a5d5a;\n    }\n\n    .dm-sub-nav-item.active {\n        background-color: #8c6e4e;\n        color: white;\n        border-bottom-color: #a38b6d;\n    }\n\n    .dm-section-panel {\n        flex-direction: column;\n        align-items: stretch;\n        gap: 1.5rem;\n        max-width: none; /* Override max-width for full panel use */\n    }\n\n    .dm-session-list ul, .dm-player-list ul, .dm-card-distribution-list ul, .player-notification-area ul {\n        list-style-type: none;\n        padding: 0;\n        margin: 0;\n    }\n\n    .dm-session-list li, .dm-player-list li, .dm-card-distribution-list li, .player-notification-area li {\n        background: #d3c4a2;\n        padding: 0.8rem 1.2rem;\n        margin-bottom: 0.5rem;\n        border-radius: 0.4rem;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        font-family: 'Merriweather', serif;\n        color: #3b2f2f;\n        box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n        cursor: pointer;\n        transition: background-color 0.2s ease;\n    }\n\n    .dm-session-list li:hover, .dm-player-list li:hover:not(.no-hover), .dm-card-distribution-list li:hover, .player-notification-area li:hover {\n        background-color: #c9bda5;\n    }\n\n    .dm-player-id {\n        font-weight: bold;\n        color: #4a6d8c;\n    }\n\n    .dm-player-view-details {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 2rem;\n        margin-top: 1.5rem;\n    }\n\n    .dm-player-stats-panel, .dm-player-deck-panel, .dm-player-collection-panel { /* Added .dm-player-collection-panel */\n        flex: 1;\n        min-width: 300px;\n        background: #fdf6e6;\n        border-radius: 0.6rem;\n        padding: 1.5rem;\n        box-shadow: inset 0 1px 5px rgba(0,0,0,0.2);\n        border: 1px solid #8c6e4e;\n        color: #3b2f2f;\n    }\n    .dm-player-stats-panel h4, .dm-player-deck-panel h4, .dm-player-collection-panel h4 { /* Added .dm-player-collection-panel */\n        font-family: 'Cinzel', serif;\n        font-size: 1.3rem;\n        margin-top: 0;\n        margin-bottom: 1rem;\n        color: #3b2f2f;\n        text-align: center;\n    }\n    .dm-player-stats-panel p {\n        margin-bottom: 0.5rem;\n    }\n    .dm-player-stats-panel span {\n        font-weight: bold;\n        color: #4a6d8c;\n    }\n    \n    /* DM's player deck/collection cards are smaller */\n    .dm-player-deck-panel .card-list,\n    .dm-player-collection-panel .card-list {\n        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); /* Smaller cards for DM view */\n    }\n\n    /* New style for scrollable collection panel */\n    .dm-player-collection-panel {\n        max-height: 500px; /* Fixed height for scrolling */\n        overflow-y: auto; /* Enable vertical scrolling */\n        min-width: 320px; /* Ensure it doesn't get too small */\n        flex: 1; /* Allow it to grow, but respect max-height */\n    }\n\n    .dm-distribution-controls {\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n        margin-top: 2rem;\n        padding-top: 1.5rem;\n        border-top: 1px dashed #8c6e4e;\n        align-items: center;\n    }\n\n    .dm-distribution-controls .input-group {\n        display: flex;\n        gap: 0.8rem;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    .dm-card-distribution-list {\n        margin-top: 1rem;\n        max-height: 400px; /* Constrain height */\n        overflow-y: auto; /* Enable scrolling */\n        border: 1px solid #8c6e4e;\n        border-radius: 0.6rem;\n        background: #d3c4a2;\n        padding: 0.5rem;\n    }\n    .dm-card-distribution-list li {\n        cursor: default; /* No hover effect for these list items */\n        background: #e9dcc9;\n    }\n    .dm-card-distribution-list li .card-name {\n        margin: 0;\n        font-size: 1rem;\n        font-weight: normal;\n    }\n    .dm-card-distribution-list li button {\n        padding: 0.4rem 0.8rem;\n        font-size: 0.8rem;\n    }\n\n    /* Player Notification Area specific styling */\n    .player-notification-area {\n        flex-direction: column;\n        align-items: stretch;\n        margin-top: 1rem;\n        padding-top: 1rem;\n        border-top: 1px solid #8c6e4e;\n        background: #a38b6d; /* Lighter gold for notifications */\n        color: #3b2f2f;\n    }\n    .player-notification-area h3 {\n        color: #3b2f2f;\n        margin-bottom: 1rem;\n        font-family: 'Cinzel', serif;\n        text-align: center;\n    }\n    .player-notification-area li {\n        background: #fdf6e6; /* Parchment background for individual notifications */\n        border: 1px solid #8c6e4e;\n        margin-bottom: 0.8rem;\n    }\n    .player-notification-area li button {\n        padding: 0.6rem 1rem;\n        font-size: 0.9rem;\n    }\n    .player-notification-area .notification-text {\n        font-weight: bold;\n        flex-grow: 1;\n        margin-right: 1rem;\n    }\n\n\n\n    /* DM Toggle Specific Styles */\n    .dm-toggle-container {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        margin-left: 1rem; /* Adjust positioning as needed */\n        font-family: 'Merriweather', serif;\n        color: #f5f5dc;\n        font-weight: bold;\n        white-space: nowrap;\n    }\n\n    .dm-toggle-switch {\n        position: relative;\n        display: inline-block;\n        width: 48px; /* Wider switch */\n        height: 28px; /* Taller switch */\n    }\n\n    .dm-toggle-switch input {\n        opacity: 0;\n        width: 0;\n        height: 0;\n    }\n\n    .dm-slider {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: #ccc;\n        transition: 0.4s;\n        border-radius: 28px; /* More rounded */\n    }\n\n    .dm-slider:before {\n        position: absolute;\n        content: \"\";\n        height: 20px; /* Smaller circle */\n        width: 20px;\n        left: 4px;\n        bottom: 4px;\n        background-color: white;\n        transition: 0.4s;\n        border-radius: 50%;\n    }\n\n    input:checked + .dm-slider {\n        background-color: #8c6e4e; /* Gold when checked */\n    }\n\n    input:focus + .dm-slider {\n        box-shadow: 0 0 1px #8c6e4e;\n    }\n\n    input:checked + .dm-slider:before {\n        transform: translateX(20px); /* Move further */\n    }\n\n    /* --- SCROLLBAR THEMEING --- */\n    /* For Webkit browsers (Chrome, Safari, Edge) */\n    ::-webkit-scrollbar {\n        width: 12px; /* Width of the vertical scrollbar */\n        height: 12px; /* Height of the horizontal scrollbar */\n    }\n\n    ::-webkit-scrollbar-track {\n        background: #5a4b4b; /* Darker track color, matching muted stone */\n        border-radius: 10px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n        background: #8c6e4e; /* Gold/bronze thumb color */\n        border-radius: 10px;\n        border: 2px solid #6a5d5a; /* Slightly darker border for depth */\n    }\n\n    ::-webkit-scrollbar-thumb:hover {\n        background: #a38b6d; /* Lighter gold on hover */\n    }\n\n    /* For Firefox */\n    html {\n        scrollbar-width: thin; /* 'auto' | 'thin' | 'none' */\n        scrollbar-color: #8c6e4e #5a4b4b; /* thumb-color track-color */\n    }\n\n\n    /* Responsive Adjustments (ensure DM screen is also responsive) */\n    @media (max-width: 768px) {\n        .dm-sub-nav {\n            flex-direction: column;\n        }\n        .dm-sub-nav-item {\n            border-bottom: none;\n            border-right: 3px solid transparent;\n        }\n        .dm-sub-nav-item.active {\n            border-bottom-color: transparent;\n            border-right-color: #a38b6d;\n        }\n        .dm-player-view-details {\n            flex-direction: column;\n        }\n        .login-container {\n            flex-direction: column;\n            align-items: stretch;\n        }\n        .dm-toggle-container {\n            margin-left: 0;\n            margin-top: 1rem;\n            justify-content: center;\n            order: -1; /* Move toggle to top in mobile view */\n        }\n        .login-container input {\n            max-width: 100%;\n        }\n        .dm-distribution-controls .input-group {\n            flex-direction: column;\n        }\n        .dm-section-panel input, .dm-section-panel select {\n             max-width: 100%;\n        }\n        .card-collection-panel { /* Adjust player collection panel for mobile */\n            max-height: 500px;\n        }\n    }\n    @media (max-width: 480px) {\n        .dm-sub-nav-item {\n            padding: 0.8rem 1rem;\n            font-size: 0.85rem;\n        }\n    }\n`;\nfunction App() {\n  _s();\n  // --- State Variables ---\n  const [allCards, setAllCards] = useState([]); // All cards fetched from the backend (master list)\n  const [characterLevel, setCharacterLevel] = useState(1);\n  const [wisMod, setWisMod] = useState(0);\n  const [intMod, setIntMod] = useState(0);\n  const [chaMod, setChaMod] = useState(0);\n  const [maxDeckSize, setMaxDeckSize] = useState(0);\n  const [activeDeckInstances, setActiveDeckInstances] = useState([]); // Cards currently in the player's ACTIVE deck (persistent instances)\n  const [unlockedCollectionIds, setUnlockedCollectionIds] = useState([]); // IDs of all UNIQUE card types the player HAS UNLOCKED (owned pool)\n  const [error, setError] = useState(''); // General error messages for UI\n\n  // New states for login/auth\n  const [playerId, setPlayerId] = useState('');\n  const [password, setPassword] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [message, setMessage] = useState({\n    text: '',\n    type: ''\n  });\n  const [loading, setLoading] = useState(true); // Loading state for initial data fetch of allCards\n\n  // New state for tab management\n  const [activeTab, setActiveTab] = useState('available'); // 'available', 'deck', or 'dm_screen'\n\n  // State for newly acquired cards from booster packs\n  const [newlyAcquiredCards, setNewlyAcquiredCards] = useState([]);\n  const [lastOpenedPackType, setLastOpenedPackType] = useState('');\n  const [prePackUnlockedIds, setPrePackUnlockedIds] = useState([]); // Store state before opening pack for duplicate check\n\n  // --- DM/SESSION STATES ---\n  const [isDMMode, setIsDMMode] = useState(false); // New state for DM mode toggle\n  const [sessionNameInput, setSessionNameInput] = useState('');\n  const [sessionCodeInput, setSessionCodeInput] = useState('');\n  const [dmSessions, setDmSessions] = useState([]); // Sessions created by THIS DM\n  const [selectedDmSession, setSelectedDmSession] = useState(null); // The session the DM is currently viewing\n  const [playersInSelectedDmSession, setPlayersInSelectedDmSession] = useState([]); // Players in the selected DM session\n  const [selectedPlayerForDMView, setSelectedPlayerForDMView] = useState(null); // The specific player DM is inspecting\n  const [selectedPlayerDMData, setSelectedPlayerDMData] = useState(null); // Full card data for the inspected player\n  const [activeDmTab, setActiveDmTab] = useState('my_sessions'); // 'create_session', 'my_sessions', 'view_player'\n  const [selectedPackTypeToGive, setSelectedPackTypeToGive] = useState('Common Pack'); // For DM giving packs\n  const [searchCardInputForDM, setSearchCardInputForDM] = useState(''); // For DM searching cards to give\n\n  // --- NEW PENDING ITEM STATES FOR PLAYER ---\n  const [pendingBoosterPacks, setPendingBoosterPacks] = useState([]);\n  const [pendingCards, setPendingCards] = useState([]);\n\n  // --- Helper function to display messages ---\n  const showMessage = useCallback((text, type) => {\n    setMessage({\n      text,\n      type\n    });\n    // Clear message after 5 seconds for info, 3 seconds for others\n    const duration = type === 'info' ? 5000 : 3000;\n    setTimeout(() => setMessage({\n      text: '',\n      type: ''\n    }), duration);\n  }, []);\n\n  // --- API Call: Create Account ---\n  const handleCreateAccount = async () => {\n    if (!playerId || !password) {\n      showMessage('Player ID and password are required to create an account.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/deck/create`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to create account.');\n      }\n      showMessage('Account created successfully! You can now log in.', 'success');\n    } catch (err) {\n      console.error('Error creating account:', err);\n      showMessage(`Failed to create account: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- API Call: Login and Load Deck ---\n  const handleLoginAndLoadDeck = async () => {\n    if (!playerId || !password) {\n      showMessage('Player ID and password are required to log in.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/deck/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Authentication failed.');\n      }\n\n      // Load data from backend upon successful login\n      setActiveDeckInstances(data.active_deck_instances || []); // Load active deck instances\n      setUnlockedCollectionIds(data.unlocked_collection_ids || []); // Load unlocked card IDs (now includes duplicates)\n      setCharacterLevel(data.character_level !== undefined ? data.character_level : 1);\n      setWisMod(data.wis_mod !== undefined ? data.wis_mod : 0);\n      setIntMod(data.int_mod !== undefined ? data.int_mod : 0);\n      setChaMod(data.cha_mod !== undefined ? data.cha_mod : 0);\n      setPendingBoosterPacks(data.pending_booster_packs || []); // Load pending booster packs\n      setPendingCards(data.pending_cards || []); // Load pending cards\n      setIsAuthenticated(true);\n      setActiveTab('deck'); // Automatically switch to the deck tab after login\n\n      showMessage('Login successful! Deck and unlocked cards loaded.', 'success');\n    } catch (err) {\n      setIsAuthenticated(false);\n      console.error('Error logging in:', err);\n      showMessage(`Failed to load deck: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- API Call: Save Deck ---\n  const handleSaveDeck = async () => {\n    if (!isAuthenticated) {\n      showMessage('You must be logged in to save your deck.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/deck/save`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password,\n          // Send password for re-validation on backend\n          active_deck_instances: activeDeckInstances,\n          // Save active deck instances\n          unlocked_collection_ids: unlockedCollectionIds,\n          // Save unlocked card IDs (now includes duplicates)\n          character_level: characterLevel,\n          wis_mod: wisMod,\n          int_mod: intMod,\n          cha_mod: chaMod\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to save deck.');\n      }\n      showMessage('Deck and unlocked cards saved successfully!', 'success');\n    } catch (err) {\n      console.error('Error saving deck:', err);\n      showMessage(`Failed to save deck: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Effect to Fetch All Cards on Component Mount ---\n  useEffect(() => {\n    const fetchAllCards = async () => {\n      setLoading(true);\n      try {\n        const cardsResponse = await fetch(`${API_BASE_URL}/cards`);\n        if (!cardsResponse.ok) {\n          throw new Error(`HTTP error fetching cards! status: ${cardsResponse.status}`);\n        }\n        const cardsData = await cardsResponse.json();\n        setAllCards(cardsData);\n      } catch (err) {\n        console.error('Error fetching initial data:', err);\n        showMessage('Failed to fetch initial data: ' + err.message, 'error');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllCards();\n  }, [showMessage]); // Empty dependency array, this effect runs only once on mount\n\n  // --- Effect to Calculate Max Deck Size when Character Stats Change ---\n  useEffect(() => {\n    const calculateDeckSize = async () => {\n      setError(''); // Clear previous errors related to deck size\n      try {\n        const response = await fetch(`${API_BASE_URL}/calculate_deck_size`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            character_level: characterLevel,\n            wis_mod: wisMod,\n            int_mod: intMod,\n            cha_mod: chaMod\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setMaxDeckSize(data.max_deck_size);\n      } catch (err) {\n        setError('Failed to calculate deck size: ' + err.message);\n        console.error('Error calculating deck size:', err);\n      }\n    };\n    if (!isNaN(characterLevel) && !isNaN(wisMod) && !isNaN(intMod) && !isNaN(chaMod)) {\n      calculateDeckSize();\n    }\n  }, [characterLevel, wisMod, intMod, chaMod]);\n\n  // --- Booster Pack Logic: Open a new pack (Player initiated) ---\n  const handleOpenBoosterPack = async () => {\n    if (!isAuthenticated) {\n      showMessage(\"You must be logged in to open booster packs.\", \"error\");\n      return;\n    }\n    setLoading(true); // Indicate loading while opening pack\n    setNewlyAcquiredCards([]); // Clear previous new cards display\n    setLastOpenedPackType('');\n    setPrePackUnlockedIds(unlockedCollectionIds); // Store current collection for duplicate check\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/deck/open_booster`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password\n        }) // Backend determines pack size\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to open booster pack.');\n      }\n      setLastOpenedPackType(data.pack_type);\n      if (data.new_cards && data.new_cards.length > 0) {\n        // Update the unlockedCollectionIds state with the new IDs (now including duplicates)\n        setUnlockedCollectionIds(data.updated_unlocked_collection_ids || []);\n        setNewlyAcquiredCards(data.new_cards); // Store new cards for display\n        showMessage(`You opened a ${data.pack_type} and acquired ${data.new_cards.length} cards!`, 'success');\n      } else {\n        showMessage(data.message || \"No new cards were found in the booster pack.\", 'info');\n      }\n    } catch (err) {\n      console.error('Error opening booster pack:', err);\n      showMessage(`Failed to open booster pack: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Player: Open a pending booster pack ---\n  const handleOpenPendingBooster = async () => {\n    if (!isAuthenticated || pendingBoosterPacks.length === 0) {\n      showMessage('No pending booster packs to open.', 'error');\n      return;\n    }\n    setLoading(true);\n    setNewlyAcquiredCards([]); // Clear previous new cards display\n    setLastOpenedPackType('');\n    setPrePackUnlockedIds(unlockedCollectionIds); // Store current collection for duplicate check\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/player/open_pending_booster`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to open pending booster pack.');\n      }\n      setLastOpenedPackType(data.pack_type);\n      setUnlockedCollectionIds(data.updated_unlocked_collection_ids || []);\n      setPendingBoosterPacks(data.updated_pending_booster_packs || []);\n      setNewlyAcquiredCards(data.new_cards || []);\n      showMessage(`You opened a ${data.pack_type} and acquired ${data.new_cards.length} cards!`, 'success');\n    } catch (err) {\n      console.error('Error opening pending booster pack:', err);\n      showMessage(`Failed to open pending booster pack: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Player: Accept a pending card ---\n  const handleAcceptPendingCard = async cardIdToAccept => {\n    if (!isAuthenticated || !cardIdToAccept) {\n      showMessage('No pending card selected or you are not logged in.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/player/accept_pending_card`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password,\n          card_id: cardIdToAccept\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to accept pending card.');\n      }\n      setUnlockedCollectionIds(data.updated_unlocked_collection_ids || []);\n      setPendingCards(data.updated_pending_cards || []);\n      showMessage(`You accepted \"${data.card_name}\" into your collection!`, 'success');\n    } catch (err) {\n      console.error('Error accepting pending card:', err);\n      showMessage(`Failed to accept pending card: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Deck Building Logic: Add Card ---\n  const handleAddCardToDeck = useCallback(card => {\n    if (!isAuthenticated) {\n      showMessage(\"You must be logged in to build a deck.\", \"error\");\n      return;\n    }\n    if (activeDeckInstances.length >= maxDeckSize) {\n      showMessage('Deck is full! Remove cards to add new ones.', 'error');\n      return;\n    }\n    const ownedCopiesOfThisCard = unlockedCollectionIds.filter(id => id === card.id).length;\n    const copiesInActiveDeck = activeDeckInstances.filter(c => c.id === card.id).length;\n    if (copiesInActiveDeck >= ownedCopiesOfThisCard) {\n      showMessage(`You have already added all owned copies of ${card.name} to your deck. Open more booster packs to get more!`, 'error');\n      return;\n    }\n    const cantripCountInDeck = activeDeckInstances.filter(c => c.type === 'Cantrip').length;\n    if (card.type !== 'Cantrip' && cantripCountInDeck === 0 && activeDeckInstances.length === 0) {\n      showMessage('Your deck must contain at least one Cantrip! Add a Cantrip first.', 'error');\n      return;\n    }\n\n    // Add a new instance of the card to the active deck\n    setActiveDeckInstances(prev => [...prev, {\n      ...card,\n      instance_id: uuidv4(),\n      // Assign a unique ID for this specific copy in the active deck\n      current_uses: card.default_uses_per_rest\n    }]);\n    showMessage('Card added to your deck!', 'success');\n  }, [isAuthenticated, maxDeckSize, activeDeckInstances, unlockedCollectionIds, showMessage]);\n\n  // --- Deck Building Logic: Remove Card ---\n  const handleRemoveCardFromDeck = useCallback(instance_id => {\n    const updatedDeck = activeDeckInstances.filter(card => card.instance_id !== instance_id);\n    const cantripCount = updatedDeck.filter(c => c.type === 'Cantrip').length;\n    if (cantripCount === 0 && updatedDeck.length > 0) {\n      showMessage('Your deck must contain at least one Cantrip! You cannot remove the last one.', 'error');\n      return;\n    }\n    setActiveDeckInstances(updatedDeck);\n    showMessage('Card removed from deck.', 'success');\n  }, [activeDeckInstances, showMessage]);\n\n  // --- Card Usage Logic: Mark Card as Used ---\n  const handleMarkCardUsed = useCallback(async instance_id => {\n    const cardToUse = activeDeckInstances.find(card => card.instance_id === instance_id);\n    if (!cardToUse) return;\n    if (cardToUse.current_uses > 0) {\n      setActiveDeckInstances(prev => prev.map(card => card.instance_id === instance_id ? {\n        ...card,\n        current_uses: card.current_uses - 1\n      } : card));\n\n      // Notify backend about the card usage for logging purposes.\n      try {\n        const response = await fetch(`${API_BASE_URL}/card_used`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: cardToUse.name,\n            // Use 'name' to match backend's 'card_name' expectation\n            type: cardToUse.type,\n            // Use 'type' to match backend's 'card_type' expectation\n            deck_card_id: cardToUse.instance_id\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Backend notification:', data.message);\n        console.log('Simulated System Log Entry from Backend:', data.log_entry);\n      } catch (err) {\n        showMessage('Failed to notify backend of card usage for logging: ' + err.message, 'error');\n        console.error('Error sending card used notification:', err);\n      }\n    } else {\n      showMessage(`\"${cardToUse.name}\" has no uses left! It needs a long rest.`, 'error');\n    }\n  }, [activeDeckInstances, showMessage]);\n\n  // --- Card Usage Logic: Reset Card Uses (Long Rest) ---\n  const handleResetCardUses = useCallback(instance_id => {\n    setActiveDeckInstances(prev => prev.map(card => card.instance_id === instance_id ? {\n      ...card,\n      current_uses: card.default_uses_per_rest\n    } : card));\n    showMessage('Card uses reset!', 'success');\n  }, [showMessage]);\n\n  // Filter available cards based on what the player has unlocked\n  // And also count how many copies of each unique card ID the player owns\n  const filteredAvailableCardsWithCounts = allCards.filter(card => unlockedCollectionIds.includes(card.id)) // Only show cards of types user has unlocked\n  .reduce((acc, card) => {\n    // Group by card ID and count occurrences\n    if (!acc[card.id]) {\n      const count = unlockedCollectionIds.filter(id => id === card.id).length;\n      acc[card.id] = {\n        ...card,\n        owned_copies: count\n      };\n    }\n    return acc;\n  }, {});\n  const uniqueUnlockedCards = Object.values(filteredAvailableCardsWithCounts);\n\n  // --- DM/Session Functions ---\n\n  // Effect to fetch DM sessions whenever DM mode is active and player ID is set\n  const fetchMyDMSessions = useCallback(async () => {\n    if (!isAuthenticated || !playerId || !password) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/dm/my_sessions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to fetch your sessions.');\n      }\n      // Fetch player counts for each session here\n      const sessionsWithPlayerCounts = await Promise.all((data.sessions || []).map(async session => {\n        const playersResponse = await fetch(`${API_BASE_URL}/dm/sessions/${session.session_id}/players`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            player_id: playerId,\n            password: password\n          })\n        });\n        const playersData = await playersResponse.json();\n        return {\n          ...session,\n          player_count: playersData.players ? playersData.players.length : 0\n        };\n      }));\n      setDmSessions(sessionsWithPlayerCounts);\n    } catch (err) {\n      console.error('Error fetching DM sessions or player counts:', err);\n      showMessage(`Failed to fetch DM sessions: ${err.message}`, 'error');\n      setDmSessions([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, playerId, password, showMessage]);\n  useEffect(() => {\n    if (isAuthenticated && isDMMode && playerId && activeDmTab === 'my_sessions') {\n      fetchMyDMSessions();\n    }\n  }, [isAuthenticated, isDMMode, playerId, activeDmTab, fetchMyDMSessions]);\n  const handleCreateSession = async () => {\n    if (!playerId || !password) {\n      showMessage('You must be logged in to create a session.', 'error');\n      return;\n    }\n    if (!sessionNameInput) {\n      showMessage('Session name is required.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/dm/create_session`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password,\n          session_name: sessionNameInput\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to create session.');\n      }\n      showMessage(`Session \"${data.session_name}\" created with code: ${data.session_code}`, 'success');\n      setSessionNameInput(''); // Clear input\n      fetchMyDMSessions(); // Refresh DM's session list\n    } catch (err) {\n      console.error('Error creating session:', err);\n      showMessage(`Failed to create session: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleJoinSession = async () => {\n    if (!isAuthenticated) {\n      // Players must be authenticated to join\n      showMessage('You must be logged in to join a session.', 'error');\n      return;\n    }\n    if (isDMMode) {\n      // DMs cannot join sessions as players\n      showMessage('You are in DM mode. Switch to Player mode to join a session.', 'error');\n      return;\n    }\n    if (!sessionCodeInput) {\n      showMessage('Session code is required.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/player/join_session`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password,\n          session_code: sessionCodeInput\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to join session.');\n      }\n      showMessage(data.message, 'success');\n      setSessionCodeInput(''); // Clear input\n    } catch (err) {\n      console.error('Error joining session:', err);\n      showMessage(`Failed to join session: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchPlayersInSession = useCallback(async sessionId => {\n    if (!isAuthenticated || !playerId || !password || !sessionId) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/dm/sessions/${sessionId}/players`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to fetch players for this session.');\n      }\n      setPlayersInSelectedDmSession(data.players || []);\n    } catch (err) {\n      console.error('Error fetching players in session:', err);\n      showMessage(`Failed to fetch players: ${err.message}`, 'error');\n      setPlayersInSelectedDmSession([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, playerId, password, showMessage]);\n  const handleSelectDmSession = session => {\n    setSelectedDmSession(session);\n    fetchPlayersInSession(session.session_id);\n    setSelectedPlayerForDMView(null); // Clear any previously selected player\n    setSelectedPlayerDMData(null);\n    setActiveDmTab('my_sessions'); // Stay on my sessions tab, but show players for selected session\n  };\n  const handleViewPlayerCards = player_id_to_view => {\n    const player = playersInSelectedDmSession.find(p => p.player_id === player_id_to_view);\n    if (player) {\n      setSelectedPlayerForDMView(player.player_id);\n      setSelectedPlayerDMData(player.data); // This is the full player data including deck/collection\n      setActiveDmTab('view_player'); // Switch to a sub-tab to view player details\n    } else {\n      showMessage(\"Could not find player data for viewing.\", \"error\");\n    }\n  };\n  const handleGiveSpecificPack = async () => {\n    if (!selectedPlayerForDMView || !selectedPackTypeToGive) {\n      showMessage('Select a player and a pack type.', 'error');\n      return;\n    }\n    if (!playerId || !password) {\n      showMessage('DM must be logged in to give packs.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/dm/give_booster`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dm_player_id: playerId,\n          password: password,\n          target_player_id: selectedPlayerForDMView,\n          pack_type: selectedPackTypeToGive\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to give booster pack.');\n      }\n      showMessage(data.message, 'success'); // DM sees confirmation\n\n      // Re-fetch player data for DM to reflect pending item\n      const updatedPlayerResponse = await fetch(`${API_BASE_URL}/dm/sessions/${selectedDmSession.session_id}/players`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password\n        })\n      });\n      const updatedPlayersData = await updatedPlayerResponse.json();\n      const updatedPlayer = updatedPlayersData.players.find(p => p.player_id === selectedPlayerForDMView);\n      if (updatedPlayer) {\n        setSelectedPlayerDMData(updatedPlayer.data); // Update DM's view of player's data\n      }\n    } catch (err) {\n      console.error('Error giving booster pack:', err);\n      showMessage(`Failed to give booster pack: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGiveSpecificCard = async cardId => {\n    if (!selectedPlayerForDMView || !cardId) {\n      showMessage('Select a player and a card to give.', 'error');\n      return;\n    }\n    if (!playerId || !password) {\n      showMessage('DM must be logged in to give cards.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/dm/give_card`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dm_player_id: playerId,\n          password: password,\n          target_player_id: selectedPlayerForDMView,\n          card_id: cardId\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to give card.');\n      }\n      showMessage(data.message, 'success'); // DM sees confirmation\n\n      // Re-fetch player data for DM to reflect pending item\n      const updatedPlayerResponse = await fetch(`${API_BASE_URL}/dm/sessions/${selectedDmSession.session_id}/players`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password\n        })\n      });\n      const updatedPlayersData = await updatedPlayerResponse.json();\n      const updatedPlayer = updatedPlayersData.players.find(p => p.player_id === selectedPlayerForDMView);\n      if (updatedPlayer) {\n        setSelectedPlayerDMData(updatedPlayer.data); // Update DM's view of player's data\n      }\n    } catch (err) {\n      console.error('Error giving card:', err);\n      showMessage(`Failed to give card: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Helper to map card IDs from player data back to full card objects from allCards\n  const getFullCardDetails = cardId => {\n    return allCards.find(card => card.id === cardId);\n  };\n\n  // Filter all cards for DM distribution search\n  const filteredAllCardsForDM = allCards.filter(card => card.name.toLowerCase().includes(searchCardInputForDM.toLowerCase()) || card.type.toLowerCase().includes(searchCardInputForDM.toLowerCase()) || card.rarity.toLowerCase().includes(searchCardInputForDM.toLowerCase()));\n\n  // --- NEW: Function to fetch pending items ---\n  const fetchPendingItems = useCallback(async () => {\n    if (!isAuthenticated || !playerId || !password || isDMMode) return; // Only fetch if logged in, in player mode\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/player/pending_items`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to fetch pending items.');\n      }\n\n      // Check if there are new pending items\n      const newPacks = data.pending_booster_packs || [];\n      const newCards = data.pending_cards || [];\n      if (newPacks.length > pendingBoosterPacks.length || newCards.length > pendingCards.length) {\n        showMessage('You have new items from your DM!', 'info');\n      }\n      setPendingBoosterPacks(newPacks);\n      setPendingCards(newCards);\n    } catch (err) {\n      console.error('Error fetching pending items:', err);\n      // Don't show an error message for every failed poll to avoid spamming the user\n    }\n  }, [isAuthenticated, playerId, password, isDMMode, pendingBoosterPacks.length, pendingCards.length, showMessage]);\n\n  // --- NEW: Polling effect for pending items ---\n  useEffect(() => {\n    let intervalId;\n    if (isAuthenticated && !isDMMode && playerId && password) {\n      // Fetch immediately on login/mode switch\n      fetchPendingItems();\n      // Then set up polling every 10 seconds\n      intervalId = setInterval(fetchPendingItems, 10000);\n    }\n\n    // Cleanup function to clear the interval when component unmounts or dependencies change\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [isAuthenticated, isDMMode, playerId, password, fetchPendingItems]);\n\n  // --- Main Component Render ---\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: AppStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1540,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Spell Trading Cards Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1542,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: [isAuthenticated &&\n        /*#__PURE__*/\n        // Only show toggle if logged in\n        _jsxDEV(\"div\", {\n          className: \"dm-toggle-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"dm-toggle-switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: isDMMode,\n              onChange: e => {\n                setIsDMMode(e.target.checked);\n                // When toggling, reset DM specific states and ensure appropriate tab is active\n                setSelectedDmSession(null);\n                setSelectedPlayerForDMView(null);\n                setSelectedPlayerDMData(null);\n                setActiveDmTab('my_sessions'); // Reset DM sub-tab\n                // If switching to DM mode, set main active tab to dm_screen\n                // Otherwise, set to 'available' (default player tab)\n                setActiveTab(e.target.checked ? 'dm_screen' : 'available');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1550,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dm-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1561,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1549,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"DM Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1563,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1548,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Player ID\",\n          value: playerId,\n          onChange: e => setPlayerId(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1567,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1574,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLoginAndLoadDeck,\n          disabled: loading,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1581,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateAccount,\n          disabled: loading,\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1582,\n          columnNumber: 21\n        }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveDeck,\n          disabled: loading,\n          children: \"Save Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1583,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1545,\n        columnNumber: 17\n      }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-box ${message.type}`,\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1587,\n        columnNumber: 34\n      }, this), !isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pre-login-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please log in to access the Spell Card Manager.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1592,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Create an account or log in to manage your spells and game sessions!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1593,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1591,\n        columnNumber: 21\n      }, this) : isDMMode ?\n      /*#__PURE__*/\n      /* DM Screen Section (full screen when isDMMode is true) */\n      _jsxDEV(\"div\", {\n        className: \"dm-screen-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"panel-title\",\n          children: \"DM Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1598,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dm-sub-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `dm-sub-nav-item ${activeDmTab === 'create_session' ? 'active' : ''}`,\n            onClick: () => {\n              setActiveDmTab('create_session');\n              setSelectedDmSession(null);\n              setSelectedPlayerForDMView(null);\n            },\n            children: \"Create Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1601,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `dm-sub-nav-item ${activeDmTab === 'my_sessions' ? 'active' : ''}`,\n            onClick: () => {\n              setActiveDmTab('my_sessions');\n              setSelectedPlayerForDMView(null);\n            },\n            children: \"My Sessions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1607,\n            columnNumber: 29\n          }, this), selectedPlayerForDMView && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `dm-sub-nav-item ${activeDmTab === 'view_player' ? 'active' : ''}`,\n            onClick: () => setActiveDmTab('view_player'),\n            children: [\"Viewing: \", selectedPlayerForDMView]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1614,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1600,\n          columnNumber: 25\n        }, this), activeDmTab === 'create_session' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dm-section-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create New Game Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1626,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Session Name (e.g., 'Dragon's Breath Campaign')\",\n            value: sessionNameInput,\n            onChange: e => setSessionNameInput(e.target.value),\n            disabled: loading,\n            style: {\n              maxWidth: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1627,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateSession,\n            disabled: loading,\n            children: \"Generate Session Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1635,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-message\",\n            children: \"Once created, share the 6-character session code with your players!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1638,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1625,\n          columnNumber: 29\n        }, this), activeDmTab === 'my_sessions' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dm-section-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Game Sessions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1647,\n            columnNumber: 33\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-message\",\n            children: \"Loading sessions...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1649,\n            columnNumber: 37\n          }, this) : dmSessions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-message\",\n            children: \"You haven't created any sessions yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1651,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dm-session-list\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: dmSessions.map(session => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleSelectDmSession(session),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: session.session_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1658,\n                    columnNumber: 57\n                  }, this), \" (Code: \", session.session_code, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1657,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Players: \", session.player_count, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1660,\n                  columnNumber: 53\n                }, this)]\n              }, session.session_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1656,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1654,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1653,\n            columnNumber: 37\n          }, this), selectedDmSession && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginTop: '2rem'\n              },\n              children: [\"Players in \\\"\", selectedDmSession.session_name, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1671,\n              columnNumber: 41\n            }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-message\",\n              children: \"Loading players...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1673,\n              columnNumber: 45\n            }, this) : playersInSelectedDmSession.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-message\",\n              children: \"No players have joined this session yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1675,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dm-player-list\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: playersInSelectedDmSession.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => handleViewPlayerCards(player.player_id),\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"dm-player-id\",\n                    children: player.player_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1681,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"select-button\",\n                    children: \"View Cards\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1682,\n                    columnNumber: 61\n                  }, this)]\n                }, player.player_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1680,\n                  columnNumber: 57\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1678,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1677,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1646,\n          columnNumber: 29\n        }, this), activeDmTab === 'view_player' && selectedPlayerDMData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dm-section-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Viewing Player: \", selectedPlayerForDMView]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1696,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveDmTab('my_sessions'),\n            className: \"select-button\",\n            style: {\n              marginBottom: '1rem'\n            },\n            children: \"Back to Session Players\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1697,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dm-player-view-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dm-player-stats-panel\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Player Stats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1703,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Level: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: selectedPlayerDMData.character_level\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1704,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1704,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"WIS Mod: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: selectedPlayerDMData.wis_mod\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1705,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1705,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"INT Mod: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: selectedPlayerDMData.int_mod\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1706,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1706,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"CHA Mod: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: selectedPlayerDMData.cha_mod\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1707,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1707,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1702,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dm-player-deck-panel\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Active Deck (\", selectedPlayerDMData.active_deck_instances.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1711,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-list\",\n                children: selectedPlayerDMData.active_deck_instances.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"empty-message no-hover\",\n                  children: \"No cards in active deck.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1714,\n                  columnNumber: 49\n                }, this) : selectedPlayerDMData.active_deck_instances.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`,\n                    alt: card.name,\n                    className: \"card-image\",\n                    onError: e => {\n                      e.target.onerror = null;\n                      e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\";\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1718,\n                    columnNumber: 58\n                  }, this), card.backlash_effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-backlash\",\n                    children: [\"Backlash: \", card.backlash_effect]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1725,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"card-name\",\n                    children: card.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1727,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-description\",\n                    children: card.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1728,\n                    columnNumber: 57\n                  }, this), card.effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-effect\",\n                    children: [\"Effect: \", card.effect]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1730,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-uses\",\n                    children: [\"Uses: \", card.current_uses, \"/\", card.default_uses_per_rest]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1732,\n                    columnNumber: 57\n                  }, this)]\n                }, card.instance_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1717,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1712,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1710,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dm-player-collection-panel\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Owned Collection (\", selectedPlayerDMData.unlocked_collection_ids.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1741,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-list\",\n                children: selectedPlayerDMData.unlocked_collection_ids.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"empty-message no-hover\",\n                  children: \"No cards owned.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1744,\n                  columnNumber: 49\n                }, this) :\n                // Display unique cards from collection, with count\n                Object.entries(selectedPlayerDMData.unlocked_collection_ids.reduce((acc, cardId) => {\n                  acc[cardId] = (acc[cardId] || 0) + 1;\n                  return acc;\n                }, {})).map(([cardId, count]) => {\n                  const fullCard = getFullCardDetails(cardId);\n                  return fullCard ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `https://placehold.co/100x150/a8dadc/ffffff?text=${fullCard.name.split('.')[0].replace('_', '%20')}`,\n                      alt: fullCard.name,\n                      className: \"card-image\",\n                      onError: e => {\n                        e.target.onerror = null;\n                        e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\";\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1754,\n                      columnNumber: 62\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"card-name\",\n                      children: fullCard.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1760,\n                      columnNumber: 61\n                    }, this), fullCard.backlash_effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-backlash\",\n                      children: [\"Backlash: \", fullCard.backlash_effect]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1762,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-description\",\n                      children: fullCard.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1764,\n                      columnNumber: 61\n                    }, this), fullCard.effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-effect\",\n                      children: [\"Effect: \", fullCard.effect]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1766,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-meta\",\n                      children: [\"Rarity: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: fullCard.rarity\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1768,\n                        columnNumber: 94\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1768,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-meta\",\n                      children: [\"Owned: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: count\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1769,\n                        columnNumber: 93\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1769,\n                      columnNumber: 61\n                    }, this)]\n                  }, cardId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1753,\n                    columnNumber: 57\n                  }, this) : null;\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1742,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1740,\n              columnNumber: 37\n            }, this), (selectedPlayerDMData.pending_booster_packs.length > 0 || selectedPlayerDMData.pending_cards.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-notification-area\",\n              style: {\n                marginTop: '2rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Player's Pending Items\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1779,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [selectedPlayerDMData.pending_booster_packs.map((pack, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"notification-text\",\n                    children: [\"Pending: \", pack]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1783,\n                    columnNumber: 57\n                  }, this)\n                }, `dm-player-pending-pack-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1782,\n                  columnNumber: 53\n                }, this)), selectedPlayerDMData.pending_cards.map((cardId, index) => {\n                  const card = getFullCardDetails(cardId);\n                  return card ? /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"notification-text\",\n                      children: [\"Pending: \", card.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1790,\n                      columnNumber: 61\n                    }, this)\n                  }, `dm-player-pending-card-${cardId}-${index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1789,\n                    columnNumber: 57\n                  }, this) : null;\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1780,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1778,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1701,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dm-distribution-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Distribute Items to \", selectedPlayerForDMView]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1801,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedPackTypeToGive,\n                onChange: e => setSelectedPackTypeToGive(e.target.value),\n                disabled: loading,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Common Pack\",\n                  children: \"Common Pack\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1810,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Uncommon Pack\",\n                  children: \"Uncommon Pack\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1811,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Rare Pack\",\n                  children: \"Rare Pack\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1812,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Legendary Pack\",\n                  children: \"Legendary Pack\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1813,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1805,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleGiveSpecificPack,\n                disabled: loading,\n                className: \"booster-button\",\n                children: \"Give Pack\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1815,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1804,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                marginTop: '1rem',\n                marginBottom: '0.5rem'\n              },\n              children: \"Give Specific Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1821,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search Cards to Give...\",\n              value: searchCardInputForDM,\n              onChange: e => setSearchCardInputForDM(e.target.value),\n              disabled: loading,\n              style: {\n                maxWidth: '400px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1822,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dm-card-distribution-list\",\n              children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"empty-message no-hover\",\n                children: \"Loading all cards...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1832,\n                columnNumber: 45\n              }, this) : filteredAllCardsForDM.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"empty-message no-hover\",\n                children: \"No cards found matching your search.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1834,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: filteredAllCardsForDM.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"card-name\",\n                    children: [card.name, \" (\", card.type, \") - \", card.rarity]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1839,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleGiveSpecificCard(card.id),\n                    disabled: loading,\n                    className: \"select-button\",\n                    children: \"Give\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1840,\n                    columnNumber: 57\n                  }, this)]\n                }, `dm-give-${card.id}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1838,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1836,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1830,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1800,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1695,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1597,\n        columnNumber: 21\n      }, this) :\n      /*#__PURE__*/\n      /* Player Content (when isDMMode is false) */\n      _jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Level: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: characterLevel,\n              onChange: e => setCharacterLevel(Math.max(1, parseInt(e.target.value) || 1)),\n              min: \"1\",\n              max: \"20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1861,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1861,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"WIS Mod: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: wisMod,\n              onChange: e => setWisMod(parseInt(e.target.value) || 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1862,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1862,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"INT Mod: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: intMod,\n              onChange: e => setIntMod(parseInt(e.target.value) || 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1863,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1863,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"CHA Mod: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: chaMod,\n              onChange: e => setChaMod(parseInt(e.target.value) || 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1864,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1864,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Max Deck Size: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"highlight\",\n              children: maxDeckSize\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1865,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1865,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1860,\n          columnNumber: 25\n        }, this), (pendingBoosterPacks.length > 0 || pendingCards.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-notification-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"You Have New Items! \\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1871,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [pendingBoosterPacks.map((pack, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"notification-text\",\n                children: [\"Pending: \", pack]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1875,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleOpenPendingBooster,\n                disabled: loading,\n                className: \"booster-button\",\n                children: \"Open Pack\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1876,\n                columnNumber: 45\n              }, this)]\n            }, `pending-pack-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1874,\n              columnNumber: 41\n            }, this)), pendingCards.map((cardId, index) => {\n              const card = getFullCardDetails(cardId);\n              return card ? /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"notification-text\",\n                  children: [\"Pending: \", card.name, \" (\", card.rarity, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1885,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleAcceptPendingCard(card.id),\n                  disabled: loading,\n                  className: \"select-button\",\n                  children: \"Accept Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1886,\n                  columnNumber: 49\n                }, this)]\n              }, `pending-card-${cardId}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1884,\n                columnNumber: 45\n              }, this) : null;\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1872,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1870,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tab-item ${activeTab === 'available' ? 'active' : ''}`,\n            onClick: () => setActiveTab('available'),\n            children: [\"Available Spells (\", uniqueUnlockedCards.length, \" Types / \", unlockedCollectionIds.length, \" Total Owned)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1898,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tab-item ${activeTab === 'deck' ? 'active' : ''}`,\n            onClick: () => setActiveTab('deck'),\n            children: [\"Your Deck (\", activeDeckInstances.length, \"/\", maxDeckSize, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1904,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1897,\n          columnNumber: 25\n        }, this), activeTab === 'available' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-collection-panel\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"panel-title\",\n              children: \"Available Spells\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1916,\n              columnNumber: 37\n            }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-message\",\n              children: \"Loading cards...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1917,\n              columnNumber: 49\n            }, this), !isAuthenticated && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pre-login-message\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Log in to see your available spells.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1920,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1919,\n              columnNumber: 41\n            }, this), isAuthenticated && !loading && uniqueUnlockedCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-list\",\n              children: uniqueUnlockedCards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-item available-card\",\n                onClick: () => handleAddCardToDeck(card),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`,\n                  alt: card.name,\n                  className: \"card-image\",\n                  onError: e => {\n                    e.target.onerror = null;\n                    e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1927,\n                  columnNumber: 53\n                }, this), card.backlash_effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-backlash\",\n                  children: [\"Backlash: \", card.backlash_effect]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1934,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"card-name\",\n                  children: [card.name, \" (\", card.type, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1936,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-description\",\n                  children: card.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1937,\n                  columnNumber: 53\n                }, this), card.effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-effect\",\n                  children: [\"Effect: \", card.effect]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1939,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-meta\",\n                  children: [\"Rarity: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: card.rarity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1941,\n                    columnNumber: 86\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1941,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-meta\",\n                  children: [\"Owned Copies: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: card.owned_copies\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1942,\n                    columnNumber: 92\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1942,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleAddCardToDeck(card);\n                  } // Stop propagation to prevent parent onClick\n                  // Disable button if deck is full OR if all owned copies are already in the deck\n                  ,\n                  disabled: activeDeckInstances.length >= maxDeckSize || activeDeckInstances.filter(c => c.id === card.id).length >= card.owned_copies,\n                  className: \"select-button\",\n                  children: \"Add to Deck\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1943,\n                  columnNumber: 53\n                }, this)]\n              }, card.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1926,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1924,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1915,\n            columnNumber: 33\n          }, this), isAuthenticated && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"booster-pack-section\",\n            children: [uniqueUnlockedCards.length === 0 && pendingBoosterPacks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-message\",\n              children: \"You haven't unlocked any unique spell types yet! Open a booster pack to get started.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1962,\n              columnNumber: 45\n            }, this), pendingBoosterPacks.length === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleOpenBoosterPack,\n              disabled: loading,\n              className: \"booster-button\",\n              children: \"Open Booster Pack\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1966,\n              columnNumber: 45\n            }, this), newlyAcquiredCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-cards-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Newly Acquired Cards from \", lastOpenedPackType, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1977,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: newlyAcquiredCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\" \", card.name, \" (\", card.type, \", \", card.rarity, \")\", prePackUnlockedIds.includes(card.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \" (Duplicate)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1982,\n                    columnNumber: 102\n                  }, this)]\n                }, card.id + \"-new-\" + index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1980,\n                  columnNumber: 57\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1978,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1976,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1960,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true), activeTab === 'deck' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"built-deck-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"panel-title\",\n            children: [\"Your Deck (\", activeDeckInstances.length, \"/\", maxDeckSize, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1996,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"deck-list\",\n            children: isAuthenticated ? activeDeckInstances.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-message\",\n              children: \"Select cards from the \\\"Available Spells\\\" tab to build your deck!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2000,\n              columnNumber: 45\n            }, this) : activeDeckInstances.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-item deck-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`,\n                alt: card.name,\n                className: \"card-image\",\n                onError: e => {\n                  e.target.onerror = null;\n                  e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\";\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2004,\n                columnNumber: 53\n              }, this), card.backlash_effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-backlash\",\n                children: [\"Backlash: \", card.backlash_effect]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2011,\n                columnNumber: 57\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"card-name\",\n                children: [card.name, \" (\", card.type, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2013,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-description\",\n                children: card.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2014,\n                columnNumber: 53\n              }, this), card.effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-effect\",\n                children: [\"Effect: \", card.effect]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2016,\n                columnNumber: 57\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-meta\",\n                children: [\"Rarity: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: card.rarity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2018,\n                  columnNumber: 86\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2018,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-uses\",\n                children: [\"Uses Left: \", card.current_uses, \"/\", card.default_uses_per_rest]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2019,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleMarkCardUsed(card.instance_id),\n                  disabled: card.current_uses <= 0,\n                  className: \"use-button\",\n                  children: \"Use\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2021,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleResetCardUses(card.instance_id),\n                  className: \"reset-button\",\n                  children: \"Reset Uses\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2028,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleRemoveCardFromDeck(card.instance_id),\n                  className: \"remove-button\",\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2034,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2020,\n                columnNumber: 53\n              }, this)]\n            }, card.instance_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2003,\n              columnNumber: 49\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pre-login-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Please log in to load your character and spell deck.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2046,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Once logged in, your deck and stats will appear here.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2047,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2045,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1997,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1995,\n          columnNumber: 29\n        }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dm-section-panel\",\n          style: {\n            marginTop: '2rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Join a Game Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2057,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Session Code\",\n            value: sessionCodeInput,\n            onChange: e => setSessionCodeInput(e.target.value),\n            disabled: loading,\n            style: {\n              maxWidth: '250px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2058,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleJoinSession,\n            disabled: loading,\n            children: \"Join Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2066,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2056,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1858,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1541,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"tPlfV+E0WkTmG527imEo8wSs9yM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","AppStyles","App","_s","allCards","setAllCards","characterLevel","setCharacterLevel","wisMod","setWisMod","intMod","setIntMod","chaMod","setChaMod","maxDeckSize","setMaxDeckSize","activeDeckInstances","setActiveDeckInstances","unlockedCollectionIds","setUnlockedCollectionIds","error","setError","playerId","setPlayerId","password","setPassword","isAuthenticated","setIsAuthenticated","message","setMessage","text","type","loading","setLoading","activeTab","setActiveTab","newlyAcquiredCards","setNewlyAcquiredCards","lastOpenedPackType","setLastOpenedPackType","prePackUnlockedIds","setPrePackUnlockedIds","isDMMode","setIsDMMode","sessionNameInput","setSessionNameInput","sessionCodeInput","setSessionCodeInput","dmSessions","setDmSessions","selectedDmSession","setSelectedDmSession","playersInSelectedDmSession","setPlayersInSelectedDmSession","selectedPlayerForDMView","setSelectedPlayerForDMView","selectedPlayerDMData","setSelectedPlayerDMData","activeDmTab","setActiveDmTab","selectedPackTypeToGive","setSelectedPackTypeToGive","searchCardInputForDM","setSearchCardInputForDM","pendingBoosterPacks","setPendingBoosterPacks","pendingCards","setPendingCards","showMessage","duration","setTimeout","handleCreateAccount","response","fetch","method","headers","body","JSON","stringify","player_id","data","json","ok","Error","err","console","handleLoginAndLoadDeck","active_deck_instances","unlocked_collection_ids","character_level","undefined","wis_mod","int_mod","cha_mod","pending_booster_packs","pending_cards","handleSaveDeck","fetchAllCards","cardsResponse","status","cardsData","calculateDeckSize","max_deck_size","isNaN","handleOpenBoosterPack","pack_type","new_cards","length","updated_unlocked_collection_ids","handleOpenPendingBooster","updated_pending_booster_packs","handleAcceptPendingCard","cardIdToAccept","card_id","updated_pending_cards","card_name","handleAddCardToDeck","card","ownedCopiesOfThisCard","filter","id","copiesInActiveDeck","c","name","cantripCountInDeck","prev","instance_id","current_uses","default_uses_per_rest","handleRemoveCardFromDeck","updatedDeck","cantripCount","handleMarkCardUsed","cardToUse","find","map","deck_card_id","log","log_entry","handleResetCardUses","filteredAvailableCardsWithCounts","includes","reduce","acc","count","owned_copies","uniqueUnlockedCards","Object","values","fetchMyDMSessions","sessionsWithPlayerCounts","Promise","all","sessions","session","playersResponse","session_id","playersData","player_count","players","handleCreateSession","session_name","session_code","handleJoinSession","fetchPlayersInSession","sessionId","handleSelectDmSession","handleViewPlayerCards","player_id_to_view","player","p","handleGiveSpecificPack","dm_player_id","target_player_id","updatedPlayerResponse","updatedPlayersData","updatedPlayer","handleGiveSpecificCard","cardId","getFullCardDetails","filteredAllCardsForDM","toLowerCase","rarity","fetchPendingItems","newPacks","newCards","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","checked","onChange","e","target","placeholder","value","disabled","onClick","style","maxWidth","marginTop","marginBottom","src","split","replace","alt","onError","onerror","backlash_effect","description","effect","entries","fullCard","pack","index","Math","max","parseInt","min","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/aaron/DND_Spell_Cards/Spell_Card_Game/DND_Spell_Cards_online/Online_DM_additions/frontend - Copy/src/App.js"],"sourcesContent":["// dnd-spell-cards-app/frontend/src/App.js\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid for unique keys for deck card instances\r\n\r\n// IMPORTANT: Update this to your VM's Public IP address (or domain name if configured)\r\nconst API_BASE_URL = 'http://193.122.147.91:5000/api';\r\n\r\n// Inline CSS for self-contained component\r\nconst AppStyles = `\r\n    /* Import Google Fonts for a D&D feel */\r\n    @import url('https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Merriweather:wght@400;700&display=swap');\r\n\r\n    body {\r\n        background-color: #3b2f2f; /* Dark brown background, like a closed grimoire */\r\n        font-family: 'Merriweather', serif; /* Readable serif for body text */\r\n        color: #5a4b4b; /* Darker, faded text */\r\n        margin: 0;\r\n        padding: 0;\r\n        line-height: 1.6;\r\n    }\r\n\r\n    .App {\r\n        display: flex;\r\n        flex-direction: column;\r\n        min-height: 100vh;\r\n        align-items: center;\r\n        padding: 1.5rem; /* Increased padding */\r\n        box-sizing: border-box;\r\n        /* --- NEW WOODEN FLOOR TEXTURE --- */\r\n        background-image: url('/images/wooden-floor.jpg');\r\n        background-size: cover;\r\n        background-position: center; /* Center the background image */\r\n        background-attachment: fixed;\r\n        border: 10px solid #4a3e3c; /* Thick, dark border for the \"book\" effect */\r\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5); /* Deep shadow for depth */\r\n        margin: 1rem; /* Margin to show body background */\r\n        border-radius: 1rem; /* Slightly rounded edges for the book */\r\n    }\r\n\r\n    .app-title {\r\n        font-family: 'Cinzel', serif; /* Ornate font for title */\r\n        color: #8c6e4e; /* Gold/parchment color */\r\n        text-align: center;\r\n        margin-bottom: 2rem;\r\n        font-size: 3.2rem; /* Larger title */\r\n        font-weight: 700;\r\n        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.6); /* Text shadow for depth */\r\n    }\r\n\r\n    .login-container, .stats-container, .dm-section-panel, .player-notification-area, .booster-pack-section { /* Added .booster-pack-section */\r\n        background: #6a5d5a; /* Muted stone/dark wood color */\r\n        color: #f5f5dc; /* Off-white for readability */\r\n        padding: 1.8rem; /* More padding */\r\n        margin-bottom: 2rem;\r\n        border-radius: 0.8rem;\r\n        box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3); /* Inset shadow for carved look */\r\n        display: flex;\r\n        gap: 1.2rem;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex-wrap: wrap;\r\n        width: 100%;\r\n        max-width: 1000px; /* Slightly narrower */\r\n        border: 2px solid #4a3e3c; /* Matching dark border */\r\n    }\r\n\r\n    .login-container input, .dm-section-panel input, .dm-section-panel select {\r\n        padding: 0.8rem 1rem;\r\n        border-radius: 0.5rem;\r\n        border: 1px solid #8c6e4e; /* Goldish border */\r\n        background: #e9dcc9; /* Parchment background */\r\n        color: #3b2f2f; /* Dark text */\r\n        font-family: 'Merriweather', serif;\r\n        font-size: 1.1rem;\r\n        flex-grow: 1;\r\n        max-width: 200px;\r\n    }\r\n\r\n    .login-container button, .use-button, .reset-button, .remove-button, .select-button, .booster-button, .dm-section-panel button, .player-notification-area button {\r\n        background-color: #8c6e4e; /* Gold/bronze button */\r\n        color: #f5f5dc; /* Off-white text */\r\n        padding: 0.8rem 1.5rem;\r\n        border: 2px solid #5a4b4b; /* Darker edge */\r\n        border-radius: 0.5rem;\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n        transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;\r\n        white-space: nowrap;\r\n        font-family: 'Cinzel', serif; /* Thematic button font */\r\n        text-transform: uppercase;\r\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n    }\r\n\r\n    .login-container button:hover, .select-button:hover:not(:disabled), .booster-button:hover:not(:disabled), .dm-section-panel button:hover:not(:disabled), .player-notification-area button:hover:not(:disabled) {\r\n        background-color: #a38b6d; /* Lighter gold on hover */\r\n        transform: translateY(-3px); /* More pronounced lift */\r\n        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);\r\n    }\r\n\r\n    .select-button:disabled, .use-button:disabled, .booster-button:disabled, .dm-section-panel button:disabled, .player-notification-area button:disabled {\r\n        background-color: #5a4b4b; /* Muted disabled color */\r\n        color: #a0a0a0;\r\n        cursor: not-allowed;\r\n        transform: none;\r\n        box-shadow: none;\r\n    }\r\n\r\n    .stats-container {\r\n        background: #5a4b4b; /* Darker tone for stats */\r\n        color: #f5f5dc;\r\n        padding: 1.8rem;\r\n    }\r\n\r\n    .stats-container label {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 0.6rem;\r\n        font-weight: 700;\r\n        font-family: 'Cinzel', serif;\r\n    }\r\n\r\n    .stats-container input {\r\n        width: 5rem; /* Wider input */\r\n        padding: 0.4rem;\r\n        border-radius: 0.4rem;\r\n        border: 1px solid #8c6e4e;\r\n        background: #e9dcc9;\r\n        color: #3b2f2f;\r\n        text-align: center;\r\n        font-family: 'Merriweather', serif;\r\n    }\r\n\r\n    .stats-container p {\r\n        margin: 0;\r\n        padding: 0;\r\n        font-size: 1.1rem;\r\n        font-weight: 700;\r\n    }\r\n\r\n    .message-box {\r\n        position: fixed;\r\n        top: 2rem; /* Lowered position */\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        padding: 0.9rem 1.8rem;\r\n        border-radius: 0.6rem;\r\n        font-weight: bold;\r\n        z-index: 1000;\r\n        animation: fadein 0.5s, fadeout 0.5s 4.5s; /* Longer display */\r\n        text-align: center;\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);\r\n        font-family: 'Cinzel', serif;\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    .message-box.success {\r\n        background-color: #488c5d; /* Darker green */\r\n        color: white;\r\n    }\r\n\r\n    .message-box.error {\r\n        background-color: #a33b3b; /* Darker red */\r\n        color: white;\r\n    }\r\n\r\n    .message-box.info {\r\n        background-color: #6a5d5a;\r\n        color: #f5f5dc;\r\n    }\r\n\r\n    @keyframes fadein {\r\n        from { opacity: 0; transform: translateX(-50%) translateY(-20px); }\r\n        to   { opacity: 1; transform: translateX(-50%) translateY(0); }\r\n    }\r\n\r\n    @keyframes fadeout {\r\n        from { opacity: 1; transform: translateX(-50%) translateY(0); }\r\n        to   { opacity: 0; transform: translateX(-50%) translateY(-20px); }\r\n    }\r\n\r\n    .tab-navigation {\r\n        display: flex;\r\n        justify-content: center;\r\n        width: 100%;\r\n        max-width: 1000px;\r\n        margin-bottom: 2rem;\r\n        background-color: #5a4b4b; /* Darker tab background */\r\n        border-radius: 0.8rem;\r\n        box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.4);\r\n        overflow: hidden;\r\n        border: 2px solid #4a3e3c;\r\n    }\r\n\r\n    .tab-item {\r\n        flex: 1;\r\n        text-align: center;\r\n        padding: 1.2rem 1.8rem; /* More generous padding */\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n        color: #e9dcc9; /* Parchment text */\r\n        background-color: #5a4b4b;\r\n        transition: background-color 0.3s ease, color 0.3s ease;\r\n        border-bottom: 4px solid transparent; /* Thicker active indicator */\r\n        font-family: 'Cinzel', serif;\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    .tab-item:hover:not(.active) {\r\n        background-color: #6a5d5a; /* Slightly lighter on hover */\r\n    }\r\n\r\n    .tab-item.active {\r\n        background-color: #8c6e4e; /* Gold active tab */\r\n        color: white;\r\n        border-bottom-color: #a38b6d; /* Lighter gold accent */\r\n    }\r\n\r\n    .main-content {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 2rem; /* Increased gap */\r\n        width: 100%;\r\n        max-width: 1000px;\r\n        flex: 1;\r\n    }\r\n\r\n    .card-collection-panel, .built-deck-panel {\r\n        background: #e9dcc9; /* Parchment background for panels */\r\n        border-radius: 0.8rem;\r\n        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\r\n        padding: 2rem; /* More padding */\r\n        flex: 1;\r\n        min-width: 320px; /* Slightly larger min-width */\r\n        display: flex;\r\n        flex-direction: column;\r\n        border: 2px solid #8c6e4e; /* Gold border */\r\n    }\r\n\r\n    /* Player's Available Spells panel - now scrollable */\r\n    .card-collection-panel {\r\n        max-height: 700px; /* Fixed height for scrolling */\r\n        overflow-y: auto; /* Enable vertical scrolling */\r\n    }\r\n\r\n    .panel-title {\r\n        font-family: 'Cinzel', serif;\r\n        text-align: center;\r\n        color: #3b2f2f; /* Dark text for title */\r\n        margin-top: 0;\r\n        margin-bottom: 2rem;\r\n        font-size: 2.2rem; /* Larger panel title */\r\n        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\r\n    }\r\n\r\n    .card-list, .deck-list {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr)); /* Larger cards */\r\n        gap: 1.5rem; /* Increased gap */\r\n        flex-grow: 1;\r\n    }\r\n\r\n    .card-item {\r\n        background: #fdf6e6; /* Lighter parchment for individual cards */\r\n        border: 1px solid #d3c4a2; /* Faded parchment border */\r\n        border-radius: 0.6rem;\r\n        padding: 1.2rem;\r\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\r\n        transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n        display: flex;\r\n        flex-direction: column;\r\n        text-align: center;\r\n        font-family: 'Merriweather', serif;\r\n    }\r\n\r\n    .card-item:hover.available-card {\r\n        transform: translateY(-7px); /* More dramatic lift */\r\n        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.25);\r\n        cursor: pointer;\r\n    }\r\n\r\n    .card-item.deck-card {\r\n        background: #e9dcc9; /* Muted parchment for deck cards */\r\n        border: 1px solid #8c6e4e; /* Goldish border for deck cards */\r\n    }\r\n\r\n    .card-image {\r\n        max-width: 100%;\r\n        height: auto;\r\n        border-radius: 0.4rem;\r\n        margin-bottom: 1rem;\r\n        border: 1px solid #8c6e4e; /* Gold frame for image */\r\n    }\r\n    \r\n    .card-backlash {\r\n        font-family: 'Merriweather', serif;\r\n        font-size: 0.85rem;\r\n        color: #a33b3b; /* Red color for backlash effect */\r\n        margin-bottom: 0.5rem;\r\n        font-weight: bold;\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    .card-name {\r\n        font-family: 'Cinzel', serif;\r\n        font-weight: 700;\r\n        font-size: 1.25rem;\r\n        color: #3b2f2f;\r\n        margin-bottom: 0.6rem;\r\n    }\r\n\r\n    .card-type {\r\n        font-style: italic;\r\n        color: #5a4b4b;\r\n        margin-bottom: 0.7rem;\r\n        font-size: 0.95rem;\r\n    }\r\n\r\n    .card-description {\r\n        font-size: 0.9rem;\r\n        color: #4a3e3c;\r\n        flex-grow: 1;\r\n        margin-bottom: 0.7rem; /* Adjusted margin */\r\n    }\r\n\r\n    .card-effect {\r\n        font-size: 0.9rem;\r\n        color: #4a6d8c; /* Blue color for effect */\r\n        margin-bottom: 0.7rem; /* Adjusted margin */\r\n        font-style: italic;\r\n    }\r\n\r\n    .card-meta, .card-uses {\r\n        font-size: 0.85rem;\r\n        color: #5a4b4b;\r\n        margin-bottom: 0.6rem;\r\n    }\r\n    \r\n    .card-meta span {\r\n        font-weight: bold;\r\n        color: #3b2f2f;\r\n    }\r\n\r\n    .card-actions {\r\n        margin-top: 1rem;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 0.6rem;\r\n        justify-content: center;\r\n    }\r\n\r\n    .use-button {\r\n        background-color: #4a6d8c; /* Muted blue for use */\r\n        color: white;\r\n    }\r\n    .use-button:hover:not(:disabled) {\r\n        background-color: #3a5c78;\r\n        transform: translateY(-2px);\r\n    }\r\n\r\n    .reset-button {\r\n        background-color: #5a8c4a; /* Muted green for reset */\r\n        color: white;\r\n    }\r\n    .reset-button:hover {\r\n        background-color: #4a783a;\r\n        transform: translateY(-2px);\r\n    }\r\n\r\n    .remove-button {\r\n        background-color: #8c4a4a; /* Muted red for remove */\r\n        color: white;\r\n    }\r\n    .remove-button:hover {\r\n        background-color: #783a3a;\r\n        transform: translateY(-2px);\r\n    }\r\n\r\n    .empty-message, .pre-login-message {\r\n        text-align: center;\r\n        padding: 2.5rem;\r\n        background: #d3c4a2; /* Lighter parchment */\r\n        border-radius: 0.8rem;\r\n        color: #5a4b4b;\r\n        font-style: italic;\r\n        margin: 1.5rem;\r\n        border: 1px solid #8c6e4e;\r\n        box-shadow: inset 0 1px 5px rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .error-message {\r\n        color: #a33b3b;\r\n        background-color: #fce2e2;\r\n        border: 1px solid #a33b3b;\r\n        padding: 0.8rem;\r\n        border-radius: 0.6rem;\r\n        text-align: center;\r\n        margin-top: 1.5rem;\r\n        font-weight: bold;\r\n        font-family: 'Merriweather', serif;\r\n    }\r\n\r\n    .highlight {\r\n        color: #4a6d8c; /* Muted blue highlight */\r\n        font-weight: bold;\r\n    }\r\n\r\n    /* Booster pack section on Player side - now has its own styling for layout */\r\n    .booster-pack-section {\r\n        flex-direction: column;\r\n        align-items: center;\r\n        padding-top: 1.8rem; /* Use the same padding as other panels */\r\n        border-top: 2px solid #4a3e3c; /* Consistent border */\r\n        width: 100%;\r\n        max-width: 1000px;\r\n        margin-top: 0; /* Adjusted since it's now a separate block */\r\n    }\r\n\r\n    .booster-pack-section button {\r\n        margin-top: 1.5rem;\r\n    }\r\n\r\n    .new-cards-display {\r\n        margin-top: 1.5rem;\r\n        padding: 1.5rem;\r\n        background: #d3c4a2;\r\n        border-radius: 0.6rem;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 450px;\r\n        border: 1px solid #8c6e4e;\r\n        box-shadow: inset 0 1px 5px rgba(0, 0, 0, 0.2);\r\n        font-family: 'Merriweather', serif;\r\n    }\r\n    .new-cards-display h4 {\r\n        font-family: 'Cinzel', serif;\r\n        color: #3b2f2f;\r\n        margin-bottom: 0.8rem;\r\n        font-size: 1.2rem;\r\n    }\r\n    .new-cards-display ul {\r\n        list-style-type: none;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n    .new-cards-display li {\r\n        margin-bottom: 0.3rem;\r\n        color: #4a3e3c;\r\n        font-size: 0.95rem;\r\n    }\r\n\r\n    /* DM Screen Specific Styles */\r\n    .dm-screen-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 100%;\r\n        max-width: 1000px;\r\n        gap: 1.5rem;\r\n    }\r\n\r\n    .dm-sub-nav {\r\n        display: flex;\r\n        justify-content: center;\r\n        background-color: #5a4b4b;\r\n        border-radius: 0.8rem;\r\n        box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.4);\r\n        overflow: hidden;\r\n        border: 2px solid #4a3e3c;\r\n    }\r\n\r\n    .dm-sub-nav-item {\r\n        flex: 1;\r\n        text-align: center;\r\n        padding: 1rem 1.5rem;\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n        color: #e9dcc9;\r\n        background-color: #5a4b4b;\r\n        transition: background-color 0.3s ease, color 0.3s ease;\r\n        border-bottom: 3px solid transparent;\r\n        font-family: 'Cinzel', serif;\r\n        text-transform: uppercase;\r\n        font-size: 0.95rem;\r\n    }\r\n\r\n    .dm-sub-nav-item:hover:not(.active) {\r\n        background-color: #6a5d5a;\r\n    }\r\n\r\n    .dm-sub-nav-item.active {\r\n        background-color: #8c6e4e;\r\n        color: white;\r\n        border-bottom-color: #a38b6d;\r\n    }\r\n\r\n    .dm-section-panel {\r\n        flex-direction: column;\r\n        align-items: stretch;\r\n        gap: 1.5rem;\r\n        max-width: none; /* Override max-width for full panel use */\r\n    }\r\n\r\n    .dm-session-list ul, .dm-player-list ul, .dm-card-distribution-list ul, .player-notification-area ul {\r\n        list-style-type: none;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n\r\n    .dm-session-list li, .dm-player-list li, .dm-card-distribution-list li, .player-notification-area li {\r\n        background: #d3c4a2;\r\n        padding: 0.8rem 1.2rem;\r\n        margin-bottom: 0.5rem;\r\n        border-radius: 0.4rem;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        font-family: 'Merriweather', serif;\r\n        color: #3b2f2f;\r\n        box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n        cursor: pointer;\r\n        transition: background-color 0.2s ease;\r\n    }\r\n\r\n    .dm-session-list li:hover, .dm-player-list li:hover:not(.no-hover), .dm-card-distribution-list li:hover, .player-notification-area li:hover {\r\n        background-color: #c9bda5;\r\n    }\r\n\r\n    .dm-player-id {\r\n        font-weight: bold;\r\n        color: #4a6d8c;\r\n    }\r\n\r\n    .dm-player-view-details {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 2rem;\r\n        margin-top: 1.5rem;\r\n    }\r\n\r\n    .dm-player-stats-panel, .dm-player-deck-panel, .dm-player-collection-panel { /* Added .dm-player-collection-panel */\r\n        flex: 1;\r\n        min-width: 300px;\r\n        background: #fdf6e6;\r\n        border-radius: 0.6rem;\r\n        padding: 1.5rem;\r\n        box-shadow: inset 0 1px 5px rgba(0,0,0,0.2);\r\n        border: 1px solid #8c6e4e;\r\n        color: #3b2f2f;\r\n    }\r\n    .dm-player-stats-panel h4, .dm-player-deck-panel h4, .dm-player-collection-panel h4 { /* Added .dm-player-collection-panel */\r\n        font-family: 'Cinzel', serif;\r\n        font-size: 1.3rem;\r\n        margin-top: 0;\r\n        margin-bottom: 1rem;\r\n        color: #3b2f2f;\r\n        text-align: center;\r\n    }\r\n    .dm-player-stats-panel p {\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    .dm-player-stats-panel span {\r\n        font-weight: bold;\r\n        color: #4a6d8c;\r\n    }\r\n    \r\n    /* DM's player deck/collection cards are smaller */\r\n    .dm-player-deck-panel .card-list,\r\n    .dm-player-collection-panel .card-list {\r\n        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); /* Smaller cards for DM view */\r\n    }\r\n\r\n    /* New style for scrollable collection panel */\r\n    .dm-player-collection-panel {\r\n        max-height: 500px; /* Fixed height for scrolling */\r\n        overflow-y: auto; /* Enable vertical scrolling */\r\n        min-width: 320px; /* Ensure it doesn't get too small */\r\n        flex: 1; /* Allow it to grow, but respect max-height */\r\n    }\r\n\r\n    .dm-distribution-controls {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 1rem;\r\n        margin-top: 2rem;\r\n        padding-top: 1.5rem;\r\n        border-top: 1px dashed #8c6e4e;\r\n        align-items: center;\r\n    }\r\n\r\n    .dm-distribution-controls .input-group {\r\n        display: flex;\r\n        gap: 0.8rem;\r\n        align-items: center;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n    }\r\n\r\n    .dm-card-distribution-list {\r\n        margin-top: 1rem;\r\n        max-height: 400px; /* Constrain height */\r\n        overflow-y: auto; /* Enable scrolling */\r\n        border: 1px solid #8c6e4e;\r\n        border-radius: 0.6rem;\r\n        background: #d3c4a2;\r\n        padding: 0.5rem;\r\n    }\r\n    .dm-card-distribution-list li {\r\n        cursor: default; /* No hover effect for these list items */\r\n        background: #e9dcc9;\r\n    }\r\n    .dm-card-distribution-list li .card-name {\r\n        margin: 0;\r\n        font-size: 1rem;\r\n        font-weight: normal;\r\n    }\r\n    .dm-card-distribution-list li button {\r\n        padding: 0.4rem 0.8rem;\r\n        font-size: 0.8rem;\r\n    }\r\n\r\n    /* Player Notification Area specific styling */\r\n    .player-notification-area {\r\n        flex-direction: column;\r\n        align-items: stretch;\r\n        margin-top: 1rem;\r\n        padding-top: 1rem;\r\n        border-top: 1px solid #8c6e4e;\r\n        background: #a38b6d; /* Lighter gold for notifications */\r\n        color: #3b2f2f;\r\n    }\r\n    .player-notification-area h3 {\r\n        color: #3b2f2f;\r\n        margin-bottom: 1rem;\r\n        font-family: 'Cinzel', serif;\r\n        text-align: center;\r\n    }\r\n    .player-notification-area li {\r\n        background: #fdf6e6; /* Parchment background for individual notifications */\r\n        border: 1px solid #8c6e4e;\r\n        margin-bottom: 0.8rem;\r\n    }\r\n    .player-notification-area li button {\r\n        padding: 0.6rem 1rem;\r\n        font-size: 0.9rem;\r\n    }\r\n    .player-notification-area .notification-text {\r\n        font-weight: bold;\r\n        flex-grow: 1;\r\n        margin-right: 1rem;\r\n    }\r\n\r\n\r\n\r\n    /* DM Toggle Specific Styles */\r\n    .dm-toggle-container {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 0.5rem;\r\n        margin-left: 1rem; /* Adjust positioning as needed */\r\n        font-family: 'Merriweather', serif;\r\n        color: #f5f5dc;\r\n        font-weight: bold;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .dm-toggle-switch {\r\n        position: relative;\r\n        display: inline-block;\r\n        width: 48px; /* Wider switch */\r\n        height: 28px; /* Taller switch */\r\n    }\r\n\r\n    .dm-toggle-switch input {\r\n        opacity: 0;\r\n        width: 0;\r\n        height: 0;\r\n    }\r\n\r\n    .dm-slider {\r\n        position: absolute;\r\n        cursor: pointer;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        background-color: #ccc;\r\n        transition: 0.4s;\r\n        border-radius: 28px; /* More rounded */\r\n    }\r\n\r\n    .dm-slider:before {\r\n        position: absolute;\r\n        content: \"\";\r\n        height: 20px; /* Smaller circle */\r\n        width: 20px;\r\n        left: 4px;\r\n        bottom: 4px;\r\n        background-color: white;\r\n        transition: 0.4s;\r\n        border-radius: 50%;\r\n    }\r\n\r\n    input:checked + .dm-slider {\r\n        background-color: #8c6e4e; /* Gold when checked */\r\n    }\r\n\r\n    input:focus + .dm-slider {\r\n        box-shadow: 0 0 1px #8c6e4e;\r\n    }\r\n\r\n    input:checked + .dm-slider:before {\r\n        transform: translateX(20px); /* Move further */\r\n    }\r\n\r\n    /* --- SCROLLBAR THEMEING --- */\r\n    /* For Webkit browsers (Chrome, Safari, Edge) */\r\n    ::-webkit-scrollbar {\r\n        width: 12px; /* Width of the vertical scrollbar */\r\n        height: 12px; /* Height of the horizontal scrollbar */\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background: #5a4b4b; /* Darker track color, matching muted stone */\r\n        border-radius: 10px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #8c6e4e; /* Gold/bronze thumb color */\r\n        border-radius: 10px;\r\n        border: 2px solid #6a5d5a; /* Slightly darker border for depth */\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: #a38b6d; /* Lighter gold on hover */\r\n    }\r\n\r\n    /* For Firefox */\r\n    html {\r\n        scrollbar-width: thin; /* 'auto' | 'thin' | 'none' */\r\n        scrollbar-color: #8c6e4e #5a4b4b; /* thumb-color track-color */\r\n    }\r\n\r\n\r\n    /* Responsive Adjustments (ensure DM screen is also responsive) */\r\n    @media (max-width: 768px) {\r\n        .dm-sub-nav {\r\n            flex-direction: column;\r\n        }\r\n        .dm-sub-nav-item {\r\n            border-bottom: none;\r\n            border-right: 3px solid transparent;\r\n        }\r\n        .dm-sub-nav-item.active {\r\n            border-bottom-color: transparent;\r\n            border-right-color: #a38b6d;\r\n        }\r\n        .dm-player-view-details {\r\n            flex-direction: column;\r\n        }\r\n        .login-container {\r\n            flex-direction: column;\r\n            align-items: stretch;\r\n        }\r\n        .dm-toggle-container {\r\n            margin-left: 0;\r\n            margin-top: 1rem;\r\n            justify-content: center;\r\n            order: -1; /* Move toggle to top in mobile view */\r\n        }\r\n        .login-container input {\r\n            max-width: 100%;\r\n        }\r\n        .dm-distribution-controls .input-group {\r\n            flex-direction: column;\r\n        }\r\n        .dm-section-panel input, .dm-section-panel select {\r\n             max-width: 100%;\r\n        }\r\n        .card-collection-panel { /* Adjust player collection panel for mobile */\r\n            max-height: 500px;\r\n        }\r\n    }\r\n    @media (max-width: 480px) {\r\n        .dm-sub-nav-item {\r\n            padding: 0.8rem 1rem;\r\n            font-size: 0.85rem;\r\n        }\r\n    }\r\n`;\r\n\r\nfunction App() {\r\n    // --- State Variables ---\r\n    const [allCards, setAllCards] = useState([]); // All cards fetched from the backend (master list)\r\n    const [characterLevel, setCharacterLevel] = useState(1);\r\n    const [wisMod, setWisMod] = useState(0);\r\n    const [intMod, setIntMod] = useState(0);\r\n    const [chaMod, setChaMod] = useState(0);\r\n    const [maxDeckSize, setMaxDeckSize] = useState(0);\r\n    const [activeDeckInstances, setActiveDeckInstances] = useState([]); // Cards currently in the player's ACTIVE deck (persistent instances)\r\n    const [unlockedCollectionIds, setUnlockedCollectionIds] = useState([]); // IDs of all UNIQUE card types the player HAS UNLOCKED (owned pool)\r\n    const [error, setError] = useState(''); // General error messages for UI\r\n\r\n    // New states for login/auth\r\n    const [playerId, setPlayerId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [message, setMessage] = useState({ text: '', type: '' });\r\n    const [loading, setLoading] = useState(true); // Loading state for initial data fetch of allCards\r\n\r\n    // New state for tab management\r\n    const [activeTab, setActiveTab] = useState('available'); // 'available', 'deck', or 'dm_screen'\r\n\r\n    // State for newly acquired cards from booster packs\r\n    const [newlyAcquiredCards, setNewlyAcquiredCards] = useState([]);\r\n    const [lastOpenedPackType, setLastOpenedPackType] = useState('');\r\n    const [prePackUnlockedIds, setPrePackUnlockedIds] = useState([]); // Store state before opening pack for duplicate check\r\n\r\n    // --- DM/SESSION STATES ---\r\n    const [isDMMode, setIsDMMode] = useState(false); // New state for DM mode toggle\r\n    const [sessionNameInput, setSessionNameInput] = useState('');\r\n    const [sessionCodeInput, setSessionCodeInput] = useState('');\r\n    const [dmSessions, setDmSessions] = useState([]); // Sessions created by THIS DM\r\n    const [selectedDmSession, setSelectedDmSession] = useState(null); // The session the DM is currently viewing\r\n    const [playersInSelectedDmSession, setPlayersInSelectedDmSession] = useState([]); // Players in the selected DM session\r\n    const [selectedPlayerForDMView, setSelectedPlayerForDMView] = useState(null); // The specific player DM is inspecting\r\n    const [selectedPlayerDMData, setSelectedPlayerDMData] = useState(null); // Full card data for the inspected player\r\n    const [activeDmTab, setActiveDmTab] = useState('my_sessions'); // 'create_session', 'my_sessions', 'view_player'\r\n    const [selectedPackTypeToGive, setSelectedPackTypeToGive] = useState('Common Pack'); // For DM giving packs\r\n    const [searchCardInputForDM, setSearchCardInputForDM] = useState(''); // For DM searching cards to give\r\n\r\n    // --- NEW PENDING ITEM STATES FOR PLAYER ---\r\n    const [pendingBoosterPacks, setPendingBoosterPacks] = useState([]);\r\n    const [pendingCards, setPendingCards] = useState([]);\r\n\r\n\r\n    // --- Helper function to display messages ---\r\n    const showMessage = useCallback((text, type) => {\r\n        setMessage({ text, type });\r\n        // Clear message after 5 seconds for info, 3 seconds for others\r\n        const duration = type === 'info' ? 5000 : 3000;\r\n        setTimeout(() => setMessage({ text: '', type: '' }), duration);\r\n    }, []);\r\n\r\n    // --- API Call: Create Account ---\r\n    const handleCreateAccount = async () => {\r\n        if (!playerId || !password) {\r\n            showMessage('Player ID and password are required to create an account.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/deck/create`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to create account.');\r\n            }\r\n            \r\n            showMessage('Account created successfully! You can now log in.', 'success');\r\n        } catch (err) {\r\n            console.error('Error creating account:', err);\r\n            showMessage(`Failed to create account: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- API Call: Login and Load Deck ---\r\n    const handleLoginAndLoadDeck = async () => {\r\n        if (!playerId || !password) {\r\n            showMessage('Player ID and password are required to log in.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/deck/login`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Authentication failed.');\r\n            }\r\n\r\n            // Load data from backend upon successful login\r\n            setActiveDeckInstances(data.active_deck_instances || []); // Load active deck instances\r\n            setUnlockedCollectionIds(data.unlocked_collection_ids || []); // Load unlocked card IDs (now includes duplicates)\r\n            setCharacterLevel(data.character_level !== undefined ? data.character_level : 1);\r\n            setWisMod(data.wis_mod !== undefined ? data.wis_mod : 0);\r\n            setIntMod(data.int_mod !== undefined ? data.int_mod : 0);\r\n            setChaMod(data.cha_mod !== undefined ? data.cha_mod : 0);\r\n            setPendingBoosterPacks(data.pending_booster_packs || []); // Load pending booster packs\r\n            setPendingCards(data.pending_cards || []); // Load pending cards\r\n            setIsAuthenticated(true);\r\n            setActiveTab('deck'); // Automatically switch to the deck tab after login\r\n            \r\n            showMessage('Login successful! Deck and unlocked cards loaded.', 'success');\r\n        } catch (err) {\r\n            setIsAuthenticated(false);\r\n            console.error('Error logging in:', err);\r\n            showMessage(`Failed to load deck: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- API Call: Save Deck ---\r\n    const handleSaveDeck = async () => {\r\n        if (!isAuthenticated) {\r\n            showMessage('You must be logged in to save your deck.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/deck/save`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    player_id: playerId,\r\n                    password: password, // Send password for re-validation on backend\r\n                    active_deck_instances: activeDeckInstances, // Save active deck instances\r\n                    unlocked_collection_ids: unlockedCollectionIds, // Save unlocked card IDs (now includes duplicates)\r\n                    character_level: characterLevel,\r\n                    wis_mod: wisMod,\r\n                    int_mod: intMod,\r\n                    cha_mod: chaMod,\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to save deck.');\r\n            }\r\n\r\n            showMessage('Deck and unlocked cards saved successfully!', 'success');\r\n        } catch (err) {\r\n            console.error('Error saving deck:', err);\r\n            showMessage(`Failed to save deck: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- Effect to Fetch All Cards on Component Mount ---\r\n    useEffect(() => {\r\n        const fetchAllCards = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const cardsResponse = await fetch(`${API_BASE_URL}/cards`);\r\n                if (!cardsResponse.ok) {\r\n                    throw new Error(`HTTP error fetching cards! status: ${cardsResponse.status}`);\r\n                }\r\n                const cardsData = await cardsResponse.json();\r\n                setAllCards(cardsData);\r\n            } catch (err) {\r\n                console.error('Error fetching initial data:', err);\r\n                showMessage('Failed to fetch initial data: ' + err.message, 'error');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchAllCards();\r\n    }, [showMessage]); // Empty dependency array, this effect runs only once on mount\r\n\r\n    // --- Effect to Calculate Max Deck Size when Character Stats Change ---\r\n    useEffect(() => {\r\n        const calculateDeckSize = async () => {\r\n            setError(''); // Clear previous errors related to deck size\r\n            try {\r\n                const response = await fetch(`${API_BASE_URL}/calculate_deck_size`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        character_level: characterLevel,\r\n                        wis_mod: wisMod,\r\n                        int_mod: intMod,\r\n                        cha_mod: chaMod,\r\n                    }),\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setMaxDeckSize(data.max_deck_size);\r\n            } catch (err) {\r\n                setError('Failed to calculate deck size: ' + err.message);\r\n                console.error('Error calculating deck size:', err);\r\n            }\r\n        };\r\n\r\n        if (!isNaN(characterLevel) && !isNaN(wisMod) && !isNaN(intMod) && !isNaN(chaMod)) {\r\n            calculateDeckSize();\r\n        }\r\n    }, [characterLevel, wisMod, intMod, chaMod]);\r\n\r\n    // --- Booster Pack Logic: Open a new pack (Player initiated) ---\r\n    const handleOpenBoosterPack = async () => {\r\n        if (!isAuthenticated) {\r\n            showMessage(\"You must be logged in to open booster packs.\", \"error\");\r\n            return;\r\n        }\r\n        setLoading(true); // Indicate loading while opening pack\r\n        setNewlyAcquiredCards([]); // Clear previous new cards display\r\n        setLastOpenedPackType('');\r\n        setPrePackUnlockedIds(unlockedCollectionIds); // Store current collection for duplicate check\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/deck/open_booster`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password }), // Backend determines pack size\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to open booster pack.');\r\n            }\r\n\r\n            setLastOpenedPackType(data.pack_type);\r\n\r\n            if (data.new_cards && data.new_cards.length > 0) {\r\n                // Update the unlockedCollectionIds state with the new IDs (now including duplicates)\r\n                setUnlockedCollectionIds(data.updated_unlocked_collection_ids || []);\r\n                setNewlyAcquiredCards(data.new_cards); // Store new cards for display\r\n                showMessage(`You opened a ${data.pack_type} and acquired ${data.new_cards.length} cards!`, 'success');\r\n            } else {\r\n                showMessage(data.message || \"No new cards were found in the booster pack.\", 'info');\r\n            }\r\n        } catch (err) {\r\n            console.error('Error opening booster pack:', err);\r\n            showMessage(`Failed to open booster pack: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- Player: Open a pending booster pack ---\r\n    const handleOpenPendingBooster = async () => {\r\n        if (!isAuthenticated || pendingBoosterPacks.length === 0) {\r\n            showMessage('No pending booster packs to open.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        setNewlyAcquiredCards([]); // Clear previous new cards display\r\n        setLastOpenedPackType('');\r\n        setPrePackUnlockedIds(unlockedCollectionIds); // Store current collection for duplicate check\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/player/open_pending_booster`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password }),\r\n            });\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to open pending booster pack.');\r\n            }\r\n\r\n            setLastOpenedPackType(data.pack_type);\r\n            setUnlockedCollectionIds(data.updated_unlocked_collection_ids || []);\r\n            setPendingBoosterPacks(data.updated_pending_booster_packs || []);\r\n            setNewlyAcquiredCards(data.new_cards || []);\r\n            showMessage(`You opened a ${data.pack_type} and acquired ${data.new_cards.length} cards!`, 'success');\r\n        } catch (err) {\r\n            console.error('Error opening pending booster pack:', err);\r\n            showMessage(`Failed to open pending booster pack: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- Player: Accept a pending card ---\r\n    const handleAcceptPendingCard = async (cardIdToAccept) => {\r\n        if (!isAuthenticated || !cardIdToAccept) {\r\n            showMessage('No pending card selected or you are not logged in.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/player/accept_pending_card`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password, card_id: cardIdToAccept }),\r\n            });\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to accept pending card.');\r\n            }\r\n            setUnlockedCollectionIds(data.updated_unlocked_collection_ids || []);\r\n            setPendingCards(data.updated_pending_cards || []);\r\n            showMessage(`You accepted \"${data.card_name}\" into your collection!`, 'success');\r\n        } catch (err) {\r\n            console.error('Error accepting pending card:', err);\r\n            showMessage(`Failed to accept pending card: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    // --- Deck Building Logic: Add Card ---\r\n    const handleAddCardToDeck = useCallback((card) => {\r\n        if (!isAuthenticated) {\r\n            showMessage(\"You must be logged in to build a deck.\", \"error\");\r\n            return;\r\n        }\r\n        if (activeDeckInstances.length >= maxDeckSize) {\r\n            showMessage('Deck is full! Remove cards to add new ones.', 'error');\r\n            return;\r\n        }\r\n        \r\n        const ownedCopiesOfThisCard = unlockedCollectionIds.filter(id => id === card.id).length;\r\n        const copiesInActiveDeck = activeDeckInstances.filter(c => c.id === card.id).length;\r\n\r\n        if (copiesInActiveDeck >= ownedCopiesOfThisCard) {\r\n            showMessage(`You have already added all owned copies of ${card.name} to your deck. Open more booster packs to get more!`, 'error');\r\n            return;\r\n        }\r\n\r\n        const cantripCountInDeck = activeDeckInstances.filter(c => c.type === 'Cantrip').length;\r\n        if (card.type !== 'Cantrip' && cantripCountInDeck === 0 && activeDeckInstances.length === 0) {\r\n             showMessage('Your deck must contain at least one Cantrip! Add a Cantrip first.', 'error');\r\n             return;\r\n        }\r\n\r\n        // Add a new instance of the card to the active deck\r\n        setActiveDeckInstances(prev => [...prev, {\r\n            ...card,\r\n            instance_id: uuidv4(), // Assign a unique ID for this specific copy in the active deck\r\n            current_uses: card.default_uses_per_rest\r\n        }]);\r\n        showMessage('Card added to your deck!', 'success');\r\n    }, [isAuthenticated, maxDeckSize, activeDeckInstances, unlockedCollectionIds, showMessage]);\r\n\r\n    // --- Deck Building Logic: Remove Card ---\r\n    const handleRemoveCardFromDeck = useCallback((instance_id) => {\r\n        const updatedDeck = activeDeckInstances.filter(card => card.instance_id !== instance_id);\r\n        const cantripCount = updatedDeck.filter(c => c.type === 'Cantrip').length;\r\n\r\n        if (cantripCount === 0 && updatedDeck.length > 0) {\r\n            showMessage('Your deck must contain at least one Cantrip! You cannot remove the last one.', 'error');\r\n            return;\r\n        }\r\n        setActiveDeckInstances(updatedDeck);\r\n        showMessage('Card removed from deck.', 'success');\r\n    }, [activeDeckInstances, showMessage]);\r\n\r\n    // --- Card Usage Logic: Mark Card as Used ---\r\n    const handleMarkCardUsed = useCallback(async (instance_id) => {\r\n        const cardToUse = activeDeckInstances.find(card => card.instance_id === instance_id);\r\n        if (!cardToUse) return;\r\n\r\n        if (cardToUse.current_uses > 0) {\r\n            setActiveDeckInstances(prev =>\r\n                prev.map(card =>\r\n                    card.instance_id === instance_id ? { ...card, current_uses: card.current_uses - 1 } : card\r\n                )\r\n            );\r\n\r\n            // Notify backend about the card usage for logging purposes.\r\n            try {\r\n                const response = await fetch(`${API_BASE_URL}/card_used`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        name: cardToUse.name, // Use 'name' to match backend's 'card_name' expectation\r\n                        type: cardToUse.type, // Use 'type' to match backend's 'card_type' expectation\r\n                        deck_card_id: cardToUse.instance_id\r\n                    }),\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                console.log('Backend notification:', data.message);\r\n                console.log('Simulated System Log Entry from Backend:', data.log_entry);\r\n            } catch (err) {\r\n                showMessage('Failed to notify backend of card usage for logging: ' + err.message, 'error');\r\n                console.error('Error sending card used notification:', err);\r\n            }\r\n        } else {\r\n            showMessage(`\"${cardToUse.name}\" has no uses left! It needs a long rest.`, 'error');\r\n        }\r\n    }, [activeDeckInstances, showMessage]);\r\n\r\n    // --- Card Usage Logic: Reset Card Uses (Long Rest) ---\r\n    const handleResetCardUses = useCallback((instance_id) => {\r\n        setActiveDeckInstances(prev =>\r\n            prev.map(card =>\r\n                card.instance_id === instance_id ? { ...card, current_uses: card.default_uses_per_rest } : card\r\n            )\r\n        );\r\n        showMessage('Card uses reset!', 'success');\r\n    }, [showMessage]);\r\n\r\n    // Filter available cards based on what the player has unlocked\r\n    // And also count how many copies of each unique card ID the player owns\r\n    const filteredAvailableCardsWithCounts = allCards\r\n        .filter(card => unlockedCollectionIds.includes(card.id)) // Only show cards of types user has unlocked\r\n        .reduce((acc, card) => {\r\n            // Group by card ID and count occurrences\r\n            if (!acc[card.id]) {\r\n                const count = unlockedCollectionIds.filter(id => id === card.id).length;\r\n                acc[card.id] = { ...card, owned_copies: count };\r\n            }\r\n            return acc;\r\n        }, {});\r\n    \r\n    const uniqueUnlockedCards = Object.values(filteredAvailableCardsWithCounts);\r\n\r\n    // --- DM/Session Functions ---\r\n\r\n    // Effect to fetch DM sessions whenever DM mode is active and player ID is set\r\n    const fetchMyDMSessions = useCallback(async () => {\r\n        if (!isAuthenticated || !playerId || !password) return;\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/dm/my_sessions`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password }),\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to fetch your sessions.');\r\n            }\r\n            // Fetch player counts for each session here\r\n            const sessionsWithPlayerCounts = await Promise.all((data.sessions || []).map(async (session) => {\r\n                const playersResponse = await fetch(`${API_BASE_URL}/dm/sessions/${session.session_id}/players`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ player_id: playerId, password: password }),\r\n                });\r\n                const playersData = await playersResponse.json();\r\n                return {\r\n                    ...session,\r\n                    player_count: playersData.players ? playersData.players.length : 0\r\n                };\r\n            }));\r\n            setDmSessions(sessionsWithPlayerCounts);\r\n        } catch (err) {\r\n            console.error('Error fetching DM sessions or player counts:', err);\r\n            showMessage(`Failed to fetch DM sessions: ${err.message}`, 'error');\r\n            setDmSessions([]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, playerId, password, showMessage]);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated && isDMMode && playerId && activeDmTab === 'my_sessions') {\r\n            fetchMyDMSessions();\r\n        }\r\n    }, [isAuthenticated, isDMMode, playerId, activeDmTab, fetchMyDMSessions]);\r\n\r\n\r\n    const handleCreateSession = async () => {\r\n        if (!playerId || !password) {\r\n            showMessage('You must be logged in to create a session.', 'error');\r\n            return;\r\n        }\r\n        if (!sessionNameInput) {\r\n            showMessage('Session name is required.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/dm/create_session`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password, session_name: sessionNameInput }),\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to create session.');\r\n            }\r\n            showMessage(`Session \"${data.session_name}\" created with code: ${data.session_code}`, 'success');\r\n            setSessionNameInput(''); // Clear input\r\n            fetchMyDMSessions(); // Refresh DM's session list\r\n        } catch (err) {\r\n            console.error('Error creating session:', err);\r\n            showMessage(`Failed to create session: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleJoinSession = async () => {\r\n        if (!isAuthenticated) { // Players must be authenticated to join\r\n            showMessage('You must be logged in to join a session.', 'error');\r\n            return;\r\n        }\r\n        if (isDMMode) { // DMs cannot join sessions as players\r\n            showMessage('You are in DM mode. Switch to Player mode to join a session.', 'error');\r\n            return;\r\n        }\r\n        if (!sessionCodeInput) {\r\n            showMessage('Session code is required.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/player/join_session`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password, session_code: sessionCodeInput }),\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to join session.');\r\n            }\r\n            showMessage(data.message, 'success');\r\n            setSessionCodeInput(''); // Clear input\r\n        } catch (err) {\r\n            console.error('Error joining session:', err);\r\n            showMessage(`Failed to join session: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchPlayersInSession = useCallback(async (sessionId) => {\r\n        if (!isAuthenticated || !playerId || !password || !sessionId) return;\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/dm/sessions/${sessionId}/players`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password }),\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to fetch players for this session.');\r\n            }\r\n            setPlayersInSelectedDmSession(data.players || []);\r\n        } catch (err) {\r\n            console.error('Error fetching players in session:', err);\r\n            showMessage(`Failed to fetch players: ${err.message}`, 'error');\r\n            setPlayersInSelectedDmSession([]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, playerId, password, showMessage]);\r\n\r\n    const handleSelectDmSession = (session) => {\r\n        setSelectedDmSession(session);\r\n        fetchPlayersInSession(session.session_id);\r\n        setSelectedPlayerForDMView(null); // Clear any previously selected player\r\n        setSelectedPlayerDMData(null);\r\n        setActiveDmTab('my_sessions'); // Stay on my sessions tab, but show players for selected session\r\n    };\r\n\r\n    const handleViewPlayerCards = (player_id_to_view) => {\r\n        const player = playersInSelectedDmSession.find(p => p.player_id === player_id_to_view);\r\n        if (player) {\r\n            setSelectedPlayerForDMView(player.player_id);\r\n            setSelectedPlayerDMData(player.data); // This is the full player data including deck/collection\r\n            setActiveDmTab('view_player'); // Switch to a sub-tab to view player details\r\n        } else {\r\n            showMessage(\"Could not find player data for viewing.\", \"error\");\r\n        }\r\n    };\r\n\r\n    const handleGiveSpecificPack = async () => {\r\n        if (!selectedPlayerForDMView || !selectedPackTypeToGive) {\r\n            showMessage('Select a player and a pack type.', 'error');\r\n            return;\r\n        }\r\n        if (!playerId || !password) {\r\n            showMessage('DM must be logged in to give packs.', 'error');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/dm/give_booster`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    dm_player_id: playerId,\r\n                    password: password,\r\n                    target_player_id: selectedPlayerForDMView,\r\n                    pack_type: selectedPackTypeToGive\r\n                }),\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to give booster pack.');\r\n            }\r\n            showMessage(data.message, 'success'); // DM sees confirmation\r\n\r\n            // Re-fetch player data for DM to reflect pending item\r\n            const updatedPlayerResponse = await fetch(`${API_BASE_URL}/dm/sessions/${selectedDmSession.session_id}/players`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password }),\r\n            });\r\n            const updatedPlayersData = await updatedPlayerResponse.json();\r\n            const updatedPlayer = updatedPlayersData.players.find(p => p.player_id === selectedPlayerForDMView);\r\n            if (updatedPlayer) {\r\n                setSelectedPlayerDMData(updatedPlayer.data); // Update DM's view of player's data\r\n            }\r\n            \r\n        } catch (err) {\r\n            console.error('Error giving booster pack:', err);\r\n            showMessage(`Failed to give booster pack: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleGiveSpecificCard = async (cardId) => {\r\n        if (!selectedPlayerForDMView || !cardId) {\r\n            showMessage('Select a player and a card to give.', 'error');\r\n            return;\r\n        }\r\n        if (!playerId || !password) {\r\n            showMessage('DM must be logged in to give cards.', 'error');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/dm/give_card`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    dm_player_id: playerId,\r\n                    password: password,\r\n                    target_player_id: selectedPlayerForDMView,\r\n                    card_id: cardId\r\n                }),\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to give card.');\r\n            }\r\n            showMessage(data.message, 'success'); // DM sees confirmation\r\n\r\n            // Re-fetch player data for DM to reflect pending item\r\n            const updatedPlayerResponse = await fetch(`${API_BASE_URL}/dm/sessions/${selectedDmSession.session_id}/players`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password }),\r\n            });\r\n            const updatedPlayersData = await updatedPlayerResponse.json();\r\n            const updatedPlayer = updatedPlayersData.players.find(p => p.player_id === selectedPlayerForDMView);\r\n            if (updatedPlayer) {\r\n                setSelectedPlayerDMData(updatedPlayer.data); // Update DM's view of player's data\r\n            }\r\n\r\n        } catch (err) {\r\n            console.error('Error giving card:', err);\r\n            showMessage(`Failed to give card: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    // Helper to map card IDs from player data back to full card objects from allCards\r\n    const getFullCardDetails = (cardId) => {\r\n        return allCards.find(card => card.id === cardId);\r\n    };\r\n\r\n    // Filter all cards for DM distribution search\r\n    const filteredAllCardsForDM = allCards.filter(card => \r\n        card.name.toLowerCase().includes(searchCardInputForDM.toLowerCase()) ||\r\n        card.type.toLowerCase().includes(searchCardInputForDM.toLowerCase()) ||\r\n        card.rarity.toLowerCase().includes(searchCardInputForDM.toLowerCase())\r\n    );\r\n\r\n    // --- NEW: Function to fetch pending items ---\r\n    const fetchPendingItems = useCallback(async () => {\r\n        if (!isAuthenticated || !playerId || !password || isDMMode) return; // Only fetch if logged in, in player mode\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/player/pending_items`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password }),\r\n            });\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to fetch pending items.');\r\n            }\r\n\r\n            // Check if there are new pending items\r\n            const newPacks = data.pending_booster_packs || [];\r\n            const newCards = data.pending_cards || [];\r\n\r\n            if (newPacks.length > pendingBoosterPacks.length || newCards.length > pendingCards.length) {\r\n                showMessage('You have new items from your DM!', 'info');\r\n            }\r\n\r\n            setPendingBoosterPacks(newPacks);\r\n            setPendingCards(newCards);\r\n\r\n        } catch (err) {\r\n            console.error('Error fetching pending items:', err);\r\n            // Don't show an error message for every failed poll to avoid spamming the user\r\n        }\r\n    }, [isAuthenticated, playerId, password, isDMMode, pendingBoosterPacks.length, pendingCards.length, showMessage]);\r\n\r\n    // --- NEW: Polling effect for pending items ---\r\n    useEffect(() => {\r\n        let intervalId;\r\n        if (isAuthenticated && !isDMMode && playerId && password) {\r\n            // Fetch immediately on login/mode switch\r\n            fetchPendingItems();\r\n            // Then set up polling every 10 seconds\r\n            intervalId = setInterval(fetchPendingItems, 10000); \r\n        }\r\n\r\n        // Cleanup function to clear the interval when component unmounts or dependencies change\r\n        return () => {\r\n            if (intervalId) {\r\n                clearInterval(intervalId);\r\n            }\r\n        };\r\n    }, [isAuthenticated, isDMMode, playerId, password, fetchPendingItems]);\r\n\r\n\r\n    // --- Main Component Render ---\r\n    return (\r\n        <>\r\n            <style>{AppStyles}</style>\r\n            <div className=\"App\">\r\n                <h1 className=\"app-title\">Spell Trading Cards Manager</h1>\r\n\r\n                {/* Login/Auth Section */}\r\n                <div className=\"login-container\">\r\n                    {/* DM Mode Toggle */}\r\n                    {isAuthenticated && ( // Only show toggle if logged in\r\n                        <div className=\"dm-toggle-container\">\r\n                            <label className=\"dm-toggle-switch\">\r\n                                <input type=\"checkbox\" checked={isDMMode} onChange={(e) => {\r\n                                    setIsDMMode(e.target.checked);\r\n                                    // When toggling, reset DM specific states and ensure appropriate tab is active\r\n                                    setSelectedDmSession(null); \r\n                                    setSelectedPlayerForDMView(null);\r\n                                    setSelectedPlayerDMData(null);\r\n                                    setActiveDmTab('my_sessions'); // Reset DM sub-tab\r\n                                    // If switching to DM mode, set main active tab to dm_screen\r\n                                    // Otherwise, set to 'available' (default player tab)\r\n                                    setActiveTab(e.target.checked ? 'dm_screen' : 'available'); \r\n                                }} />\r\n                                <span className=\"dm-slider\"></span>\r\n                            </label>\r\n                            <span>DM Mode</span>\r\n                        </div>\r\n                    )}\r\n                    \r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Player ID\"\r\n                        value={playerId}\r\n                        onChange={(e) => setPlayerId(e.target.value)}\r\n                        disabled={loading}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        disabled={loading}\r\n                    />\r\n                    <button onClick={handleLoginAndLoadDeck} disabled={loading}>Log In</button>\r\n                    <button onClick={handleCreateAccount} disabled={loading}>Create Account</button>\r\n                    {isAuthenticated && <button onClick={handleSaveDeck} disabled={loading}>Save Deck</button>}\r\n                </div>\r\n\r\n                {/* Message Box */}\r\n                {message.text && <div className={`message-box ${message.type}`}>{message.text}</div>}\r\n\r\n                {/* Conditional Rendering of Player vs. DM content */}\r\n                {!isAuthenticated ? (\r\n                    <div className=\"pre-login-message\">\r\n                        <h3>Please log in to access the Spell Card Manager.</h3>\r\n                        <p>Create an account or log in to manage your spells and game sessions!</p>\r\n                    </div>\r\n                ) : isDMMode ? (\r\n                    /* DM Screen Section (full screen when isDMMode is true) */\r\n                    <div className=\"dm-screen-container\">\r\n                        <h2 className=\"panel-title\">DM Screen</h2>\r\n\r\n                        <div className=\"dm-sub-nav\">\r\n                            <div \r\n                                className={`dm-sub-nav-item ${activeDmTab === 'create_session' ? 'active' : ''}`} \r\n                                onClick={() => { setActiveDmTab('create_session'); setSelectedDmSession(null); setSelectedPlayerForDMView(null); }}\r\n                            >\r\n                                Create Session\r\n                            </div>\r\n                            <div \r\n                                className={`dm-sub-nav-item ${activeDmTab === 'my_sessions' ? 'active' : ''}`} \r\n                                onClick={() => { setActiveDmTab('my_sessions'); setSelectedPlayerForDMView(null); }}\r\n                            >\r\n                                My Sessions\r\n                            </div>\r\n                            {selectedPlayerForDMView && (\r\n                                <div \r\n                                    className={`dm-sub-nav-item ${activeDmTab === 'view_player' ? 'active' : ''}`} \r\n                                    onClick={() => setActiveDmTab('view_player')}\r\n                                >\r\n                                    Viewing: {selectedPlayerForDMView}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* DM Create Session View */}\r\n                        {activeDmTab === 'create_session' && (\r\n                            <div className=\"dm-section-panel\">\r\n                                <h3>Create New Game Session</h3>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Session Name (e.g., 'Dragon's Breath Campaign')\"\r\n                                    value={sessionNameInput}\r\n                                    onChange={(e) => setSessionNameInput(e.target.value)}\r\n                                    disabled={loading}\r\n                                    style={{ maxWidth: '400px' }}\r\n                                />\r\n                                <button onClick={handleCreateSession} disabled={loading}>\r\n                                    Generate Session Code\r\n                                </button>\r\n                                <p className=\"empty-message\">\r\n                                    Once created, share the 6-character session code with your players!\r\n                                </p>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* DM My Sessions & View Players View */}\r\n                        {activeDmTab === 'my_sessions' && (\r\n                            <div className=\"dm-section-panel\">\r\n                                <h3>Your Game Sessions</h3>\r\n                                {loading ? (\r\n                                    <p className=\"empty-message\">Loading sessions...</p>\r\n                                ) : dmSessions.length === 0 ? (\r\n                                    <p className=\"empty-message\">You haven't created any sessions yet.</p>\r\n                                ) : (\r\n                                    <div className=\"dm-session-list\">\r\n                                        <ul>\r\n                                            {dmSessions.map(session => (\r\n                                                <li key={session.session_id} onClick={() => handleSelectDmSession(session)}>\r\n                                                    <span>\r\n                                                        <strong>{session.session_name}</strong> (Code: {session.session_code})\r\n                                                    </span>\r\n                                                    <span>\r\n                                                        Players: {session.player_count} {/* This now displays the fetched count */}\r\n                                                    </span>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {selectedDmSession && (\r\n                                    <>\r\n                                        <h3 style={{ marginTop: '2rem' }}>Players in \"{selectedDmSession.session_name}\"</h3>\r\n                                        {loading ? (\r\n                                            <p className=\"empty-message\">Loading players...</p>\r\n                                        ) : playersInSelectedDmSession.length === 0 ? (\r\n                                            <p className=\"empty-message\">No players have joined this session yet.</p>\r\n                                        ) : (\r\n                                            <div className=\"dm-player-list\">\r\n                                                <ul>\r\n                                                    {playersInSelectedDmSession.map(player => (\r\n                                                        <li key={player.player_id} onClick={() => handleViewPlayerCards(player.player_id)}>\r\n                                                            <span className=\"dm-player-id\">{player.player_id}</span>\r\n                                                            <button className=\"select-button\">View Cards</button>\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n\r\n                         {/* DM Player View (when a DM selects a specific player) */}\r\n                        {activeDmTab === 'view_player' && selectedPlayerDMData && (\r\n                            <div className=\"dm-section-panel\">\r\n                                <h3>Viewing Player: {selectedPlayerForDMView}</h3>\r\n                                <button onClick={() => setActiveDmTab('my_sessions')} className=\"select-button\" style={{ marginBottom: '1rem' }}>\r\n                                    Back to Session Players\r\n                                </button>\r\n\r\n                                <div className=\"dm-player-view-details\">\r\n                                    <div className=\"dm-player-stats-panel\">\r\n                                        <h4>Player Stats</h4>\r\n                                        <p>Level: <span>{selectedPlayerDMData.character_level}</span></p>\r\n                                        <p>WIS Mod: <span>{selectedPlayerDMData.wis_mod}</span></p>\r\n                                        <p>INT Mod: <span>{selectedPlayerDMData.int_mod}</span></p>\r\n                                        <p>CHA Mod: <span>{selectedPlayerDMData.cha_mod}</span></p>\r\n                                    </div>\r\n\r\n                                    <div className=\"dm-player-deck-panel\">\r\n                                        <h4>Active Deck ({selectedPlayerDMData.active_deck_instances.length})</h4>\r\n                                        <div className=\"card-list\">\r\n                                            {selectedPlayerDMData.active_deck_instances.length === 0 ? (\r\n                                                <p className=\"empty-message no-hover\">No cards in active deck.</p>\r\n                                            ) : (\r\n                                                selectedPlayerDMData.active_deck_instances.map(card => (\r\n                                                    <div key={card.instance_id} className=\"card-item\">\r\n                                                         <img\r\n                                                            src={`https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`}\r\n                                                            alt={card.name}\r\n                                                            className=\"card-image\"\r\n                                                            onError={(e) => { e.target.onerror = null; e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\"; }}\r\n                                                        />\r\n                                                        {card.backlash_effect && (\r\n                                                            <p className=\"card-backlash\">Backlash: {card.backlash_effect}</p>\r\n                                                        )}\r\n                                                        <h3 className=\"card-name\">{card.name}</h3>\r\n                                                        <p className=\"card-description\">{card.description}</p>\r\n                                                        {card.effect && (\r\n                                                            <p className=\"card-effect\">Effect: {card.effect}</p>\r\n                                                        )}\r\n                                                        <p className=\"card-uses\">Uses: {card.current_uses}/{card.default_uses_per_rest}</p>\r\n                                                    </div>\r\n                                                ))\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Owned Collection Panel - Now Scrollable and Smaller Cards */}\r\n                                    <div className=\"dm-player-collection-panel\">\r\n                                        <h4>Owned Collection ({selectedPlayerDMData.unlocked_collection_ids.length})</h4>\r\n                                        <div className=\"card-list\">\r\n                                            {selectedPlayerDMData.unlocked_collection_ids.length === 0 ? (\r\n                                                <p className=\"empty-message no-hover\">No cards owned.</p>\r\n                                            ) : (\r\n                                                // Display unique cards from collection, with count\r\n                                                Object.entries(selectedPlayerDMData.unlocked_collection_ids.reduce((acc, cardId) => {\r\n                                                    acc[cardId] = (acc[cardId] || 0) + 1;\r\n                                                    return acc;\r\n                                                }, {})).map(([cardId, count]) => {\r\n                                                    const fullCard = getFullCardDetails(cardId);\r\n                                                    return fullCard ? (\r\n                                                        <div key={cardId} className=\"card-item\">\r\n                                                             <img\r\n                                                                src={`https://placehold.co/100x150/a8dadc/ffffff?text=${fullCard.name.split('.')[0].replace('_', '%20')}`}\r\n                                                                alt={fullCard.name}\r\n                                                                className=\"card-image\"\r\n                                                                onError={(e) => { e.target.onerror = null; e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\"; }}\r\n                                                            />\r\n                                                            <h4 className=\"card-name\">{fullCard.name}</h4>\r\n                                                            {fullCard.backlash_effect && (\r\n                                                                <p className=\"card-backlash\">Backlash: {fullCard.backlash_effect}</p>\r\n                                                            )}\r\n                                                            <p className=\"card-description\">{fullCard.description}</p>\r\n                                                            {fullCard.effect && (\r\n                                                                <p className=\"card-effect\">Effect: {fullCard.effect}</p>\r\n                                                            )}\r\n                                                            <p className=\"card-meta\">Rarity: <span>{fullCard.rarity}</span></p>\r\n                                                            <p className=\"card-meta\">Owned: <span>{count}</span></p>\r\n                                                        </div>\r\n                                                    ) : null;\r\n                                                })\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* Display Pending Items for the Player being viewed by DM */}\r\n                                    {(selectedPlayerDMData.pending_booster_packs.length > 0 || selectedPlayerDMData.pending_cards.length > 0) && (\r\n                                        <div className=\"player-notification-area\" style={{ marginTop: '2rem' }}>\r\n                                            <h3>Player's Pending Items</h3>\r\n                                            <ul>\r\n                                                {selectedPlayerDMData.pending_booster_packs.map((pack, index) => (\r\n                                                    <li key={`dm-player-pending-pack-${index}`}>\r\n                                                        <span className=\"notification-text\">Pending: {pack}</span>\r\n                                                    </li>\r\n                                                ))}\r\n                                                {selectedPlayerDMData.pending_cards.map((cardId, index) => {\r\n                                                    const card = getFullCardDetails(cardId);\r\n                                                    return card ? (\r\n                                                        <li key={`dm-player-pending-card-${cardId}-${index}`}>\r\n                                                            <span className=\"notification-text\">Pending: {card.name}</span>\r\n                                                        </li>\r\n                                                    ) : null;\r\n                                                })}\r\n                                            </ul>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* --- DM Distribution Controls --- */}\r\n                                <div className=\"dm-distribution-controls\">\r\n                                    <h3>Distribute Items to {selectedPlayerForDMView}</h3>\r\n\r\n                                    {/* Give Booster Pack */}\r\n                                    <div className=\"input-group\">\r\n                                        <select \r\n                                            value={selectedPackTypeToGive} \r\n                                            onChange={(e) => setSelectedPackTypeToGive(e.target.value)}\r\n                                            disabled={loading}\r\n                                        >\r\n                                            <option value=\"Common Pack\">Common Pack</option>\r\n                                            <option value=\"Uncommon Pack\">Uncommon Pack</option>\r\n                                            <option value=\"Rare Pack\">Rare Pack</option>\r\n                                            <option value=\"Legendary Pack\">Legendary Pack</option>\r\n                                        </select>\r\n                                        <button onClick={handleGiveSpecificPack} disabled={loading} className=\"booster-button\">\r\n                                            Give Pack\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {/* Give Specific Card */}\r\n                                    <h4 style={{marginTop: '1rem', marginBottom: '0.5rem'}}>Give Specific Card</h4>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Search Cards to Give...\"\r\n                                        value={searchCardInputForDM}\r\n                                        onChange={(e) => setSearchCardInputForDM(e.target.value)}\r\n                                        disabled={loading}\r\n                                        style={{ maxWidth: '400px' }}\r\n                                    />\r\n                                    <div className=\"dm-card-distribution-list\">\r\n                                        {loading ? (\r\n                                            <p className=\"empty-message no-hover\">Loading all cards...</p>\r\n                                        ) : filteredAllCardsForDM.length === 0 ? (\r\n                                            <p className=\"empty-message no-hover\">No cards found matching your search.</p>\r\n                                        ) : (\r\n                                            <ul>\r\n                                                {filteredAllCardsForDM.map(card => (\r\n                                                    <li key={`dm-give-${card.id}`}>\r\n                                                        <span className=\"card-name\">{card.name} ({card.type}) - {card.rarity}</span>\r\n                                                        <button \r\n                                                            onClick={() => handleGiveSpecificCard(card.id)} \r\n                                                            disabled={loading}\r\n                                                            className=\"select-button\"\r\n                                                        >\r\n                                                            Give\r\n                                                        </button>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    /* Player Content (when isDMMode is false) */\r\n                    <div className=\"main-content\">\r\n                        {/* Player Stats Input Panel */}\r\n                        <div className=\"stats-container\">\r\n                            <label>Level: <input type=\"number\" value={characterLevel} onChange={(e) => setCharacterLevel(Math.max(1, parseInt(e.target.value) || 1))} min=\"1\" max=\"20\" /></label>\r\n                            <label>WIS Mod: <input type=\"number\" value={wisMod} onChange={(e) => setWisMod(parseInt(e.target.value) || 0)} /></label>\r\n                            <label>INT Mod: <input type=\"number\" value={intMod} onChange={(e) => setIntMod(parseInt(e.target.value) || 0)} /></label>\r\n                            <label>CHA Mod: <input type=\"number\" value={chaMod} onChange={(e) => setChaMod(parseInt(e.target.value) || 0)} /></label>\r\n                            <p>Max Deck Size: <span className=\"highlight\">{maxDeckSize}</span></p>\r\n                        </div>\r\n\r\n                        {/* Player Notification Area */}\r\n                        {(pendingBoosterPacks.length > 0 || pendingCards.length > 0) && (\r\n                            <div className=\"player-notification-area\">\r\n                                <h3>You Have New Items! 🎉</h3>\r\n                                <ul>\r\n                                    {pendingBoosterPacks.map((pack, index) => (\r\n                                        <li key={`pending-pack-${index}`}>\r\n                                            <span className=\"notification-text\">Pending: {pack}</span>\r\n                                            <button onClick={handleOpenPendingBooster} disabled={loading} className=\"booster-button\">\r\n                                                Open Pack\r\n                                            </button>\r\n                                        </li>\r\n                                    ))}\r\n                                    {pendingCards.map((cardId, index) => {\r\n                                        const card = getFullCardDetails(cardId);\r\n                                        return card ? (\r\n                                            <li key={`pending-card-${cardId}-${index}`}>\r\n                                                <span className=\"notification-text\">Pending: {card.name} ({card.rarity})</span>\r\n                                                <button onClick={() => handleAcceptPendingCard(card.id)} disabled={loading} className=\"select-button\">\r\n                                                    Accept Card\r\n                                                </button>\r\n                                            </li>\r\n                                        ) : null;\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Tab Navigation for Player Mode */}\r\n                        <div className=\"tab-navigation\">\r\n                            <div \r\n                                className={`tab-item ${activeTab === 'available' ? 'active' : ''}`} \r\n                                onClick={() => setActiveTab('available')}\r\n                            >\r\n                                Available Spells ({uniqueUnlockedCards.length} Types / {unlockedCollectionIds.length} Total Owned)\r\n                            </div>\r\n                            <div \r\n                                className={`tab-item ${activeTab === 'deck' ? 'active' : ''}`} \r\n                                onClick={() => setActiveTab('deck')}\r\n                            >\r\n                                Your Deck ({activeDeckInstances.length}/{maxDeckSize})\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Available Cards Section - Now Scrollable */}\r\n                        {activeTab === 'available' && (\r\n                            <>\r\n                                <div className=\"card-collection-panel\"> {/* This panel now has max-height and overflow-y: auto */}\r\n                                    <h2 className=\"panel-title\">Available Spells</h2>\r\n                                    {loading && <p className=\"empty-message\">Loading cards...</p>}\r\n                                    {!isAuthenticated && !loading && (\r\n                                        <div className=\"pre-login-message\">\r\n                                            <h3>Log in to see your available spells.</h3>\r\n                                        </div>\r\n                                    )}\r\n                                    {isAuthenticated && !loading && uniqueUnlockedCards.length > 0 && (\r\n                                        <div className=\"card-list\">\r\n                                            {uniqueUnlockedCards.map((card) => (\r\n                                                <div key={card.id} className=\"card-item available-card\" onClick={() => handleAddCardToDeck(card)}>\r\n                                                    <img\r\n                                                        src={`https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`}\r\n                                                        alt={card.name}\r\n                                                        className=\"card-image\"\r\n                                                        onError={(e) => { e.target.onerror = null; e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\"; }}\r\n                                                    />\r\n                                                    {card.backlash_effect && (\r\n                                                        <p className=\"card-backlash\">Backlash: {card.backlash_effect}</p>\r\n                                                    )}\r\n                                                    <h3 className=\"card-name\">{card.name} ({card.type})</h3>\r\n                                                    <p className=\"card-description\">{card.description}</p>\r\n                                                    {card.effect && (\r\n                                                        <p className=\"card-effect\">Effect: {card.effect}</p>\r\n                                                    )}\r\n                                                    <p className=\"card-meta\">Rarity: <span>{card.rarity}</span></p>\r\n                                                    <p className=\"card-meta\">Owned Copies: <span>{card.owned_copies}</span></p>\r\n                                                    <button\r\n                                                        onClick={(e) => { e.stopPropagation(); handleAddCardToDeck(card); }} // Stop propagation to prevent parent onClick\r\n                                                        // Disable button if deck is full OR if all owned copies are already in the deck\r\n                                                        disabled={activeDeckInstances.length >= maxDeckSize || \r\n                                                                    activeDeckInstances.filter(c => c.id === card.id).length >= card.owned_copies}\r\n                                                        className=\"select-button\"\r\n                                                    >\r\n                                                        Add to Deck\r\n                                                    </button>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                </div>\r\n                                {/* Booster Pack Section - Moved outside card-collection-panel */}\r\n                                {isAuthenticated && !loading && (\r\n                                    <div className=\"booster-pack-section\">\r\n                                        {uniqueUnlockedCards.length === 0 && pendingBoosterPacks.length === 0 && (\r\n                                            <p className=\"empty-message\">You haven't unlocked any unique spell types yet! Open a booster pack to get started.</p>\r\n                                        )}\r\n                                        {/* Only show \"Open Booster Pack\" button if no pending packs */}\r\n                                        {pendingBoosterPacks.length === 0 && (\r\n                                            <button \r\n                                                onClick={handleOpenBoosterPack} \r\n                                                disabled={loading}\r\n                                                className=\"booster-button\"\r\n                                            >\r\n                                                Open Booster Pack\r\n                                            </button>\r\n                                        )}\r\n                                        \r\n                                        {newlyAcquiredCards.length > 0 && (\r\n                                            <div className=\"new-cards-display\">\r\n                                                <h4>Newly Acquired Cards from {lastOpenedPackType}:</h4>\r\n                                                <ul>\r\n                                                    {newlyAcquiredCards.map((card, index) => (\r\n                                                        <li key={card.id + \"-new-\" + index}> {/* Use unique key for each new card */}\r\n                                                            {card.name} ({card.type}, {card.rarity})\r\n                                                            {prePackUnlockedIds.includes(card.id) && <span> (Duplicate)</span>}\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                            </>\r\n                        )}\r\n\r\n                        {/* Built Deck Section */}\r\n                        {activeTab === 'deck' && (\r\n                            <div className=\"built-deck-panel\">\r\n                                <h2 className=\"panel-title\">Your Deck ({activeDeckInstances.length}/{maxDeckSize})</h2>\r\n                                <div className=\"deck-list\">\r\n                                    {isAuthenticated ? (\r\n                                        activeDeckInstances.length === 0 ? (\r\n                                            <p className=\"empty-message\">Select cards from the \"Available Spells\" tab to build your deck!</p>\r\n                                        ) : (\r\n                                            activeDeckInstances.map((card) => (\r\n                                                <div key={card.instance_id} className=\"card-item deck-card\">\r\n                                                    <img\r\n                                                        src={`https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`}\r\n                                                        alt={card.name}\r\n                                                        className=\"card-image\"\r\n                                                        onError={(e) => { e.target.onerror = null; e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\"; }}\r\n                                                    />\r\n                                                    {card.backlash_effect && (\r\n                                                        <p className=\"card-backlash\">Backlash: {card.backlash_effect}</p>\r\n                                                    )}\r\n                                                    <h3 className=\"card-name\">{card.name} ({card.type})</h3>\r\n                                                    <p className=\"card-description\">{card.description}</p>\r\n                                                    {card.effect && (\r\n                                                        <p className=\"card-effect\">Effect: {card.effect}</p>\r\n                                                    )}\r\n                                                    <p className=\"card-meta\">Rarity: <span>{card.rarity}</span></p>\r\n                                                    <p className=\"card-uses\">Uses Left: {card.current_uses}/{card.default_uses_per_rest}</p>\r\n                                                    <div className=\"card-actions\">\r\n                                                        <button\r\n                                                            onClick={() => handleMarkCardUsed(card.instance_id)}\r\n                                                            disabled={card.current_uses <= 0}\r\n                                                            className=\"use-button\"\r\n                                                        >\r\n                                                            Use\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={() => handleResetCardUses(card.instance_id)}\r\n                                                            className=\"reset-button\"\r\n                                                        >\r\n                                                            Reset Uses\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={() => handleRemoveCardFromDeck(card.instance_id)}\r\n                                                            className=\"remove-button\"\r\n                                                        >\r\n                                                            Remove\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        )\r\n                                    ) : (\r\n                                        <div className=\"pre-login-message\">\r\n                                            <h3>Please log in to load your character and spell deck.</h3>\r\n                                            <p>Once logged in, your deck and stats will appear here.</p>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Player Join Session Input */}\r\n                        {isAuthenticated && (\r\n                            <div className=\"dm-section-panel\" style={{ marginTop: '2rem' }}>\r\n                                <h3>Join a Game Session</h3>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Session Code\"\r\n                                    value={sessionCodeInput}\r\n                                    onChange={(e) => setSessionCodeInput(e.target.value)}\r\n                                    disabled={loading}\r\n                                    style={{ maxWidth: '250px' }}\r\n                                />\r\n                                <button onClick={handleJoinSession} disabled={loading}>\r\n                                    Join Session\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}