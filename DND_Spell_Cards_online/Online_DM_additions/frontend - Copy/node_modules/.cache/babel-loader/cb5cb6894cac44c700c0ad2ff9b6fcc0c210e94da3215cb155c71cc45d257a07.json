{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\DND_Spell_Cards\\\\Spell_Card_Game\\\\DND_Spell_Cards_online\\\\Online_DM_additions\\\\frontend - Copy\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// dnd-spell-cards-app/frontend/src/App.js\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid for unique keys for deck card instances\n\n// IMPORTANT: Update this to your VM's Public IP address (or domain name if configured)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://193.122.147.91:5000/api';\n\n// Inline CSS for self-contained component\nconst AppStyles = `\n    /* Import Google Fonts for a D&D feel */\n    @import url('https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Merriweather:wght@400;700&display=swap');\n\n    body {\n        background-color: #3b2f2f; /* Dark brown background, like a closed grimoire */\n        font-family: 'Merriweather', serif; /* Readable serif for body text */\n        color: #5a4b4b; /* Darker, faded text */\n        margin: 0;\n        padding: 0;\n        line-height: 1.6;\n    }\n\n    .App {\n        display: flex;\n        flex-direction: column;\n        min-height: 100vh;\n        align-items: center;\n        padding: 1.5rem; /* Increased padding */\n        box-sizing: border-box;\n        /* --- NEW WOODEN FLOOR TEXTURE --- */\n        background-image: url('/images/wooden-floor.jpg');\n        background-size: cover;\n        background-position: center; /* Center the background image */\n        background-attachment: fixed;\n        border: 10px solid #4a3e3c; /* Thick, dark border for the \"book\" effect */\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5); /* Deep shadow for depth */\n        margin: 1rem; /* Margin to show body background */\n        border-radius: 1rem; /* Slightly rounded edges for the book */\n    }\n\n    .app-title {\n        font-family: 'Cinzel', serif; /* Ornate font for title */\n        color: #8c6e4e; /* Gold/parchment color */\n        text-align: center;\n        margin-bottom: 2rem;\n        font-size: 3.2rem; /* Larger title */\n        font-weight: 700;\n        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.6); /* Text shadow for depth */\n    }\n\n    .login-container, .stats-container, .dm-section-panel, .player-notification-area, .booster-pack-section, .player-filters-sort-search { /* Added .player-filters-sort-search */\n        background: #6a5d5a; /* Muted stone/dark wood color */\n        color: #f5f5dc; /* Off-white for readability */\n        padding: 1.8rem; /* More padding */\n        margin-bottom: 2rem;\n        border-radius: 0.8rem;\n        box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3); /* Inset shadow for carved look */\n        display: flex;\n        gap: 1.2rem;\n        align-items: center;\n        justify-content: center;\n        flex-wrap: wrap;\n        width: 100%;\n        max-width: 1000px; /* Slightly narrower */\n        border: 2px solid #4a3e3c; /* Matching dark border */\n    }\n\n    .login-container input, .dm-section-panel input, .dm-section-panel select, .player-filters-sort-search input, .player-filters-sort-search select {\n        padding: 0.8rem 1rem;\n        border-radius: 0.5rem;\n        border: 1px solid #8c6e4e; /* Goldish border */\n        background: #e9dcc9; /* Parchment background */\n        color: #3b2f2f; /* Dark text */\n        font-family: 'Merriweather', serif;\n        font-size: 1.1rem;\n        flex-grow: 1;\n        max-width: 200px;\n    }\n\n    .login-container button, .use-button, .reset-button, .remove-button, .select-button, .booster-button, .dm-section-panel button, .player-notification-area button {\n        background-color: #8c6e4e; /* Gold/bronze button */\n        color: #f5f5dc; /* Off-white text */\n        padding: 0.8rem 1.5rem;\n        border: 2px solid #5a4b4b; /* Darker edge */\n        border-radius: 0.5rem;\n        cursor: pointer;\n        font-weight: bold;\n        transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;\n        white-space: nowrap;\n        font-family: 'Cinzel', serif; /* Thematic button font */\n        text-transform: uppercase;\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n    }\n\n    .login-container button:hover, .select-button:hover:not(:disabled), .booster-button:hover:not(:disabled), .dm-section-panel button:hover:not(:disabled), .player-notification-area button:hover:not(:disabled) {\n        background-color: #a38b6d; /* Lighter gold on hover */\n        transform: translateY(-3px); /* More pronounced lift */\n        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);\n    }\n\n    .select-button:disabled, .use-button:disabled, .booster-button:disabled, .dm-section-panel button:disabled, .player-notification-area button:disabled {\n        background-color: #5a4b4b; /* Muted disabled color */\n        color: #a0a0a0;\n        cursor: not-allowed;\n        transform: none;\n        box-shadow: none;\n    }\n\n    .stats-container {\n        background: #5a4b4b; /* Darker tone for stats */\n        color: #f5f5dc;\n        padding: 1.8rem;\n    }\n\n    .stats-container label {\n        display: flex;\n        align-items: center;\n        gap: 0.6rem;\n        font-weight: 700;\n        font-family: 'Cinzel', serif;\n    }\n\n    .stats-container input {\n        width: 5rem; /* Wider input */\n        padding: 0.4rem;\n        border-radius: 0.4rem;\n        border: 1px solid #8c6e4e;\n        background: #e9dcc9;\n        color: #3b2f2f;\n        text-align: center;\n        font-family: 'Merriweather', serif;\n    }\n\n    .stats-container p {\n        margin: 0;\n        padding: 0;\n        font-size: 1.1rem;\n        font-weight: 700;\n    }\n\n    .message-box {\n        position: fixed;\n        top: 2rem; /* Lowered position */\n        left: 50%;\n        transform: translateX(-50%);\n        padding: 0.9rem 1.8rem;\n        border-radius: 0.6rem;\n        font-weight: bold;\n        z-index: 1000;\n        animation: fadein 0.5s, fadeout 0.5s 4.5s; /* Longer display */\n        text-align: center;\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);\n        font-family: 'Cinzel', serif;\n        text-transform: uppercase;\n    }\n\n    .message-box.success {\n        background-color: #488c5d; /* Darker green */\n        color: white;\n    }\n\n    .message-box.error {\n        background-color: #a33b3b; /* Darker red */\n        color: white;\n    }\n\n    .message-box.info {\n        background-color: #6a5d5a;\n        color: #f5f5dc;\n    }\n\n    @keyframes fadein {\n        from { opacity: 0; transform: translateX(-50%) translateY(-20px); }\n        to   { opacity: 1; transform: translateX(-50%) translateY(0); }\n    }\n\n    @keyframes fadeout {\n        from { opacity: 1; transform: translateX(-50%) translateY(0); }\n        to   { opacity: 0; transform: translateX(-50%) translateY(-20px); }\n    }\n\n    .tab-navigation {\n        display: flex;\n        justify-content: center;\n        width: 100%;\n        max-width: 1000px;\n        margin-bottom: 2rem;\n        background-color: #5a4b4b; /* Darker tab background */\n        border-radius: 0.8rem;\n        box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.4);\n        overflow: hidden;\n        border: 2px solid #4a3e3c;\n    }\n\n    .tab-item {\n        flex: 1;\n        text-align: center;\n        padding: 1.2rem 1.8rem; /* More generous padding */\n        cursor: pointer;\n        font-weight: bold;\n        color: #e9dcc9; /* Parchment text */\n        background-color: #5a4b4b;\n        transition: background-color 0.3s ease, color 0.3s ease;\n        border-bottom: 4px solid transparent; /* Thicker active indicator */\n        font-family: 'Cinzel', serif;\n        text-transform: uppercase;\n    }\n\n    .tab-item:hover:not(.active) {\n        background-color: #6a5d5a; /* Slightly lighter on hover */\n    }\n\n    .tab-item.active {\n        background-color: #8c6e4e; /* Gold active tab */\n        color: white;\n        border-bottom-color: #a38b6d; /* Lighter gold accent */\n    }\n\n    .main-content {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 2rem; /* Increased gap */\n        width: 100%;\n        max-width: 1000px;\n        flex: 1;\n    }\n\n    .card-collection-panel, .built-deck-panel {\n        background: #e9dcc9; /* Parchment background for panels */\n        border-radius: 0.8rem;\n        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\n        padding: 2rem; /* More padding */\n        flex: 1;\n        min-width: 320px; /* Slightly larger min-width */\n        display: flex;\n        flex-direction: column;\n        border: 2px solid #8c6e4e; /* Gold border */\n    }\n\n    /* Player's Available Spells panel - now scrollable */\n    .card-collection-panel {\n        max-height: 700px; /* Fixed height for scrolling */\n        overflow-y: auto; /* Enable vertical scrolling */\n    }\n\n    .panel-title {\n        font-family: 'Cinzel', serif;\n        text-align: center;\n        color: #3b2f2f; /* Dark text for title */\n        margin-top: 0;\n        margin-bottom: 2rem;\n        font-size: 2.2rem; /* Larger panel title */\n        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\n    }\n\n    .card-list, .deck-list {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr)); /* Larger cards */\n        gap: 1.5rem; /* Increased gap */\n        flex-grow: 1;\n    }\n\n    .card-item {\n        background: #fdf6e6; /* Lighter parchment for individual cards */\n        border: 1px solid #d3c4a2; /* Faded parchment border */\n        border-radius: 0.6rem;\n        padding: 1.2rem;\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n        transition: transform 0.2s ease, box-shadow 0.2s ease;\n        display: flex;\n        flex-direction: column;\n        text-align: center;\n        font-family: 'Merriweather', serif;\n    }\n\n    .card-item:hover.available-card {\n        transform: translateY(-7px); /* More dramatic lift */\n        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.25);\n        cursor: pointer;\n    }\n\n    .card-item.deck-card {\n        background: #e9dcc9; /* Muted parchment for deck cards */\n        border: 1px solid #8c6e4e; /* Goldish border for deck cards */\n    }\n\n    .card-image {\n        max-width: 100%;\n        height: auto;\n        border-radius: 0.4rem;\n        margin-bottom: 1rem;\n        border: 1px solid #8c6e4e; /* Gold frame for image */\n    }\n    \n    .card-backlash {\n        font-family: 'Merriweather', serif;\n        font-size: 0.85rem;\n        color: #a33b3b; /* Red color for backlash effect */\n        margin-bottom: 0.5rem;\n        font-weight: bold;\n        text-transform: uppercase;\n    }\n\n    .card-name {\n        font-family: 'Cinzel', serif;\n        font-weight: 700;\n        font-size: 1.25rem;\n        color: #3b2f2f;\n        margin-bottom: 0.6rem;\n    }\n\n    .card-type {\n        font-style: italic;\n        color: #5a4b4b;\n        margin-bottom: 0.7rem;\n        font-size: 0.95rem;\n    }\n\n    .card-description {\n        font-size: 0.9rem;\n        color: #4a3e3c;\n        flex-grow: 1;\n        margin-bottom: 0.7rem; /* Adjusted margin */\n    }\n\n    .card-effect {\n        font-size: 0.9rem;\n        color: #4a6d8c; /* Blue color for effect */\n        margin-bottom: 0.7rem; /* Adjusted margin */\n        font-style: italic;\n    }\n\n    .card-meta, .card-uses {\n        font-size: 0.85rem;\n        color: #5a4b4b;\n        margin-bottom: 0.6rem;\n    }\n    \n    .card-meta span {\n        font-weight: bold;\n        color: #3b2f2f;\n    }\n\n    .card-actions {\n        margin-top: 1rem;\n        display: flex;\n        flex-wrap: wrap;\n        gap: 0.6rem;\n        justify-content: center;\n    }\n\n    .use-button {\n        background-color: #4a6d8c; /* Muted blue for use */\n        color: white;\n    }\n    .use-button:hover:not(:disabled) {\n        background-color: #3a5c78;\n        transform: translateY(-2px);\n    }\n\n    .reset-button {\n        background-color: #5a8c4a; /* Muted green for reset */\n        color: white;\n    }\n    .reset-button:hover {\n        background-color: #4a783a;\n        transform: translateY(-2px);\n    }\n\n    .remove-button {\n        background-color: #8c4a4a; /* Muted red for remove */\n        color: white;\n    }\n    .remove-button:hover {\n        background-color: #783a3a;\n        transform: translateY(-2px);\n    }\n\n    .empty-message, .pre-login-message {\n        text-align: center;\n        padding: 2.5rem;\n        background: #d3c4a2; /* Lighter parchment */\n        border-radius: 0.8rem;\n        color: #5a4b4b;\n        font-style: italic;\n        margin: 1.5rem;\n        border: 1px solid #8c6e4e;\n        box-shadow: inset 0 1px 5px rgba(0, 0, 0, 0.2);\n    }\n\n    .error-message {\n        color: #a33b3b;\n        background-color: #fce2e2;\n        border: 1px solid #a33b3b;\n        padding: 0.8rem;\n        border-radius: 0.6rem;\n        text-align: center;\n        margin-top: 1.5rem;\n        font-weight: bold;\n        font-family: 'Merriweather', serif;\n    }\n\n    .highlight {\n        color: #4a6d8c; /* Muted blue highlight */\n        font-weight: bold;\n    }\n\n    /* Booster pack section on Player side - now has its own styling for layout */\n    .booster-pack-section {\n        flex-direction: column;\n        align-items: center;\n        padding-top: 1.8rem; /* Use the same padding as other panels */\n        border-top: 2px solid #4a3e3c; /* Consistent border */\n        width: 100%;\n        max-width: 1000px;\n        margin-top: 0; /* Adjusted since it's now a separate block */\n    }\n\n    .booster-pack-section button {\n        margin-top: 1.5rem;\n    }\n\n    .new-cards-display {\n        margin-top: 1.5rem;\n        padding: 1.5rem;\n        background: #d3c4a2;\n        border-radius: 0.6rem;\n        text-align: center;\n        width: 100%;\n        max-width: 450px;\n        border: 1px solid #8c6e4e;\n        box-shadow: inset 0 1px 5px rgba(0, 0, 0, 0.2);\n        font-family: 'Merriweather', serif;\n    }\n    .new-cards-display h4 {\n        font-family: 'Cinzel', serif;\n        color: #3b2f2f;\n        margin-bottom: 0.8rem;\n        font-size: 1.2rem;\n    }\n    .new-cards-display ul {\n        list-style-type: none;\n        padding: 0;\n        margin: 0;\n    }\n    .new-cards-display li {\n        margin-bottom: 0.3rem;\n        color: #4a3e3c;\n        font-size: 0.95rem;\n    }\n\n    /* DM Screen Specific Styles */\n    .dm-screen-container {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        max-width: 1000px;\n        gap: 1.5rem;\n    }\n\n    .dm-sub-nav {\n        display: flex;\n        justify-content: center;\n        background-color: #5a4b4b;\n        border-radius: 0.8rem;\n        box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.4);\n        overflow: hidden;\n        border: 2px solid #4a3e3c;\n    }\n\n    .dm-sub-nav-item {\n        flex: 1;\n        text-align: center;\n        padding: 1rem 1.5rem;\n        cursor: pointer;\n        font-weight: bold;\n        color: #e9dcc9;\n        background-color: #5a4b4b;\n        transition: background-color 0.3s ease, color 0.3s ease;\n        border-bottom: 3px solid transparent;\n        font-family: 'Cinzel', serif;\n        text-transform: uppercase;\n        font-size: 0.95rem;\n    }\n\n    .dm-sub-nav-item:hover:not(.active) {\n        background-color: #6a5d5a;\n    }\n\n    .dm-sub-nav-item.active {\n        background-color: #8c6e4e;\n        color: white;\n        border-bottom-color: #a38b6d;\n    }\n\n    .dm-section-panel {\n        flex-direction: column;\n        align-items: stretch;\n        gap: 1.5rem;\n        max-width: none; /* Override max-width for full panel use */\n    }\n\n    .dm-session-list ul, .dm-player-list ul, .dm-card-distribution-list ul, .player-notification-area ul {\n        list-style-type: none;\n        padding: 0;\n        margin: 0;\n    }\n\n    .dm-session-list li, .dm-player-list li, .dm-card-distribution-list li, .player-notification-area li {\n        background: #d3c4a2;\n        padding: 0.8rem 1.2rem;\n        margin-bottom: 0.5rem;\n        border-radius: 0.4rem;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        font-family: 'Merriweather', serif;\n        color: #3b2f2f;\n        box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n        cursor: pointer;\n        transition: background-color 0.2s ease;\n    }\n\n    .dm-session-list li:hover, .dm-player-list li:hover:not(.no-hover), .dm-card-distribution-list li:hover, .player-notification-area li:hover {\n        background-color: #c9bda5;\n    }\n\n    .dm-player-id {\n        font-weight: bold;\n        color: #4a6d8c;\n    }\n\n    .dm-player-view-details {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 2rem;\n        margin-top: 1.5rem;\n    }\n\n    .dm-player-stats-panel, .dm-player-deck-panel, .dm-player-collection-panel { /* Added .dm-player-collection-panel */\n        flex: 1;\n        min-width: 300px;\n        background: #fdf6e6;\n        border-radius: 0.6rem;\n        padding: 1.5rem;\n        box-shadow: inset 0 1px 5px rgba(0,0,0,0.2);\n        border: 1px solid #8c6e4e;\n        color: #3b2f2f;\n    }\n    .dm-player-stats-panel h4, .dm-player-deck-panel h4, .dm-player-collection-panel h4 { /* Added .dm-player-collection-panel */\n        font-family: 'Cinzel', serif;\n        font-size: 1.3rem;\n        margin-top: 0;\n        margin-bottom: 1rem;\n        color: #3b2f2f;\n        text-align: center;\n    }\n    .dm-player-stats-panel p {\n        margin-bottom: 0.5rem;\n    }\n    .dm-player-stats-panel span {\n        font-weight: bold;\n        color: #4a6d8c;\n    }\n    \n    /* DM's player deck/collection cards are smaller */\n    .dm-player-deck-panel .card-list,\n    .dm-player-collection-panel .card-list {\n        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); /* Smaller cards for DM view */\n    }\n\n    /* New style for scrollable collection panel */\n    .dm-player-collection-panel {\n        max-height: 500px; /* Fixed height for scrolling */\n        overflow-y: auto; /* Enable vertical scrolling */\n        min-width: 320px; /* Ensure it doesn't get too small */\n        flex: 1; /* Allow it to grow, but respect max-height */\n    }\n\n    .dm-distribution-controls {\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n        margin-top: 2rem;\n        padding-top: 1.5rem;\n        border-top: 1px dashed #8c6e4e;\n        align-items: center;\n    }\n\n    .dm-distribution-controls .input-group {\n        display: flex;\n        gap: 0.8rem;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    .dm-card-distribution-list {\n        margin-top: 1rem;\n        max-height: 400px; /* Constrain height */\n        overflow-y: auto; /* Enable scrolling */\n        border: 1px solid #8c6e4e;\n        border-radius: 0.6rem;\n        background: #d3c4a2;\n        padding: 0.5rem;\n    }\n    .dm-card-distribution-list li {\n        cursor: default; /* No hover effect for these list items */\n        background: #e9dcc9;\n    }\n    .dm-card-distribution-list li .card-name {\n        margin: 0;\n        font-size: 1rem;\n        font-weight: normal;\n    }\n    .dm-card-distribution-list li button {\n        padding: 0.4rem 0.8rem;\n        font-size: 0.8rem;\n    }\n\n    /* Player Notification Area specific styling */\n    .player-notification-area {\n        flex-direction: column;\n        align-items: stretch;\n        margin-top: 1rem;\n        padding-top: 1rem;\n        border-top: 1px solid #8c6e4e;\n        background: #a38b6d; /* Lighter gold for notifications */\n        color: #3b2f2f;\n    }\n    .player-notification-area h3 {\n        color: #3b2f2f;\n        margin-bottom: 1rem;\n        font-family: 'Cinzel', serif;\n        text-align: center;\n    }\n    .player-notification-area li {\n        background: #fdf6e6; /* Parchment background for individual notifications */\n        border: 1px solid #8c6e4e;\n        margin-bottom: 0.8rem;\n    }\n    .player-notification-area li button {\n        padding: 0.6rem 1rem;\n        font-size: 0.9rem;\n    }\n    .player-notification-area .notification-text {\n        font-weight: bold;\n        flex-grow: 1;\n        margin-right: 1rem;\n    }\n\n\n\n    /* DM Toggle Specific Styles */\n    .dm-toggle-container {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        margin-left: 1rem; /* Adjust positioning as needed */\n        font-family: 'Merriweather', serif;\n        color: #f5f5dc;\n        font-weight: bold;\n        white-space: nowrap;\n    }\n\n    .dm-toggle-switch {\n        position: relative;\n        display: inline-block;\n        width: 48px; /* Wider switch */\n        height: 28px; /* Taller switch */\n    }\n\n    .dm-toggle-switch input {\n        opacity: 0;\n        width: 0;\n        height: 0;\n    }\n\n    .dm-slider {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: #ccc;\n        transition: 0.4s;\n        border-radius: 28px; /* More rounded */\n    }\n\n    .dm-slider:before {\n        position: absolute;\n        content: \"\";\n        height: 20px; /* Smaller circle */\n        width: 20px;\n        left: 4px;\n        bottom: 4px;\n        background-color: white;\n        transition: 0.4s;\n        border-radius: 50%;\n    }\n\n    input:checked + .dm-slider {\n        background-color: #8c6e4e; /* Gold when checked */\n    }\n\n    input:focus + .dm-slider {\n        box-shadow: 0 0 1px #8c6e4e;\n    }\n\n    input:checked + .dm-slider:before {\n        transform: translateX(20px); /* Move further */\n    }\n\n    /* --- SCROLLBAR THEMEING --- */\n    /* For Webkit browsers (Chrome, Safari, Edge) */\n    ::-webkit-scrollbar {\n        width: 12px; /* Width of the vertical scrollbar */\n        height: 12px; /* Height of the horizontal scrollbar */\n    }\n\n    ::-webkit-scrollbar-track {\n        background: #5a4b4b; /* Darker track color, matching muted stone */\n        border-radius: 10px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n        background: #8c6e4e; /* Gold/bronze thumb color */\n        border-radius: 10px;\n        border: 2px solid #6a5d5a; /* Slightly darker border for depth */\n    }\n\n    ::-webkit-scrollbar-thumb:hover {\n        background: #a38b6d; /* Lighter gold on hover */\n    }\n\n    /* For Firefox */\n    html {\n        scrollbar-width: thin; /* 'auto' | 'thin' | 'none' */\n        scrollbar-color: #8c6e4e #5a4b4b; /* thumb-color track-color */\n    }\n\n    /* New styles for player filters/sort/search section */\n    .player-filters-sort-search {\n        display: flex;\n        flex-direction: row; /* Horizontal layout for filters */\n        gap: 1rem;\n        align-items: center;\n        margin-bottom: 2rem;\n        flex-wrap: wrap; /* Allow wrapping on smaller screens */\n    }\n    .player-filters-sort-search label {\n        color: #f5f5dc;\n        font-family: 'Merriweather', serif;\n        font-weight: bold;\n        white-space: nowrap;\n    }\n    .player-filters-sort-search input,\n    .player-filters-sort-search select {\n        flex-grow: 0; /* Don't force these to grow too much */\n        width: auto;\n        min-width: 120px;\n    }\n\n    /* Styles for card notes textarea */\n    .card-note-textarea {\n        width: 100%;\n        min-height: 80px;\n        padding: 0.5rem;\n        border-radius: 0.4rem;\n        border: 1px solid #d3c4a2;\n        background: #fdf6e6;\n        color: #3b2f2f;\n        font-family: 'Merriweather', serif;\n        font-size: 0.9rem;\n        margin-top: 0.8rem;\n        resize: vertical; /* Allow vertical resizing */\n    }\n    .card-note-textarea:focus {\n        outline: none;\n        border-color: #8c6e4e; /* Gold highlight on focus */\n        box-shadow: 0 0 0 2px rgba(140, 110, 78, 0.4);\n    }\n\n\n    /* Responsive Adjustments (ensure DM screen is also responsive) */\n    @media (max-width: 768px) {\n        .dm-sub-nav {\n            flex-direction: column;\n        }\n        .dm-sub-nav-item {\n            border-bottom: none;\n            border-right: 3px solid transparent;\n        }\n        .dm-sub-nav-item.active {\n            border-bottom-color: transparent;\n            border-right-color: #a38b6d;\n        }\n        .dm-player-view-details {\n            flex-direction: column;\n        }\n        .login-container {\n            flex-direction: column;\n            align-items: stretch;\n        }\n        .dm-toggle-container {\n            margin-left: 0;\n            margin-top: 1rem;\n            justify-content: center;\n            order: -1; /* Move toggle to top in mobile view */\n        }\n        .login-container input {\n            max-width: 100%;\n        }\n        .dm-distribution-controls .input-group {\n            flex-direction: column;\n        }\n        .dm-section-panel input, .dm-section-panel select {\n             max-width: 100%;\n        }\n        .card-collection-panel { /* Adjust player collection panel for mobile */\n            max-height: 500px;\n        }\n        .player-filters-sort-search {\n            flex-direction: column;\n            align-items: stretch;\n            gap: 0.8rem;\n        }\n        .player-filters-sort-search input,\n        .player-filters-sort-search select {\n            max-width: 100%;\n        }\n    }\n    @media (max-width: 480px) {\n        .dm-sub-nav-item {\n            padding: 0.8rem 1rem;\n            font-size: 0.85rem;\n        }\n    }\n`;\nfunction App() {\n  _s();\n  // --- State Variables ---\n  const [allCards, setAllCards] = useState([]); // All cards fetched from the backend (master list)\n  const [characterLevel, setCharacterLevel] = useState(1);\n  const [wisMod, setWisMod] = useState(0);\n  const [intMod, setIntMod] = useState(0);\n  const [chaMod, setChaMod] = useState(0);\n  const [maxDeckSize, setMaxDeckSize] = useState(0);\n  const [activeDeckInstances, setActiveDeckInstances] = useState([]); // Cards currently in the player's ACTIVE deck (persistent instances)\n  const [unlockedCollectionIds, setUnlockedCollectionIds] = useState([]); // IDs of all UNIQUE card types the player HAS UNLOCKED (owned pool)\n  const [error, setError] = useState(''); // General error messages for UI\n\n  // New states for login/auth\n  const [playerId, setPlayerId] = useState('');\n  const [password, setPassword] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [message, setMessage] = useState({\n    text: '',\n    type: ''\n  });\n  const [loading, setLoading] = useState(true); // Loading state for initial data fetch of allCards\n\n  // New state for tab management\n  const [activeTab, setActiveTab] = useState('available'); // 'available', 'deck', or 'dm_screen'\n\n  // State for newly acquired cards from booster packs\n  const [newlyAcquiredCards, setNewlyAcquiredCards] = useState([]);\n  const [lastOpenedPackType, setLastOpenedPackType] = useState('');\n  const [prePackUnlockedIds, setPrePackUnlockedIds] = useState([]); // Store state before opening pack for duplicate check\n\n  // --- DM/SESSION STATES ---\n  const [isDMMode, setIsDMMode] = useState(false); // New state for DM mode toggle\n  const [sessionNameInput, setSessionNameInput] = useState('');\n  const [sessionCodeInput, setSessionCodeInput] = useState('');\n  const [dmSessions, setDmSessions] = useState([]); // Sessions created by THIS DM\n  const [selectedDmSession, setSelectedDmSession] = useState(null); // The session the DM is currently viewing\n  const [playersInSelectedDmSession, setPlayersInSelectedDmSession] = useState([]); // Players in the selected DM session\n  const [selectedPlayerForDMView, setSelectedPlayerForDMView] = useState(null); // The specific player DM is inspecting\n  const [selectedPlayerDMData, setSelectedPlayerDMData] = useState(null); // Full card data for the inspected player\n  const [activeDmTab, setActiveDmTab] = useState('my_sessions'); // 'create_session', 'my_sessions', 'view_player'\n  const [selectedPackTypeToGive, setSelectedPackTypeToGive] = useState('Common Pack'); // For DM giving packs\n  const [searchCardInputForDM, setSearchCardInputForDM] = useState(''); // For DM searching cards to give\n\n  // --- NEW PENDING ITEM STATES FOR PLAYER ---\n  const [pendingBoosterPacks, setPendingBoosterPacks] = useState([]);\n  const [pendingCards, setPendingCards] = useState([]);\n\n  // --- NEW: Player Available Spells Filter/Sort/Search States ---\n  const [filterType, setFilterType] = useState('All');\n  const [filterRarity, setFilterRarity] = useState('All');\n  const [sortOrder, setSortOrder] = useState('name-asc'); // e.g., 'name-asc', 'name-desc', 'rarity-asc'\n  const [searchAvailableCards, setSearchAvailableCards] = useState('');\n\n  // --- Helper function to display messages ---\n  const showMessage = useCallback((text, type) => {\n    setMessage({\n      text,\n      type\n    });\n    // Clear message after 5 seconds for info, 3 seconds for others\n    const duration = type === 'info' ? 5000 : 3000;\n    setTimeout(() => setMessage({\n      text: '',\n      type: ''\n    }), duration);\n  }, []);\n\n  // --- API Call: Create Account ---\n  const handleCreateAccount = async () => {\n    if (!playerId || !password) {\n      showMessage('Player ID and password are required to create an account.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/deck/create`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to create account.');\n      }\n      showMessage('Account created successfully! You can now log in.', 'success');\n    } catch (err) {\n      console.error('Error creating account:', err);\n      showMessage(`Failed to create account: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- API Call: Login and Load Deck ---\n  const handleLoginAndLoadDeck = async () => {\n    if (!playerId || !password) {\n      showMessage('Player ID and password are required to log in.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/deck/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Authentication failed.');\n      }\n\n      // Load data from backend upon successful login\n      // Ensure `current_uses` and `notes` are initialized if they don't exist in saved data\n      setActiveDeckInstances((data.active_deck_instances || []).map(card => ({\n        ...card,\n        current_uses: card.current_uses !== undefined ? card.current_uses : card.default_uses_per_rest,\n        notes: card.notes || '' // Initialize notes if not present\n      })));\n      setUnlockedCollectionIds(data.unlocked_collection_ids || []); // Load unlocked card IDs (now includes duplicates)\n      setCharacterLevel(data.character_level !== undefined ? data.character_level : 1);\n      setWisMod(data.wis_mod !== undefined ? data.wis_mod : 0);\n      setIntMod(data.int_mod !== undefined ? data.int_mod : 0);\n      setChaMod(data.cha_mod !== undefined ? data.cha_mod : 0);\n      setPendingBoosterPacks(data.pending_booster_packs || []); // Load pending booster packs\n      setPendingCards(data.pending_cards || []); // Load pending cards\n      setIsAuthenticated(true);\n      setActiveTab('deck'); // Automatically switch to the deck tab after login\n\n      showMessage('Login successful! Deck and unlocked cards loaded.', 'success');\n    } catch (err) {\n      setIsAuthenticated(false);\n      console.error('Error logging in:', err);\n      showMessage(`Failed to load deck: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- API Call: Save Deck ---\n  const handleSaveDeck = async () => {\n    if (!isAuthenticated) {\n      showMessage('You must be logged in to save your deck.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/deck/save`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password,\n          // Send password for re-validation on backend\n          active_deck_instances: activeDeckInstances,\n          // Save active deck instances (includes current_uses and notes)\n          unlocked_collection_ids: unlockedCollectionIds,\n          // Save unlocked card IDs (now includes duplicates)\n          character_level: characterLevel,\n          wis_mod: wisMod,\n          int_mod: intMod,\n          cha_mod: chaMod\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to save deck.');\n      }\n      showMessage('Deck and unlocked cards saved successfully!', 'success');\n    } catch (err) {\n      console.error('Error saving deck:', err);\n      showMessage(`Failed to save deck: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Effect to Fetch All Cards on Component Mount ---\n  useEffect(() => {\n    const fetchAllCards = async () => {\n      setLoading(true);\n      try {\n        const cardsResponse = await fetch(`${API_BASE_URL}/cards`);\n        if (!cardsResponse.ok) {\n          throw new Error(`HTTP error fetching cards! status: ${cardsResponse.status}`);\n        }\n        const cardsData = await cardsResponse.json();\n        setAllCards(cardsData);\n      } catch (err) {\n        console.error('Error fetching initial data:', err);\n        showMessage('Failed to fetch initial data: ' + err.message, 'error');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllCards();\n  }, [showMessage]); // Empty dependency array, this effect runs only once on mount\n\n  // --- Effect to Calculate Max Deck Size when Character Stats Change ---\n  useEffect(() => {\n    const calculateDeckSize = async () => {\n      setError(''); // Clear previous errors related to deck size\n      try {\n        const response = await fetch(`${API_BASE_URL}/calculate_deck_size`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            character_level: characterLevel,\n            wis_mod: wisMod,\n            int_mod: intMod,\n            cha_mod: chaMod\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setMaxDeckSize(data.max_deck_size);\n      } catch (err) {\n        setError('Failed to calculate deck size: ' + err.message);\n        console.error('Error calculating deck size:', err);\n      }\n    };\n    if (!isNaN(characterLevel) && !isNaN(wisMod) && !isNaN(intMod) && !isNaN(chaMod)) {\n      calculateDeckSize();\n    }\n  }, [characterLevel, wisMod, intMod, chaMod]);\n\n  // --- Booster Pack Logic: Open a new pack (Player initiated) ---\n  const handleOpenBoosterPack = async () => {\n    if (!isAuthenticated) {\n      showMessage(\"You must be logged in to open booster packs.\", \"error\");\n      return;\n    }\n    setLoading(true); // Indicate loading while opening pack\n    setNewlyAcquiredCards([]); // Clear previous new cards display\n    setLastOpenedPackType('');\n    setPrePackUnlockedIds(unlockedCollectionIds); // Store current collection for duplicate check\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/deck/open_booster`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password\n        }) // Backend determines pack size\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to open booster pack.');\n      }\n      setLastOpenedPackType(data.pack_type);\n      if (data.new_cards && data.new_cards.length > 0) {\n        // Update the unlockedCollectionIds state with the new IDs (now including duplicates)\n        setUnlockedCollectionIds(data.updated_unlocked_collection_ids || []);\n        setNewlyAcquiredCards(data.new_cards); // Store new cards for display\n        showMessage(`You opened a ${data.pack_type} and acquired ${data.new_cards.length} cards!`, 'success');\n      } else {\n        showMessage(data.message || \"No new cards were found in the booster pack.\", 'info');\n      }\n    } catch (err) {\n      console.error('Error opening booster pack:', err);\n      showMessage(`Failed to open booster pack: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Player: Open a pending booster pack ---\n  const handleOpenPendingBooster = async () => {\n    if (!isAuthenticated || pendingBoosterPacks.length === 0) {\n      showMessage('No pending booster packs to open.', 'error');\n      return;\n    }\n    setLoading(true);\n    setNewlyAcquiredCards([]); // Clear previous new cards display\n    setLastOpenedPackType('');\n    setPrePackUnlockedIds(unlockedCollectionIds); // Store current collection for duplicate check\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/player/open_pending_booster`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to open pending booster pack.');\n      }\n      setLastOpenedPackType(data.pack_type);\n      setUnlockedCollectionIds(data.updated_unlocked_collection_ids || []);\n      setPendingBoosterPacks(data.updated_pending_booster_packs || []);\n      setNewlyAcquiredCards(data.new_cards || []);\n      showMessage(`You opened a ${data.pack_type} and acquired ${data.new_cards.length} cards!`, 'success');\n    } catch (err) {\n      console.error('Error opening pending booster pack:', err);\n      showMessage(`Failed to open pending booster pack: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Player: Accept a pending card ---\n  const handleAcceptPendingCard = async cardIdToAccept => {\n    if (!isAuthenticated || !cardIdToAccept) {\n      showMessage('No pending card selected or you are not logged in.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/player/accept_pending_card`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password,\n          card_id: cardIdToAccept\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to accept pending card.');\n      }\n      setUnlockedCollectionIds(data.updated_unlocked_collection_ids || []);\n      setPendingCards(data.updated_pending_cards || []);\n      showMessage(`You accepted \"${data.card_name}\" into your collection!`, 'success');\n    } catch (err) {\n      console.error('Error accepting pending card:', err);\n      showMessage(`Failed to accept pending card: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Deck Building Logic: Add Card ---\n  const handleAddCardToDeck = useCallback(card => {\n    if (!isAuthenticated) {\n      showMessage(\"You must be logged in to build a deck.\", \"error\");\n      return;\n    }\n    if (activeDeckInstances.length >= maxDeckSize) {\n      showMessage('Deck is full! Remove cards to add new ones.', 'error');\n      return;\n    }\n    const ownedCopiesOfThisCard = unlockedCollectionIds.filter(id => id === card.id).length;\n    const copiesInActiveDeck = activeDeckInstances.filter(c => c.id === card.id).length;\n    if (copiesInActiveDeck >= ownedCopiesOfThisCard) {\n      showMessage(`You have already added all owned copies of ${card.name} to your deck. Open more booster packs to get more!`, 'error');\n      return;\n    }\n    const cantripCountInDeck = activeDeckInstances.filter(c => c.type === 'Cantrip').length;\n    if (card.type !== 'Cantrip' && cantripCountInDeck === 0 && activeDeckInstances.length === 0) {\n      showMessage('Your deck must contain at least one Cantrip! Add a Cantrip first.', 'error');\n      return;\n    }\n\n    // Add a new instance of the card to the active deck\n    setActiveDeckInstances(prev => [...prev, {\n      ...card,\n      instance_id: uuidv4(),\n      // Assign a unique ID for this specific copy in the active deck\n      current_uses: card.default_uses_per_rest,\n      notes: '' // Initialize notes for new card instances\n    }]);\n    showMessage('Card added to your deck!', 'success');\n  }, [isAuthenticated, maxDeckSize, activeDeckInstances, unlockedCollectionIds, showMessage]);\n\n  // --- Deck Building Logic: Remove Card ---\n  const handleRemoveCardFromDeck = useCallback(instance_id => {\n    const updatedDeck = activeDeckInstances.filter(card => card.instance_id !== instance_id);\n    const cantripCount = updatedDeck.filter(c => c.type === 'Cantrip').length;\n    if (cantripCount === 0 && updatedDeck.length > 0) {\n      showMessage('Your deck must contain at least one Cantrip! You cannot remove the last one.', 'error');\n      return;\n    }\n    setActiveDeckInstances(updatedDeck);\n    showMessage('Card removed from deck.', 'success');\n  }, [activeDeckInstances, showMessage]);\n\n  // --- Card Usage Logic: Mark Card as Used ---\n  const handleMarkCardUsed = useCallback(async instance_id => {\n    const cardToUse = activeDeckInstances.find(card => card.instance_id === instance_id);\n    if (!cardToUse) return;\n    if (cardToUse.current_uses > 0) {\n      setActiveDeckInstances(prev => prev.map(card => card.instance_id === instance_id ? {\n        ...card,\n        current_uses: card.current_uses - 1\n      } : card));\n\n      // Notify backend about the card usage for logging purposes.\n      try {\n        const response = await fetch(`${API_BASE_URL}/card_used`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: cardToUse.name,\n            // Use 'name' to match backend's 'card_name' expectation\n            type: cardToUse.type,\n            // Use 'type' to match backend's 'card_type' expectation\n            deck_card_id: cardToUse.instance_id\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Backend notification:', data.message);\n        console.log('Simulated System Log Entry from Backend:', data.log_entry);\n      } catch (err) {\n        showMessage('Failed to notify backend of card usage for logging: ' + err.message, 'error');\n        console.error('Error sending card used notification:', err);\n      }\n    } else {\n      showMessage(`\"${cardToUse.name}\" has no uses left! It needs a long rest.`, 'error');\n    }\n  }, [activeDeckInstances, showMessage]);\n\n  // --- Card Usage Logic: Reset Card Uses (Long Rest) ---\n  const handleResetCardUses = useCallback(instance_id => {\n    setActiveDeckInstances(prev => prev.map(card => card.instance_id === instance_id ? {\n      ...card,\n      current_uses: card.default_uses_per_rest\n    } : card));\n    showMessage('Card uses reset!', 'success');\n  }, [showMessage]);\n\n  // --- NEW: Handle changes to card notes in the active deck ---\n  const handleChangeCardNote = useCallback((instance_id, newNote) => {\n    setActiveDeckInstances(prev => prev.map(card => card.instance_id === instance_id ? {\n      ...card,\n      notes: newNote\n    } : card));\n  }, []);\n\n  // Helper to map card IDs from player data back to full card objects from allCards\n  const getFullCardDetails = cardId => {\n    return allCards.find(card => card.id === cardId);\n  };\n\n  // --- Player: Filtered & Sorted Available Cards (Memoized) ---\n  const uniqueUnlockedCards = useMemo(() => {\n    // First, get all unique cards the player has unlocked, with their counts\n    const uniqueCardsMap = allCards.filter(card => unlockedCollectionIds.includes(card.id)).reduce((acc, card) => {\n      if (!acc[card.id]) {\n        const count = unlockedCollectionIds.filter(id => id === card.id).length;\n        acc[card.id] = {\n          ...card,\n          owned_copies: count\n        };\n      }\n      return acc;\n    }, {});\n    return Object.values(uniqueCardsMap);\n  }, [allCards, unlockedCollectionIds]);\n  const filteredAndSortedAvailableCards = useMemo(() => {\n    let filteredCards = [...uniqueUnlockedCards]; // Start with the unique unlocked cards\n\n    // Apply search filter\n    if (searchAvailableCards) {\n      const searchTerm = searchAvailableCards.toLowerCase();\n      filteredCards = filteredCards.filter(card => card.name.toLowerCase().includes(searchTerm) || card.type.toLowerCase().includes(searchTerm) || card.rarity.toLowerCase().includes(searchTerm) || card.description && card.description.toLowerCase().includes(searchTerm) || card.effect && card.effect.toLowerCase().includes(searchTerm));\n    }\n\n    // Apply type filter\n    if (filterType !== 'All') {\n      filteredCards = filteredCards.filter(card => card.type === filterType);\n    }\n\n    // Apply rarity filter\n    if (filterRarity !== 'All') {\n      filteredCards = filteredCards.filter(card => card.rarity === filterRarity);\n    }\n\n    // Apply sorting\n    filteredCards.sort((a, b) => {\n      switch (sortOrder) {\n        case 'name-asc':\n          return a.name.localeCompare(b.name);\n        case 'name-desc':\n          return b.name.localeCompare(a.name);\n        case 'rarity-asc':\n          // Assuming rarity has an inherent order, or you define one\n          const rarityOrder = {\n            'Common': 1,\n            'Uncommon': 2,\n            'Rare': 3,\n            'Legendary': 4\n          };\n          return (rarityOrder[a.rarity] || 0) - (rarityOrder[b.rarity] || 0);\n        case 'rarity-desc':\n          const rarityOrderDesc = {\n            'Common': 1,\n            'Uncommon': 2,\n            'Rare': 3,\n            'Legendary': 4\n          };\n          return (rarityOrderDesc[b.rarity] || 0) - (rarityOrderDesc[a.rarity] || 0);\n        default:\n          return 0;\n      }\n    });\n    return filteredCards;\n  }, [uniqueUnlockedCards, searchAvailableCards, filterType, filterRarity, sortOrder]);\n\n  // Extract unique card types and rarities for filter options\n  const uniqueCardTypes = useMemo(() => ['All', ...new Set(allCards.map(card => card.type))], [allCards]);\n  const uniqueCardRarities = useMemo(() => ['All', ...new Set(allCards.map(card => card.rarity))], [allCards]);\n\n  // --- DM/Session Functions (Corrected to be within component scope) ---\n\n  // Effect to fetch DM sessions whenever DM mode is active and player ID is set\n  const fetchMyDMSessions = useCallback(async () => {\n    if (!isAuthenticated || !playerId || !password) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/dm/my_sessions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to fetch your sessions.');\n      }\n      // Fetch player counts for each session here\n      const sessionsWithPlayerCounts = await Promise.all((data.sessions || []).map(async session => {\n        const playersResponse = await fetch(`${API_BASE_URL}/dm/sessions/${session.session_id}/players`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            player_id: playerId,\n            password: password\n          })\n        });\n        const playersData = await playersResponse.json();\n        return {\n          ...session,\n          player_count: playersData.players ? playersData.players.length : 0\n        };\n      }));\n      setDmSessions(sessionsWithPlayerCounts);\n    } catch (err) {\n      console.error('Error fetching DM sessions or player counts:', err);\n      showMessage(`Failed to fetch DM sessions: ${err.message}`, 'error');\n      setDmSessions([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, playerId, password, showMessage]);\n  useEffect(() => {\n    if (isAuthenticated && isDMMode && playerId && activeDmTab === 'my_sessions') {\n      fetchMyDMSessions();\n    }\n  }, [isAuthenticated, isDMMode, playerId, activeDmTab, fetchMyDMSessions]);\n  const handleCreateSession = useCallback(async () => {\n    // Made useCallback\n    if (!playerId || !password) {\n      showMessage('You must be logged in to create a session.', 'error');\n      return;\n    }\n    if (!sessionNameInput) {\n      showMessage('Session name is required.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/dm/create_session`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password,\n          session_name: sessionNameInput\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to create session.');\n      }\n      showMessage(`Session \"${data.session_name}\" created with code: ${data.session_code}`, 'success');\n      setSessionNameInput(''); // Clear input\n      fetchMyDMSessions(); // Refresh DM's session list\n    } catch (err) {\n      console.error('Error creating session:', err);\n      showMessage(`Failed to create session: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  }, [playerId, password, sessionNameInput, fetchMyDMSessions, showMessage]); // Dependencies\n\n  const handleJoinSession = useCallback(async () => {\n    // Made useCallback\n    if (!isAuthenticated) {\n      // Players must be authenticated to join\n      showMessage('You must be logged in to join a session.', 'error');\n      return;\n    }\n    if (isDMMode) {\n      // DMs cannot join sessions as players\n      showMessage('You are in DM mode. Switch to Player mode to join a session.', 'error');\n      return;\n    }\n    if (!sessionCodeInput) {\n      showMessage('Session code is required.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/player/join_session`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password,\n          session_code: sessionCodeInput\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to join session.');\n      }\n      showMessage(data.message, 'success');\n      setSessionCodeInput(''); // Clear input\n    } catch (err) {\n      console.error('Error joining session:', err);\n      showMessage(`Failed to join session: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, isDMMode, playerId, password, sessionCodeInput, showMessage]); // Dependencies\n\n  const fetchPlayersInSession = useCallback(async sessionId => {\n    if (!isAuthenticated || !playerId || !password || !sessionId) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/dm/sessions/${sessionId}/players`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to fetch players for this session.');\n      }\n      setPlayersInSelectedDmSession(data.players || []);\n    } catch (err) {\n      console.error('Error fetching players in session:', err);\n      showMessage(`Failed to fetch players: ${err.message}`, 'error');\n      setPlayersInSelectedDmSession([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, playerId, password, showMessage]);\n  const handleSelectDmSession = useCallback(session => {\n    // Made useCallback\n    setSelectedDmSession(session);\n    fetchPlayersInSession(session.session_id);\n    setSelectedPlayerForDMView(null); // Clear any previously selected player\n    setSelectedPlayerDMData(null);\n    setActiveDmTab('my_sessions'); // Stay on my sessions tab, but show players for selected session\n  }, [fetchPlayersInSession]); // Dependency\n\n  const handleViewPlayerCards = useCallback(player_id_to_view => {\n    // Made useCallback\n    const player = playersInSelectedDmSession.find(p => p.player_id === player_id_to_view);\n    if (player) {\n      setSelectedPlayerForDMView(player.player_id);\n      setSelectedPlayerDMData(player.data); // This is the full player data including deck/collection\n      setActiveDmTab('view_player'); // Switch to a sub-tab to view player details\n    } else {\n      showMessage(\"Could not find player data for viewing.\", \"error\");\n    }\n  }, [playersInSelectedDmSession, showMessage]); // Dependency\n\n  const handleGiveSpecificPack = useCallback(async () => {\n    // Made useCallback\n    if (!selectedPlayerForDMView || !selectedPackTypeToGive) {\n      showMessage('Select a player and a pack type.', 'error');\n      return;\n    }\n    if (!playerId || !password) {\n      showMessage('DM must be logged in to give packs.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/dm/give_booster`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dm_player_id: playerId,\n          password: password,\n          target_player_id: selectedPlayerForDMView,\n          pack_type: selectedPackTypeToGive\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to give booster pack.');\n      }\n      showMessage(data.message, 'success'); // DM sees confirmation\n\n      // Re-fetch player data for DM to reflect pending item\n      const updatedPlayerResponse = await fetch(`${API_BASE_URL}/dm/sessions/${selectedDmSession.session_id}/players`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password\n        })\n      });\n      const updatedPlayersData = await updatedPlayerResponse.json();\n      const updatedPlayer = updatedPlayersData.players.find(p => p.player_id === selectedPlayerForDMView);\n      if (updatedPlayer) {\n        setSelectedPlayerDMData(updatedPlayer.data); // Update DM's view of player's data\n      }\n    } catch (err) {\n      console.error('Error giving booster pack:', err);\n      showMessage(`Failed to give booster pack: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedPlayerForDMView, selectedPackTypeToGive, playerId, password, selectedDmSession, showMessage]); // Dependencies\n\n  const handleGiveSpecificCard = useCallback(async cardId => {\n    // Made useCallback\n    if (!selectedPlayerForDMView || !cardId) {\n      showMessage('Select a player and a card to give.', 'error');\n      return;\n    }\n    if (!playerId || !password) {\n      showMessage('DM must be logged in to give cards.', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/dm/give_card`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dm_player_id: playerId,\n          password: password,\n          target_player_id: selectedPlayerForDMView,\n          card_id: cardId\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to give card.');\n      }\n      showMessage(data.message, 'success'); // DM sees confirmation\n\n      // Re-fetch player data for DM to reflect pending item\n      const updatedPlayerResponse = await fetch(`${API_BASE_URL}/dm/sessions/${selectedDmSession.session_id}/players`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password\n        })\n      });\n      const updatedPlayersData = await updatedPlayerResponse.json();\n      const updatedPlayer = updatedPlayersData.players.find(p => p.player_id === selectedPlayerForDMView);\n      if (updatedPlayer) {\n        setSelectedPlayerDMData(updatedPlayer.data); // Update DM's view of player's data\n      }\n    } catch (err) {\n      console.error('Error giving card:', err);\n      showMessage(`Failed to give card: ${err.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedPlayerForDMView, playerId, password, selectedDmSession, showMessage]); // Dependencies\n\n  // Filter all cards for DM distribution search\n  const filteredAllCardsForDM = allCards.filter(card => card.name.toLowerCase().includes(searchCardInputForDM.toLowerCase()) || card.type.toLowerCase().includes(searchCardInputForDM.toLowerCase()) || card.rarity.toLowerCase().includes(searchCardInputForDM.toLowerCase()));\n\n  // --- NEW: Function to fetch pending items ---\n  const fetchPendingItems = useCallback(async () => {\n    if (!isAuthenticated || !playerId || !password || isDMMode) return; // Only fetch if logged in, in player mode\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/player/pending_items`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player_id: playerId,\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to fetch pending items.');\n      }\n\n      // Check if there are new pending items\n      const newPacks = data.pending_booster_packs || [];\n      const newCards = data.pending_cards || [];\n      if (newPacks.length > pendingBoosterPacks.length || newCards.length > pendingCards.length) {\n        showMessage('You have new items from your DM!', 'info');\n      }\n      setPendingBoosterPacks(newPacks);\n      setPendingCards(newCards);\n    } catch (err) {\n      console.error('Error fetching pending items:', err);\n      // Don't show an error message for every failed poll to avoid spamming the user\n    }\n  }, [isAuthenticated, playerId, password, isDMMode, pendingBoosterPacks.length, pendingCards.length, showMessage]);\n\n  // --- NEW: Polling effect for pending items ---\n  useEffect(() => {\n    let intervalId;\n    if (isAuthenticated && !isDMMode && playerId && password) {\n      // Fetch immediately on login/mode switch\n      fetchPendingItems();\n      // Then set up polling every 10 seconds\n      intervalId = setInterval(fetchPendingItems, 10000);\n    }\n\n    // Cleanup function to clear the interval when component unmounts or dependencies change\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [isAuthenticated, isDMMode, playerId, password, fetchPendingItems]);\n\n  // --- Main Component Render ---\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: AppStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1664,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Spell Trading Cards Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1666,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: [isAuthenticated &&\n        /*#__PURE__*/\n        // Only show toggle if logged in\n        _jsxDEV(\"div\", {\n          className: \"dm-toggle-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"dm-toggle-switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: isDMMode,\n              onChange: e => {\n                setIsDMMode(e.target.checked);\n                // When toggling, reset DM specific states and ensure appropriate tab is active\n                setSelectedDmSession(null);\n                setSelectedPlayerForDMView(null);\n                setSelectedPlayerDMData(null);\n                setActiveDmTab('my_sessions'); // Reset DM sub-tab\n                // If switching to DM mode, set main active tab to dm_screen\n                // Otherwise, set to 'available' (default player tab)\n                setActiveTab(e.target.checked ? 'dm_screen' : 'available');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1674,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dm-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1685,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1673,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"DM Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1687,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1672,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Player ID\",\n          value: playerId,\n          onChange: e => setPlayerId(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1691,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1698,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLoginAndLoadDeck,\n          disabled: loading,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1705,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateAccount,\n          disabled: loading,\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1706,\n          columnNumber: 21\n        }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveDeck,\n          disabled: loading,\n          children: \"Save Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1707,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1669,\n        columnNumber: 17\n      }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-box ${message.type}`,\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1711,\n        columnNumber: 34\n      }, this), !isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pre-login-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please log in to access the Spell Card Manager.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1716,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Create an account or log in to manage your spells and game sessions!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1717,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1715,\n        columnNumber: 21\n      }, this) : isDMMode ?\n      /*#__PURE__*/\n      /* DM Screen Section (full screen when isDMMode is true) */\n      _jsxDEV(\"div\", {\n        className: \"dm-screen-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"panel-title\",\n          children: \"DM Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1722,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dm-sub-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `dm-sub-nav-item ${activeDmTab === 'create_session' ? 'active' : ''}`,\n            onClick: () => {\n              setActiveDmTab('create_session');\n              setSelectedDmSession(null);\n              setSelectedPlayerForDMView(null);\n            },\n            children: \"Create Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1725,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `dm-sub-nav-item ${activeDmTab === 'my_sessions' ? 'active' : ''}`,\n            onClick: () => {\n              setActiveDmTab('my_sessions');\n              setSelectedPlayerForDMView(null);\n            },\n            children: \"My Sessions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1731,\n            columnNumber: 29\n          }, this), selectedPlayerForDMView && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `dm-sub-nav-item ${activeDmTab === 'view_player' ? 'active' : ''}`,\n            onClick: () => setActiveDmTab('view_player'),\n            children: [\"Viewing: \", selectedPlayerForDMView]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1738,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1724,\n          columnNumber: 25\n        }, this), activeDmTab === 'create_session' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dm-section-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create New Game Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1750,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Session Name (e.g., 'Dragon's Breath Campaign')\",\n            value: sessionNameInput,\n            onChange: e => setSessionNameInput(e.target.value),\n            disabled: loading,\n            style: {\n              maxWidth: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1751,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateSession,\n            disabled: loading,\n            children: \"Generate Session Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1759,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-message\",\n            children: \"Once created, share the 6-character session code with your players!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1762,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1749,\n          columnNumber: 29\n        }, this), activeDmTab === 'my_sessions' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dm-section-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Game Sessions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1771,\n            columnNumber: 33\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-message\",\n            children: \"Loading sessions...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1773,\n            columnNumber: 37\n          }, this) : dmSessions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-message\",\n            children: \"You haven't created any sessions yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1775,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dm-session-list\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: dmSessions.map(session => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleSelectDmSession(session),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: session.session_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1782,\n                    columnNumber: 57\n                  }, this), \" (Code: \", session.session_code, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1781,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Players: \", session.player_count, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1784,\n                  columnNumber: 53\n                }, this)]\n              }, session.session_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1780,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1778,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1777,\n            columnNumber: 37\n          }, this), selectedDmSession && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginTop: '2rem'\n              },\n              children: [\"Players in \\\"\", selectedDmSession.session_name, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1795,\n              columnNumber: 41\n            }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-message\",\n              children: \"Loading players...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1797,\n              columnNumber: 45\n            }, this) : playersInSelectedDmSession.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-message\",\n              children: \"No players have joined this session yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1799,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dm-player-list\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: playersInSelectedDmSession.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => handleViewPlayerCards(player.player_id),\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"dm-player-id\",\n                    children: player.player_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1805,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"select-button\",\n                    children: \"View Cards\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1806,\n                    columnNumber: 61\n                  }, this)]\n                }, player.player_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1804,\n                  columnNumber: 57\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1802,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1801,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1770,\n          columnNumber: 29\n        }, this), activeDmTab === 'view_player' && selectedPlayerDMData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dm-section-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Viewing Player: \", selectedPlayerForDMView]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1820,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveDmTab('my_sessions'),\n            className: \"select-button\",\n            style: {\n              marginBottom: '1rem'\n            },\n            children: \"Back to Session Players\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1821,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dm-player-view-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dm-player-stats-panel\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Player Stats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1827,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Level: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: selectedPlayerDMData.character_level\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1828,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1828,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"WIS Mod: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: selectedPlayerDMData.wis_mod\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1829,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1829,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"INT Mod: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: selectedPlayerDMData.int_mod\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1830,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1830,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"CHA Mod: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: selectedPlayerDMData.cha_mod\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1831,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1831,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1826,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dm-player-deck-panel\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Active Deck (\", selectedPlayerDMData.active_deck_instances.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1835,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-list\",\n                children: selectedPlayerDMData.active_deck_instances.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"empty-message no-hover\",\n                  children: \"No cards in active deck.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1838,\n                  columnNumber: 49\n                }, this) : selectedPlayerDMData.active_deck_instances.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`,\n                    alt: card.name,\n                    className: \"card-image\",\n                    onError: e => {\n                      e.target.onerror = null;\n                      e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\";\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1842,\n                    columnNumber: 58\n                  }, this), card.backlash_effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-backlash\",\n                    children: [\"Backlash: \", card.backlash_effect]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1849,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"card-name\",\n                    children: card.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1851,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-description\",\n                    children: card.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1852,\n                    columnNumber: 57\n                  }, this), card.effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-effect\",\n                    children: [\"Effect: \", card.effect]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1854,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-uses\",\n                    children: [\"Uses: \", card.current_uses, \"/\", card.default_uses_per_rest]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1856,\n                    columnNumber: 57\n                  }, this)]\n                }, card.instance_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1841,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1836,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1834,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dm-player-collection-panel\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Owned Collection (\", selectedPlayerDMData.unlocked_collection_ids.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1865,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-list\",\n                children: selectedPlayerDMData.unlocked_collection_ids.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"empty-message no-hover\",\n                  children: \"No cards owned.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1868,\n                  columnNumber: 49\n                }, this) :\n                // Display unique cards from collection, with count\n                Object.entries(selectedPlayerDMData.unlocked_collection_ids.reduce((acc, cardId) => {\n                  acc[cardId] = (acc[cardId] || 0) + 1;\n                  return acc;\n                }, {})).map(([cardId, count]) => {\n                  const fullCard = getFullCardDetails(cardId);\n                  return fullCard ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `https://placehold.co/100x150/a8dadc/ffffff?text=${fullCard.name.split('.')[0].replace('_', '%20')}`,\n                      alt: fullCard.name,\n                      className: \"card-image\",\n                      onError: e => {\n                        e.target.onerror = null;\n                        e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\";\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1878,\n                      columnNumber: 62\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"card-name\",\n                      children: fullCard.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1884,\n                      columnNumber: 61\n                    }, this), fullCard.backlash_effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-backlash\",\n                      children: [\"Backlash: \", fullCard.backlash_effect]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1886,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-description\",\n                      children: fullCard.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1888,\n                      columnNumber: 61\n                    }, this), fullCard.effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-effect\",\n                      children: [\"Effect: \", fullCard.effect]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1890,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-meta\",\n                      children: [\"Rarity: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: fullCard.rarity\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1892,\n                        columnNumber: 94\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1892,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"card-meta\",\n                      children: [\"Owned: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: count\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1893,\n                        columnNumber: 93\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1893,\n                      columnNumber: 61\n                    }, this)]\n                  }, cardId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1877,\n                    columnNumber: 57\n                  }, this) : null;\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1866,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1864,\n              columnNumber: 37\n            }, this), (selectedPlayerDMData.pending_booster_packs.length > 0 || selectedPlayerDMData.pending_cards.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-notification-area\",\n              style: {\n                marginTop: '2rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Player's Pending Items\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1903,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [selectedPlayerDMData.pending_booster_packs.map((pack, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"notification-text\",\n                    children: [\"Pending: \", pack]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1907,\n                    columnNumber: 57\n                  }, this)\n                }, `dm-player-pending-pack-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1906,\n                  columnNumber: 53\n                }, this)), selectedPlayerDMData.pending_cards.map((cardId, index) => {\n                  const card = getFullCardDetails(cardId);\n                  return card ? /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"notification-text\",\n                      children: [\"Pending: \", card.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1914,\n                      columnNumber: 61\n                    }, this)\n                  }, `dm-player-pending-card-${cardId}-${index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1913,\n                    columnNumber: 57\n                  }, this) : null;\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1904,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1902,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1825,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dm-distribution-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Distribute Items to \", selectedPlayerForDMView]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1925,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedPackTypeToGive,\n                onChange: e => setSelectedPackTypeToGive(e.target.value),\n                disabled: loading,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Common Pack\",\n                  children: \"Common Pack\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1934,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Uncommon Pack\",\n                  children: \"Uncommon Pack\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1935,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Rare Pack\",\n                  children: \"Rare Pack\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1936,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Legendary Pack\",\n                  children: \"Legendary Pack\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1937,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1929,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleGiveSpecificPack,\n                disabled: loading,\n                children: [\" \", \"Give Pack\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1939,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1928,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                marginTop: '1rem',\n                marginBottom: '0.5rem'\n              },\n              children: \"Give Specific Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1945,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search Cards to Give...\",\n              value: searchCardInputForDM,\n              onChange: e => setSearchCardInputForDM(e.target.value),\n              disabled: loading,\n              style: {\n                maxWidth: '400px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1946,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dm-card-distribution-list\",\n              children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"empty-message no-hover\",\n                children: \"Loading all cards...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1956,\n                columnNumber: 45\n              }, this) : filteredAllCardsForDM.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"empty-message no-hover\",\n                children: \"No cards found matching your search.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1958,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: filteredAllCardsForDM.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"card-name\",\n                    children: [card.name, \" (\", card.type, \") - \", card.rarity]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1963,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleGiveSpecificCard(card.id),\n                    disabled: loading,\n                    className: \"select-button\",\n                    children: \"Give\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1964,\n                    columnNumber: 57\n                  }, this)]\n                }, `dm-give-${card.id}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1962,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1960,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1954,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1924,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1819,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1721,\n        columnNumber: 21\n      }, this) :\n      /*#__PURE__*/\n      /* Player Content (when isDMMode is false) */\n      _jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Level: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: characterLevel,\n              onChange: e => setCharacterLevel(Math.max(1, parseInt(e.target.value) || 1)),\n              min: \"1\",\n              max: \"20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1985,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1985,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"WIS Mod: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: wisMod,\n              onChange: e => setWisMod(parseInt(e.target.value) || 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1986,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1986,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"INT Mod: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: intMod,\n              onChange: e => setIntMod(parseInt(e.target.value) || 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1987,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1987,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"CHA Mod: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: chaMod,\n              onChange: e => setChaMod(parseInt(e.target.value) || 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1988,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1988,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Max Deck Size: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"highlight\",\n              children: maxDeckSize\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1989,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1989,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1984,\n          columnNumber: 25\n        }, this), (pendingBoosterPacks.length > 0 || pendingCards.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-notification-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"You Have New Items! \\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1995,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [pendingBoosterPacks.map((pack, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"notification-text\",\n                children: [\"Pending: \", pack]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1999,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleOpenPendingBooster,\n                disabled: loading,\n                className: \"booster-button\",\n                children: \"Open Pack\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2000,\n                columnNumber: 45\n              }, this)]\n            }, `pending-pack-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1998,\n              columnNumber: 41\n            }, this)), pendingCards.map((cardId, index) => {\n              const card = getFullCardDetails(cardId);\n              return card ? /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"notification-text\",\n                  children: [\"Pending: \", card.name, \" (\", card.rarity, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2009,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleAcceptPendingCard(card.id),\n                  disabled: loading,\n                  className: \"select-button\",\n                  children: \"Accept Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2010,\n                  columnNumber: 49\n                }, this)]\n              }, `pending-card-${cardId}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2008,\n                columnNumber: 45\n              }, this) : null;\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1996,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1994,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tab-item ${activeTab === 'available' ? 'active' : ''}`,\n            onClick: () => setActiveTab('available'),\n            children: [\"Available Spells (\", filteredAndSortedAvailableCards.length, \" Types / \", unlockedCollectionIds.length, \" Total Owned)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2022,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tab-item ${activeTab === 'deck' ? 'active' : ''}`,\n            onClick: () => setActiveTab('deck'),\n            children: [\"Your Deck (\", activeDeckInstances.length, \"/\", maxDeckSize, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2028,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2021,\n          columnNumber: 25\n        }, this), activeTab === 'available' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-filters-sort-search\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"search-cards\",\n              children: \"Search:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2041,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"search-cards\",\n              type: \"text\",\n              placeholder: \"Search spells...\",\n              value: searchAvailableCards,\n              onChange: e => setSearchAvailableCards(e.target.value),\n              disabled: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2042,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"filter-type\",\n              children: \"Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2051,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"filter-type\",\n              value: filterType,\n              onChange: e => setFilterType(e.target.value),\n              disabled: loading,\n              children: uniqueCardTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type,\n                children: type\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2059,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2052,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"filter-rarity\",\n              children: \"Rarity:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2063,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"filter-rarity\",\n              value: filterRarity,\n              onChange: e => setFilterRarity(e.target.value),\n              disabled: loading,\n              children: uniqueCardRarities.map(rarity => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: rarity,\n                children: rarity\n              }, rarity, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2071,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2064,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sort-order\",\n              children: \"Sort By:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2075,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"sort-order\",\n              value: sortOrder,\n              onChange: e => setSortOrder(e.target.value),\n              disabled: loading,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"name-asc\",\n                children: \"Name (A-Z)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2082,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"name-desc\",\n                children: \"Name (Z-A)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2083,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"rarity-asc\",\n                children: \"Rarity (Low to High)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2084,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"rarity-desc\",\n                children: \"Rarity (High to Low)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2085,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2076,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2040,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-collection-panel\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"panel-title\",\n              children: \"Available Spells\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2091,\n              columnNumber: 37\n            }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-message\",\n              children: \"Loading cards...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2092,\n              columnNumber: 49\n            }, this), !isAuthenticated && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pre-login-message\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Log in to see your available spells.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2095,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2094,\n              columnNumber: 41\n            }, this), isAuthenticated && !loading && filteredAndSortedAvailableCards.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-list\",\n              children: filteredAndSortedAvailableCards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-item available-card\",\n                onClick: () => handleAddCardToDeck(card),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`,\n                  alt: card.name,\n                  className: \"card-image\",\n                  onError: e => {\n                    e.target.onerror = null;\n                    e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2102,\n                  columnNumber: 53\n                }, this), card.backlash_effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-backlash\",\n                  children: [\"Backlash: \", card.backlash_effect]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2109,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"card-name\",\n                  children: [card.name, \" (\", card.type, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2111,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-description\",\n                  children: card.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2112,\n                  columnNumber: 53\n                }, this), card.effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-effect\",\n                  children: [\"Effect: \", card.effect]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2114,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-meta\",\n                  children: [\"Rarity: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: card.rarity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2116,\n                    columnNumber: 86\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2116,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-meta\",\n                  children: [\"Owned Copies: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: card.owned_copies\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2117,\n                    columnNumber: 92\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2117,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleAddCardToDeck(card);\n                  } // Stop propagation to prevent parent onClick\n                  // Disable button if deck is full OR if all owned copies are already in the deck\n                  ,\n                  disabled: activeDeckInstances.length >= maxDeckSize || activeDeckInstances.filter(c => c.id === card.id).length >= card.owned_copies,\n                  className: \"select-button\",\n                  children: \"Add to Deck\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2118,\n                  columnNumber: 53\n                }, this)]\n              }, card.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2101,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2099,\n              columnNumber: 41\n            }, this) : isAuthenticated && !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-message\",\n              children: \"No available spells match your current filters or search.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2131,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2090,\n            columnNumber: 33\n          }, this), isAuthenticated && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"booster-pack-section\",\n            children: [uniqueUnlockedCards.length === 0 && pendingBoosterPacks.length === 0 && filteredAndSortedAvailableCards.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-message\",\n              children: \"You haven't unlocked any unique spell types yet! Open a booster pack to get started.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2139,\n              columnNumber: 45\n            }, this), pendingBoosterPacks.length === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleOpenBoosterPack,\n              disabled: loading,\n              className: \"booster-button\",\n              children: \"Open Booster Pack\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2143,\n              columnNumber: 45\n            }, this), newlyAcquiredCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-cards-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Newly Acquired Cards from \", lastOpenedPackType, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2154,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: newlyAcquiredCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\" \", card.name, \" (\", card.type, \", \", card.rarity, \")\", prePackUnlockedIds.includes(card.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \" (Duplicate)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2159,\n                    columnNumber: 102\n                  }, this)]\n                }, card.id + \"-new-\" + index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2157,\n                  columnNumber: 57\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2155,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2153,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2137,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true), activeTab === 'deck' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"built-deck-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"panel-title\",\n            children: [\"Your Deck (\", activeDeckInstances.length, \"/\", maxDeckSize, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2173,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"deck-list\",\n            children: isAuthenticated ? activeDeckInstances.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-message\",\n              children: \"Select cards from the \\\"Available Spells\\\" tab to build your deck!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2177,\n              columnNumber: 45\n            }, this) : activeDeckInstances.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-item deck-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`,\n                alt: card.name,\n                className: \"card-image\",\n                onError: e => {\n                  e.target.onerror = null;\n                  e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\";\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2181,\n                columnNumber: 53\n              }, this), card.backlash_effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-backlash\",\n                children: [\"Backlash: \", card.backlash_effect]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2188,\n                columnNumber: 57\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"card-name\",\n                children: [card.name, \" (\", card.type, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2190,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-description\",\n                children: card.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2191,\n                columnNumber: 53\n              }, this), card.effect && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-effect\",\n                children: [\"Effect: \", card.effect]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2193,\n                columnNumber: 57\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-meta\",\n                children: [\"Rarity: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: card.rarity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2195,\n                  columnNumber: 86\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2195,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-uses\",\n                children: [\"Uses Left: \", card.current_uses, \"/\", card.default_uses_per_rest]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2196,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"card-note-textarea\",\n                placeholder: \"Add personal notes here...\",\n                value: card.notes,\n                onChange: e => handleChangeCardNote(card.instance_id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2198,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleMarkCardUsed(card.instance_id),\n                  disabled: card.current_uses <= 0,\n                  className: \"use-button\",\n                  children: \"Use\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2205,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleResetCardUses(card.instance_id),\n                  className: \"reset-button\",\n                  children: \"Reset Uses\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2212,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleRemoveCardFromDeck(card.instance_id),\n                  className: \"remove-button\",\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2218,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2204,\n                columnNumber: 53\n              }, this)]\n            }, card.instance_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2180,\n              columnNumber: 49\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pre-login-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Please log in to load your character and spell deck.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2230,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Once logged in, your deck and stats will appear here.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2231,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2229,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2174,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2172,\n          columnNumber: 29\n        }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dm-section-panel\",\n          style: {\n            marginTop: '2rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Join a Game Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2241,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Session Code\",\n            value: sessionCodeInput,\n            onChange: e => setSessionCodeInput(e.target.value),\n            disabled: loading,\n            style: {\n              maxWidth: '250px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2242,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleJoinSession,\n            disabled: loading,\n            children: \"Join Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2250,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2240,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1982,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1665,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"dEouejovXAKNxL9oVq2I+BzJuGw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","AppStyles","App","_s","allCards","setAllCards","characterLevel","setCharacterLevel","wisMod","setWisMod","intMod","setIntMod","chaMod","setChaMod","maxDeckSize","setMaxDeckSize","activeDeckInstances","setActiveDeckInstances","unlockedCollectionIds","setUnlockedCollectionIds","error","setError","playerId","setPlayerId","password","setPassword","isAuthenticated","setIsAuthenticated","message","setMessage","text","type","loading","setLoading","activeTab","setActiveTab","newlyAcquiredCards","setNewlyAcquiredCards","lastOpenedPackType","setLastOpenedPackType","prePackUnlockedIds","setPrePackUnlockedIds","isDMMode","setIsDMMode","sessionNameInput","setSessionNameInput","sessionCodeInput","setSessionCodeInput","dmSessions","setDmSessions","selectedDmSession","setSelectedDmSession","playersInSelectedDmSession","setPlayersInSelectedDmSession","selectedPlayerForDMView","setSelectedPlayerForDMView","selectedPlayerDMData","setSelectedPlayerDMData","activeDmTab","setActiveDmTab","selectedPackTypeToGive","setSelectedPackTypeToGive","searchCardInputForDM","setSearchCardInputForDM","pendingBoosterPacks","setPendingBoosterPacks","pendingCards","setPendingCards","filterType","setFilterType","filterRarity","setFilterRarity","sortOrder","setSortOrder","searchAvailableCards","setSearchAvailableCards","showMessage","duration","setTimeout","handleCreateAccount","response","fetch","method","headers","body","JSON","stringify","player_id","data","json","ok","Error","err","console","handleLoginAndLoadDeck","active_deck_instances","map","card","current_uses","undefined","default_uses_per_rest","notes","unlocked_collection_ids","character_level","wis_mod","int_mod","cha_mod","pending_booster_packs","pending_cards","handleSaveDeck","fetchAllCards","cardsResponse","status","cardsData","calculateDeckSize","max_deck_size","isNaN","handleOpenBoosterPack","pack_type","new_cards","length","updated_unlocked_collection_ids","handleOpenPendingBooster","updated_pending_booster_packs","handleAcceptPendingCard","cardIdToAccept","card_id","updated_pending_cards","card_name","handleAddCardToDeck","ownedCopiesOfThisCard","filter","id","copiesInActiveDeck","c","name","cantripCountInDeck","prev","instance_id","handleRemoveCardFromDeck","updatedDeck","cantripCount","handleMarkCardUsed","cardToUse","find","deck_card_id","log","log_entry","handleResetCardUses","handleChangeCardNote","newNote","getFullCardDetails","cardId","uniqueUnlockedCards","uniqueCardsMap","includes","reduce","acc","count","owned_copies","Object","values","filteredAndSortedAvailableCards","filteredCards","searchTerm","toLowerCase","rarity","description","effect","sort","a","b","localeCompare","rarityOrder","rarityOrderDesc","uniqueCardTypes","Set","uniqueCardRarities","fetchMyDMSessions","sessionsWithPlayerCounts","Promise","all","sessions","session","playersResponse","session_id","playersData","player_count","players","handleCreateSession","session_name","session_code","handleJoinSession","fetchPlayersInSession","sessionId","handleSelectDmSession","handleViewPlayerCards","player_id_to_view","player","p","handleGiveSpecificPack","dm_player_id","target_player_id","updatedPlayerResponse","updatedPlayersData","updatedPlayer","handleGiveSpecificCard","filteredAllCardsForDM","fetchPendingItems","newPacks","newCards","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","checked","onChange","e","target","placeholder","value","disabled","onClick","style","maxWidth","marginTop","marginBottom","src","split","replace","alt","onError","onerror","backlash_effect","entries","fullCard","pack","index","Math","max","parseInt","min","htmlFor","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/aaron/DND_Spell_Cards/Spell_Card_Game/DND_Spell_Cards_online/Online_DM_additions/frontend - Copy/src/App.js"],"sourcesContent":["// dnd-spell-cards-app/frontend/src/App.js\r\n\r\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid for unique keys for deck card instances\r\n\r\n// IMPORTANT: Update this to your VM's Public IP address (or domain name if configured)\r\nconst API_BASE_URL = 'http://193.122.147.91:5000/api';\r\n\r\n// Inline CSS for self-contained component\r\nconst AppStyles = `\r\n    /* Import Google Fonts for a D&D feel */\r\n    @import url('https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Merriweather:wght@400;700&display=swap');\r\n\r\n    body {\r\n        background-color: #3b2f2f; /* Dark brown background, like a closed grimoire */\r\n        font-family: 'Merriweather', serif; /* Readable serif for body text */\r\n        color: #5a4b4b; /* Darker, faded text */\r\n        margin: 0;\r\n        padding: 0;\r\n        line-height: 1.6;\r\n    }\r\n\r\n    .App {\r\n        display: flex;\r\n        flex-direction: column;\r\n        min-height: 100vh;\r\n        align-items: center;\r\n        padding: 1.5rem; /* Increased padding */\r\n        box-sizing: border-box;\r\n        /* --- NEW WOODEN FLOOR TEXTURE --- */\r\n        background-image: url('/images/wooden-floor.jpg');\r\n        background-size: cover;\r\n        background-position: center; /* Center the background image */\r\n        background-attachment: fixed;\r\n        border: 10px solid #4a3e3c; /* Thick, dark border for the \"book\" effect */\r\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5); /* Deep shadow for depth */\r\n        margin: 1rem; /* Margin to show body background */\r\n        border-radius: 1rem; /* Slightly rounded edges for the book */\r\n    }\r\n\r\n    .app-title {\r\n        font-family: 'Cinzel', serif; /* Ornate font for title */\r\n        color: #8c6e4e; /* Gold/parchment color */\r\n        text-align: center;\r\n        margin-bottom: 2rem;\r\n        font-size: 3.2rem; /* Larger title */\r\n        font-weight: 700;\r\n        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.6); /* Text shadow for depth */\r\n    }\r\n\r\n    .login-container, .stats-container, .dm-section-panel, .player-notification-area, .booster-pack-section, .player-filters-sort-search { /* Added .player-filters-sort-search */\r\n        background: #6a5d5a; /* Muted stone/dark wood color */\r\n        color: #f5f5dc; /* Off-white for readability */\r\n        padding: 1.8rem; /* More padding */\r\n        margin-bottom: 2rem;\r\n        border-radius: 0.8rem;\r\n        box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3); /* Inset shadow for carved look */\r\n        display: flex;\r\n        gap: 1.2rem;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex-wrap: wrap;\r\n        width: 100%;\r\n        max-width: 1000px; /* Slightly narrower */\r\n        border: 2px solid #4a3e3c; /* Matching dark border */\r\n    }\r\n\r\n    .login-container input, .dm-section-panel input, .dm-section-panel select, .player-filters-sort-search input, .player-filters-sort-search select {\r\n        padding: 0.8rem 1rem;\r\n        border-radius: 0.5rem;\r\n        border: 1px solid #8c6e4e; /* Goldish border */\r\n        background: #e9dcc9; /* Parchment background */\r\n        color: #3b2f2f; /* Dark text */\r\n        font-family: 'Merriweather', serif;\r\n        font-size: 1.1rem;\r\n        flex-grow: 1;\r\n        max-width: 200px;\r\n    }\r\n\r\n    .login-container button, .use-button, .reset-button, .remove-button, .select-button, .booster-button, .dm-section-panel button, .player-notification-area button {\r\n        background-color: #8c6e4e; /* Gold/bronze button */\r\n        color: #f5f5dc; /* Off-white text */\r\n        padding: 0.8rem 1.5rem;\r\n        border: 2px solid #5a4b4b; /* Darker edge */\r\n        border-radius: 0.5rem;\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n        transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;\r\n        white-space: nowrap;\r\n        font-family: 'Cinzel', serif; /* Thematic button font */\r\n        text-transform: uppercase;\r\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n    }\r\n\r\n    .login-container button:hover, .select-button:hover:not(:disabled), .booster-button:hover:not(:disabled), .dm-section-panel button:hover:not(:disabled), .player-notification-area button:hover:not(:disabled) {\r\n        background-color: #a38b6d; /* Lighter gold on hover */\r\n        transform: translateY(-3px); /* More pronounced lift */\r\n        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);\r\n    }\r\n\r\n    .select-button:disabled, .use-button:disabled, .booster-button:disabled, .dm-section-panel button:disabled, .player-notification-area button:disabled {\r\n        background-color: #5a4b4b; /* Muted disabled color */\r\n        color: #a0a0a0;\r\n        cursor: not-allowed;\r\n        transform: none;\r\n        box-shadow: none;\r\n    }\r\n\r\n    .stats-container {\r\n        background: #5a4b4b; /* Darker tone for stats */\r\n        color: #f5f5dc;\r\n        padding: 1.8rem;\r\n    }\r\n\r\n    .stats-container label {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 0.6rem;\r\n        font-weight: 700;\r\n        font-family: 'Cinzel', serif;\r\n    }\r\n\r\n    .stats-container input {\r\n        width: 5rem; /* Wider input */\r\n        padding: 0.4rem;\r\n        border-radius: 0.4rem;\r\n        border: 1px solid #8c6e4e;\r\n        background: #e9dcc9;\r\n        color: #3b2f2f;\r\n        text-align: center;\r\n        font-family: 'Merriweather', serif;\r\n    }\r\n\r\n    .stats-container p {\r\n        margin: 0;\r\n        padding: 0;\r\n        font-size: 1.1rem;\r\n        font-weight: 700;\r\n    }\r\n\r\n    .message-box {\r\n        position: fixed;\r\n        top: 2rem; /* Lowered position */\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        padding: 0.9rem 1.8rem;\r\n        border-radius: 0.6rem;\r\n        font-weight: bold;\r\n        z-index: 1000;\r\n        animation: fadein 0.5s, fadeout 0.5s 4.5s; /* Longer display */\r\n        text-align: center;\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);\r\n        font-family: 'Cinzel', serif;\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    .message-box.success {\r\n        background-color: #488c5d; /* Darker green */\r\n        color: white;\r\n    }\r\n\r\n    .message-box.error {\r\n        background-color: #a33b3b; /* Darker red */\r\n        color: white;\r\n    }\r\n\r\n    .message-box.info {\r\n        background-color: #6a5d5a;\r\n        color: #f5f5dc;\r\n    }\r\n\r\n    @keyframes fadein {\r\n        from { opacity: 0; transform: translateX(-50%) translateY(-20px); }\r\n        to   { opacity: 1; transform: translateX(-50%) translateY(0); }\r\n    }\r\n\r\n    @keyframes fadeout {\r\n        from { opacity: 1; transform: translateX(-50%) translateY(0); }\r\n        to   { opacity: 0; transform: translateX(-50%) translateY(-20px); }\r\n    }\r\n\r\n    .tab-navigation {\r\n        display: flex;\r\n        justify-content: center;\r\n        width: 100%;\r\n        max-width: 1000px;\r\n        margin-bottom: 2rem;\r\n        background-color: #5a4b4b; /* Darker tab background */\r\n        border-radius: 0.8rem;\r\n        box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.4);\r\n        overflow: hidden;\r\n        border: 2px solid #4a3e3c;\r\n    }\r\n\r\n    .tab-item {\r\n        flex: 1;\r\n        text-align: center;\r\n        padding: 1.2rem 1.8rem; /* More generous padding */\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n        color: #e9dcc9; /* Parchment text */\r\n        background-color: #5a4b4b;\r\n        transition: background-color 0.3s ease, color 0.3s ease;\r\n        border-bottom: 4px solid transparent; /* Thicker active indicator */\r\n        font-family: 'Cinzel', serif;\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    .tab-item:hover:not(.active) {\r\n        background-color: #6a5d5a; /* Slightly lighter on hover */\r\n    }\r\n\r\n    .tab-item.active {\r\n        background-color: #8c6e4e; /* Gold active tab */\r\n        color: white;\r\n        border-bottom-color: #a38b6d; /* Lighter gold accent */\r\n    }\r\n\r\n    .main-content {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 2rem; /* Increased gap */\r\n        width: 100%;\r\n        max-width: 1000px;\r\n        flex: 1;\r\n    }\r\n\r\n    .card-collection-panel, .built-deck-panel {\r\n        background: #e9dcc9; /* Parchment background for panels */\r\n        border-radius: 0.8rem;\r\n        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\r\n        padding: 2rem; /* More padding */\r\n        flex: 1;\r\n        min-width: 320px; /* Slightly larger min-width */\r\n        display: flex;\r\n        flex-direction: column;\r\n        border: 2px solid #8c6e4e; /* Gold border */\r\n    }\r\n\r\n    /* Player's Available Spells panel - now scrollable */\r\n    .card-collection-panel {\r\n        max-height: 700px; /* Fixed height for scrolling */\r\n        overflow-y: auto; /* Enable vertical scrolling */\r\n    }\r\n\r\n    .panel-title {\r\n        font-family: 'Cinzel', serif;\r\n        text-align: center;\r\n        color: #3b2f2f; /* Dark text for title */\r\n        margin-top: 0;\r\n        margin-bottom: 2rem;\r\n        font-size: 2.2rem; /* Larger panel title */\r\n        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\r\n    }\r\n\r\n    .card-list, .deck-list {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr)); /* Larger cards */\r\n        gap: 1.5rem; /* Increased gap */\r\n        flex-grow: 1;\r\n    }\r\n\r\n    .card-item {\r\n        background: #fdf6e6; /* Lighter parchment for individual cards */\r\n        border: 1px solid #d3c4a2; /* Faded parchment border */\r\n        border-radius: 0.6rem;\r\n        padding: 1.2rem;\r\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\r\n        transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n        display: flex;\r\n        flex-direction: column;\r\n        text-align: center;\r\n        font-family: 'Merriweather', serif;\r\n    }\r\n\r\n    .card-item:hover.available-card {\r\n        transform: translateY(-7px); /* More dramatic lift */\r\n        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.25);\r\n        cursor: pointer;\r\n    }\r\n\r\n    .card-item.deck-card {\r\n        background: #e9dcc9; /* Muted parchment for deck cards */\r\n        border: 1px solid #8c6e4e; /* Goldish border for deck cards */\r\n    }\r\n\r\n    .card-image {\r\n        max-width: 100%;\r\n        height: auto;\r\n        border-radius: 0.4rem;\r\n        margin-bottom: 1rem;\r\n        border: 1px solid #8c6e4e; /* Gold frame for image */\r\n    }\r\n    \r\n    .card-backlash {\r\n        font-family: 'Merriweather', serif;\r\n        font-size: 0.85rem;\r\n        color: #a33b3b; /* Red color for backlash effect */\r\n        margin-bottom: 0.5rem;\r\n        font-weight: bold;\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    .card-name {\r\n        font-family: 'Cinzel', serif;\r\n        font-weight: 700;\r\n        font-size: 1.25rem;\r\n        color: #3b2f2f;\r\n        margin-bottom: 0.6rem;\r\n    }\r\n\r\n    .card-type {\r\n        font-style: italic;\r\n        color: #5a4b4b;\r\n        margin-bottom: 0.7rem;\r\n        font-size: 0.95rem;\r\n    }\r\n\r\n    .card-description {\r\n        font-size: 0.9rem;\r\n        color: #4a3e3c;\r\n        flex-grow: 1;\r\n        margin-bottom: 0.7rem; /* Adjusted margin */\r\n    }\r\n\r\n    .card-effect {\r\n        font-size: 0.9rem;\r\n        color: #4a6d8c; /* Blue color for effect */\r\n        margin-bottom: 0.7rem; /* Adjusted margin */\r\n        font-style: italic;\r\n    }\r\n\r\n    .card-meta, .card-uses {\r\n        font-size: 0.85rem;\r\n        color: #5a4b4b;\r\n        margin-bottom: 0.6rem;\r\n    }\r\n    \r\n    .card-meta span {\r\n        font-weight: bold;\r\n        color: #3b2f2f;\r\n    }\r\n\r\n    .card-actions {\r\n        margin-top: 1rem;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 0.6rem;\r\n        justify-content: center;\r\n    }\r\n\r\n    .use-button {\r\n        background-color: #4a6d8c; /* Muted blue for use */\r\n        color: white;\r\n    }\r\n    .use-button:hover:not(:disabled) {\r\n        background-color: #3a5c78;\r\n        transform: translateY(-2px);\r\n    }\r\n\r\n    .reset-button {\r\n        background-color: #5a8c4a; /* Muted green for reset */\r\n        color: white;\r\n    }\r\n    .reset-button:hover {\r\n        background-color: #4a783a;\r\n        transform: translateY(-2px);\r\n    }\r\n\r\n    .remove-button {\r\n        background-color: #8c4a4a; /* Muted red for remove */\r\n        color: white;\r\n    }\r\n    .remove-button:hover {\r\n        background-color: #783a3a;\r\n        transform: translateY(-2px);\r\n    }\r\n\r\n    .empty-message, .pre-login-message {\r\n        text-align: center;\r\n        padding: 2.5rem;\r\n        background: #d3c4a2; /* Lighter parchment */\r\n        border-radius: 0.8rem;\r\n        color: #5a4b4b;\r\n        font-style: italic;\r\n        margin: 1.5rem;\r\n        border: 1px solid #8c6e4e;\r\n        box-shadow: inset 0 1px 5px rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .error-message {\r\n        color: #a33b3b;\r\n        background-color: #fce2e2;\r\n        border: 1px solid #a33b3b;\r\n        padding: 0.8rem;\r\n        border-radius: 0.6rem;\r\n        text-align: center;\r\n        margin-top: 1.5rem;\r\n        font-weight: bold;\r\n        font-family: 'Merriweather', serif;\r\n    }\r\n\r\n    .highlight {\r\n        color: #4a6d8c; /* Muted blue highlight */\r\n        font-weight: bold;\r\n    }\r\n\r\n    /* Booster pack section on Player side - now has its own styling for layout */\r\n    .booster-pack-section {\r\n        flex-direction: column;\r\n        align-items: center;\r\n        padding-top: 1.8rem; /* Use the same padding as other panels */\r\n        border-top: 2px solid #4a3e3c; /* Consistent border */\r\n        width: 100%;\r\n        max-width: 1000px;\r\n        margin-top: 0; /* Adjusted since it's now a separate block */\r\n    }\r\n\r\n    .booster-pack-section button {\r\n        margin-top: 1.5rem;\r\n    }\r\n\r\n    .new-cards-display {\r\n        margin-top: 1.5rem;\r\n        padding: 1.5rem;\r\n        background: #d3c4a2;\r\n        border-radius: 0.6rem;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 450px;\r\n        border: 1px solid #8c6e4e;\r\n        box-shadow: inset 0 1px 5px rgba(0, 0, 0, 0.2);\r\n        font-family: 'Merriweather', serif;\r\n    }\r\n    .new-cards-display h4 {\r\n        font-family: 'Cinzel', serif;\r\n        color: #3b2f2f;\r\n        margin-bottom: 0.8rem;\r\n        font-size: 1.2rem;\r\n    }\r\n    .new-cards-display ul {\r\n        list-style-type: none;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n    .new-cards-display li {\r\n        margin-bottom: 0.3rem;\r\n        color: #4a3e3c;\r\n        font-size: 0.95rem;\r\n    }\r\n\r\n    /* DM Screen Specific Styles */\r\n    .dm-screen-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 100%;\r\n        max-width: 1000px;\r\n        gap: 1.5rem;\r\n    }\r\n\r\n    .dm-sub-nav {\r\n        display: flex;\r\n        justify-content: center;\r\n        background-color: #5a4b4b;\r\n        border-radius: 0.8rem;\r\n        box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.4);\r\n        overflow: hidden;\r\n        border: 2px solid #4a3e3c;\r\n    }\r\n\r\n    .dm-sub-nav-item {\r\n        flex: 1;\r\n        text-align: center;\r\n        padding: 1rem 1.5rem;\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n        color: #e9dcc9;\r\n        background-color: #5a4b4b;\r\n        transition: background-color 0.3s ease, color 0.3s ease;\r\n        border-bottom: 3px solid transparent;\r\n        font-family: 'Cinzel', serif;\r\n        text-transform: uppercase;\r\n        font-size: 0.95rem;\r\n    }\r\n\r\n    .dm-sub-nav-item:hover:not(.active) {\r\n        background-color: #6a5d5a;\r\n    }\r\n\r\n    .dm-sub-nav-item.active {\r\n        background-color: #8c6e4e;\r\n        color: white;\r\n        border-bottom-color: #a38b6d;\r\n    }\r\n\r\n    .dm-section-panel {\r\n        flex-direction: column;\r\n        align-items: stretch;\r\n        gap: 1.5rem;\r\n        max-width: none; /* Override max-width for full panel use */\r\n    }\r\n\r\n    .dm-session-list ul, .dm-player-list ul, .dm-card-distribution-list ul, .player-notification-area ul {\r\n        list-style-type: none;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n\r\n    .dm-session-list li, .dm-player-list li, .dm-card-distribution-list li, .player-notification-area li {\r\n        background: #d3c4a2;\r\n        padding: 0.8rem 1.2rem;\r\n        margin-bottom: 0.5rem;\r\n        border-radius: 0.4rem;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        font-family: 'Merriweather', serif;\r\n        color: #3b2f2f;\r\n        box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n        cursor: pointer;\r\n        transition: background-color 0.2s ease;\r\n    }\r\n\r\n    .dm-session-list li:hover, .dm-player-list li:hover:not(.no-hover), .dm-card-distribution-list li:hover, .player-notification-area li:hover {\r\n        background-color: #c9bda5;\r\n    }\r\n\r\n    .dm-player-id {\r\n        font-weight: bold;\r\n        color: #4a6d8c;\r\n    }\r\n\r\n    .dm-player-view-details {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 2rem;\r\n        margin-top: 1.5rem;\r\n    }\r\n\r\n    .dm-player-stats-panel, .dm-player-deck-panel, .dm-player-collection-panel { /* Added .dm-player-collection-panel */\r\n        flex: 1;\r\n        min-width: 300px;\r\n        background: #fdf6e6;\r\n        border-radius: 0.6rem;\r\n        padding: 1.5rem;\r\n        box-shadow: inset 0 1px 5px rgba(0,0,0,0.2);\r\n        border: 1px solid #8c6e4e;\r\n        color: #3b2f2f;\r\n    }\r\n    .dm-player-stats-panel h4, .dm-player-deck-panel h4, .dm-player-collection-panel h4 { /* Added .dm-player-collection-panel */\r\n        font-family: 'Cinzel', serif;\r\n        font-size: 1.3rem;\r\n        margin-top: 0;\r\n        margin-bottom: 1rem;\r\n        color: #3b2f2f;\r\n        text-align: center;\r\n    }\r\n    .dm-player-stats-panel p {\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    .dm-player-stats-panel span {\r\n        font-weight: bold;\r\n        color: #4a6d8c;\r\n    }\r\n    \r\n    /* DM's player deck/collection cards are smaller */\r\n    .dm-player-deck-panel .card-list,\r\n    .dm-player-collection-panel .card-list {\r\n        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); /* Smaller cards for DM view */\r\n    }\r\n\r\n    /* New style for scrollable collection panel */\r\n    .dm-player-collection-panel {\r\n        max-height: 500px; /* Fixed height for scrolling */\r\n        overflow-y: auto; /* Enable vertical scrolling */\r\n        min-width: 320px; /* Ensure it doesn't get too small */\r\n        flex: 1; /* Allow it to grow, but respect max-height */\r\n    }\r\n\r\n    .dm-distribution-controls {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 1rem;\r\n        margin-top: 2rem;\r\n        padding-top: 1.5rem;\r\n        border-top: 1px dashed #8c6e4e;\r\n        align-items: center;\r\n    }\r\n\r\n    .dm-distribution-controls .input-group {\r\n        display: flex;\r\n        gap: 0.8rem;\r\n        align-items: center;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n    }\r\n\r\n    .dm-card-distribution-list {\r\n        margin-top: 1rem;\r\n        max-height: 400px; /* Constrain height */\r\n        overflow-y: auto; /* Enable scrolling */\r\n        border: 1px solid #8c6e4e;\r\n        border-radius: 0.6rem;\r\n        background: #d3c4a2;\r\n        padding: 0.5rem;\r\n    }\r\n    .dm-card-distribution-list li {\r\n        cursor: default; /* No hover effect for these list items */\r\n        background: #e9dcc9;\r\n    }\r\n    .dm-card-distribution-list li .card-name {\r\n        margin: 0;\r\n        font-size: 1rem;\r\n        font-weight: normal;\r\n    }\r\n    .dm-card-distribution-list li button {\r\n        padding: 0.4rem 0.8rem;\r\n        font-size: 0.8rem;\r\n    }\r\n\r\n    /* Player Notification Area specific styling */\r\n    .player-notification-area {\r\n        flex-direction: column;\r\n        align-items: stretch;\r\n        margin-top: 1rem;\r\n        padding-top: 1rem;\r\n        border-top: 1px solid #8c6e4e;\r\n        background: #a38b6d; /* Lighter gold for notifications */\r\n        color: #3b2f2f;\r\n    }\r\n    .player-notification-area h3 {\r\n        color: #3b2f2f;\r\n        margin-bottom: 1rem;\r\n        font-family: 'Cinzel', serif;\r\n        text-align: center;\r\n    }\r\n    .player-notification-area li {\r\n        background: #fdf6e6; /* Parchment background for individual notifications */\r\n        border: 1px solid #8c6e4e;\r\n        margin-bottom: 0.8rem;\r\n    }\r\n    .player-notification-area li button {\r\n        padding: 0.6rem 1rem;\r\n        font-size: 0.9rem;\r\n    }\r\n    .player-notification-area .notification-text {\r\n        font-weight: bold;\r\n        flex-grow: 1;\r\n        margin-right: 1rem;\r\n    }\r\n\r\n\r\n\r\n    /* DM Toggle Specific Styles */\r\n    .dm-toggle-container {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 0.5rem;\r\n        margin-left: 1rem; /* Adjust positioning as needed */\r\n        font-family: 'Merriweather', serif;\r\n        color: #f5f5dc;\r\n        font-weight: bold;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .dm-toggle-switch {\r\n        position: relative;\r\n        display: inline-block;\r\n        width: 48px; /* Wider switch */\r\n        height: 28px; /* Taller switch */\r\n    }\r\n\r\n    .dm-toggle-switch input {\r\n        opacity: 0;\r\n        width: 0;\r\n        height: 0;\r\n    }\r\n\r\n    .dm-slider {\r\n        position: absolute;\r\n        cursor: pointer;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        background-color: #ccc;\r\n        transition: 0.4s;\r\n        border-radius: 28px; /* More rounded */\r\n    }\r\n\r\n    .dm-slider:before {\r\n        position: absolute;\r\n        content: \"\";\r\n        height: 20px; /* Smaller circle */\r\n        width: 20px;\r\n        left: 4px;\r\n        bottom: 4px;\r\n        background-color: white;\r\n        transition: 0.4s;\r\n        border-radius: 50%;\r\n    }\r\n\r\n    input:checked + .dm-slider {\r\n        background-color: #8c6e4e; /* Gold when checked */\r\n    }\r\n\r\n    input:focus + .dm-slider {\r\n        box-shadow: 0 0 1px #8c6e4e;\r\n    }\r\n\r\n    input:checked + .dm-slider:before {\r\n        transform: translateX(20px); /* Move further */\r\n    }\r\n\r\n    /* --- SCROLLBAR THEMEING --- */\r\n    /* For Webkit browsers (Chrome, Safari, Edge) */\r\n    ::-webkit-scrollbar {\r\n        width: 12px; /* Width of the vertical scrollbar */\r\n        height: 12px; /* Height of the horizontal scrollbar */\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background: #5a4b4b; /* Darker track color, matching muted stone */\r\n        border-radius: 10px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #8c6e4e; /* Gold/bronze thumb color */\r\n        border-radius: 10px;\r\n        border: 2px solid #6a5d5a; /* Slightly darker border for depth */\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: #a38b6d; /* Lighter gold on hover */\r\n    }\r\n\r\n    /* For Firefox */\r\n    html {\r\n        scrollbar-width: thin; /* 'auto' | 'thin' | 'none' */\r\n        scrollbar-color: #8c6e4e #5a4b4b; /* thumb-color track-color */\r\n    }\r\n\r\n    /* New styles for player filters/sort/search section */\r\n    .player-filters-sort-search {\r\n        display: flex;\r\n        flex-direction: row; /* Horizontal layout for filters */\r\n        gap: 1rem;\r\n        align-items: center;\r\n        margin-bottom: 2rem;\r\n        flex-wrap: wrap; /* Allow wrapping on smaller screens */\r\n    }\r\n    .player-filters-sort-search label {\r\n        color: #f5f5dc;\r\n        font-family: 'Merriweather', serif;\r\n        font-weight: bold;\r\n        white-space: nowrap;\r\n    }\r\n    .player-filters-sort-search input,\r\n    .player-filters-sort-search select {\r\n        flex-grow: 0; /* Don't force these to grow too much */\r\n        width: auto;\r\n        min-width: 120px;\r\n    }\r\n\r\n    /* Styles for card notes textarea */\r\n    .card-note-textarea {\r\n        width: 100%;\r\n        min-height: 80px;\r\n        padding: 0.5rem;\r\n        border-radius: 0.4rem;\r\n        border: 1px solid #d3c4a2;\r\n        background: #fdf6e6;\r\n        color: #3b2f2f;\r\n        font-family: 'Merriweather', serif;\r\n        font-size: 0.9rem;\r\n        margin-top: 0.8rem;\r\n        resize: vertical; /* Allow vertical resizing */\r\n    }\r\n    .card-note-textarea:focus {\r\n        outline: none;\r\n        border-color: #8c6e4e; /* Gold highlight on focus */\r\n        box-shadow: 0 0 0 2px rgba(140, 110, 78, 0.4);\r\n    }\r\n\r\n\r\n    /* Responsive Adjustments (ensure DM screen is also responsive) */\r\n    @media (max-width: 768px) {\r\n        .dm-sub-nav {\r\n            flex-direction: column;\r\n        }\r\n        .dm-sub-nav-item {\r\n            border-bottom: none;\r\n            border-right: 3px solid transparent;\r\n        }\r\n        .dm-sub-nav-item.active {\r\n            border-bottom-color: transparent;\r\n            border-right-color: #a38b6d;\r\n        }\r\n        .dm-player-view-details {\r\n            flex-direction: column;\r\n        }\r\n        .login-container {\r\n            flex-direction: column;\r\n            align-items: stretch;\r\n        }\r\n        .dm-toggle-container {\r\n            margin-left: 0;\r\n            margin-top: 1rem;\r\n            justify-content: center;\r\n            order: -1; /* Move toggle to top in mobile view */\r\n        }\r\n        .login-container input {\r\n            max-width: 100%;\r\n        }\r\n        .dm-distribution-controls .input-group {\r\n            flex-direction: column;\r\n        }\r\n        .dm-section-panel input, .dm-section-panel select {\r\n             max-width: 100%;\r\n        }\r\n        .card-collection-panel { /* Adjust player collection panel for mobile */\r\n            max-height: 500px;\r\n        }\r\n        .player-filters-sort-search {\r\n            flex-direction: column;\r\n            align-items: stretch;\r\n            gap: 0.8rem;\r\n        }\r\n        .player-filters-sort-search input,\r\n        .player-filters-sort-search select {\r\n            max-width: 100%;\r\n        }\r\n    }\r\n    @media (max-width: 480px) {\r\n        .dm-sub-nav-item {\r\n            padding: 0.8rem 1rem;\r\n            font-size: 0.85rem;\r\n        }\r\n    }\r\n`;\r\n\r\nfunction App() {\r\n    // --- State Variables ---\r\n    const [allCards, setAllCards] = useState([]); // All cards fetched from the backend (master list)\r\n    const [characterLevel, setCharacterLevel] = useState(1);\r\n    const [wisMod, setWisMod] = useState(0);\r\n    const [intMod, setIntMod] = useState(0);\r\n    const [chaMod, setChaMod] = useState(0);\r\n    const [maxDeckSize, setMaxDeckSize] = useState(0);\r\n    const [activeDeckInstances, setActiveDeckInstances] = useState([]); // Cards currently in the player's ACTIVE deck (persistent instances)\r\n    const [unlockedCollectionIds, setUnlockedCollectionIds] = useState([]); // IDs of all UNIQUE card types the player HAS UNLOCKED (owned pool)\r\n    const [error, setError] = useState(''); // General error messages for UI\r\n\r\n    // New states for login/auth\r\n    const [playerId, setPlayerId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [message, setMessage] = useState({ text: '', type: '' });\r\n    const [loading, setLoading] = useState(true); // Loading state for initial data fetch of allCards\r\n\r\n    // New state for tab management\r\n    const [activeTab, setActiveTab] = useState('available'); // 'available', 'deck', or 'dm_screen'\r\n\r\n    // State for newly acquired cards from booster packs\r\n    const [newlyAcquiredCards, setNewlyAcquiredCards] = useState([]);\r\n    const [lastOpenedPackType, setLastOpenedPackType] = useState('');\r\n    const [prePackUnlockedIds, setPrePackUnlockedIds] = useState([]); // Store state before opening pack for duplicate check\r\n\r\n    // --- DM/SESSION STATES ---\r\n    const [isDMMode, setIsDMMode] = useState(false); // New state for DM mode toggle\r\n    const [sessionNameInput, setSessionNameInput] = useState('');\r\n    const [sessionCodeInput, setSessionCodeInput] = useState('');\r\n    const [dmSessions, setDmSessions] = useState([]); // Sessions created by THIS DM\r\n    const [selectedDmSession, setSelectedDmSession] = useState(null); // The session the DM is currently viewing\r\n    const [playersInSelectedDmSession, setPlayersInSelectedDmSession] = useState([]); // Players in the selected DM session\r\n    const [selectedPlayerForDMView, setSelectedPlayerForDMView] = useState(null); // The specific player DM is inspecting\r\n    const [selectedPlayerDMData, setSelectedPlayerDMData] = useState(null); // Full card data for the inspected player\r\n    const [activeDmTab, setActiveDmTab] = useState('my_sessions'); // 'create_session', 'my_sessions', 'view_player'\r\n    const [selectedPackTypeToGive, setSelectedPackTypeToGive] = useState('Common Pack'); // For DM giving packs\r\n    const [searchCardInputForDM, setSearchCardInputForDM] = useState(''); // For DM searching cards to give\r\n\r\n    // --- NEW PENDING ITEM STATES FOR PLAYER ---\r\n    const [pendingBoosterPacks, setPendingBoosterPacks] = useState([]);\r\n    const [pendingCards, setPendingCards] = useState([]);\r\n\r\n    // --- NEW: Player Available Spells Filter/Sort/Search States ---\r\n    const [filterType, setFilterType] = useState('All');\r\n    const [filterRarity, setFilterRarity] = useState('All');\r\n    const [sortOrder, setSortOrder] = useState('name-asc'); // e.g., 'name-asc', 'name-desc', 'rarity-asc'\r\n    const [searchAvailableCards, setSearchAvailableCards] = useState('');\r\n\r\n\r\n    // --- Helper function to display messages ---\r\n    const showMessage = useCallback((text, type) => {\r\n        setMessage({ text, type });\r\n        // Clear message after 5 seconds for info, 3 seconds for others\r\n        const duration = type === 'info' ? 5000 : 3000;\r\n        setTimeout(() => setMessage({ text: '', type: '' }), duration);\r\n    }, []);\r\n\r\n    // --- API Call: Create Account ---\r\n    const handleCreateAccount = async () => {\r\n        if (!playerId || !password) {\r\n            showMessage('Player ID and password are required to create an account.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/deck/create`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to create account.');\r\n            }\r\n            \r\n            showMessage('Account created successfully! You can now log in.', 'success');\r\n        } catch (err) {\r\n            console.error('Error creating account:', err);\r\n            showMessage(`Failed to create account: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- API Call: Login and Load Deck ---\r\n    const handleLoginAndLoadDeck = async () => {\r\n        if (!playerId || !password) {\r\n            showMessage('Player ID and password are required to log in.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/deck/login`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Authentication failed.');\r\n            }\r\n\r\n            // Load data from backend upon successful login\r\n            // Ensure `current_uses` and `notes` are initialized if they don't exist in saved data\r\n            setActiveDeckInstances((data.active_deck_instances || []).map(card => ({\r\n                ...card,\r\n                current_uses: card.current_uses !== undefined ? card.current_uses : card.default_uses_per_rest,\r\n                notes: card.notes || '' // Initialize notes if not present\r\n            })));\r\n            setUnlockedCollectionIds(data.unlocked_collection_ids || []); // Load unlocked card IDs (now includes duplicates)\r\n            setCharacterLevel(data.character_level !== undefined ? data.character_level : 1);\r\n            setWisMod(data.wis_mod !== undefined ? data.wis_mod : 0);\r\n            setIntMod(data.int_mod !== undefined ? data.int_mod : 0);\r\n            setChaMod(data.cha_mod !== undefined ? data.cha_mod : 0);\r\n            setPendingBoosterPacks(data.pending_booster_packs || []); // Load pending booster packs\r\n            setPendingCards(data.pending_cards || []); // Load pending cards\r\n            setIsAuthenticated(true);\r\n            setActiveTab('deck'); // Automatically switch to the deck tab after login\r\n            \r\n            showMessage('Login successful! Deck and unlocked cards loaded.', 'success');\r\n        } catch (err) {\r\n            setIsAuthenticated(false);\r\n            console.error('Error logging in:', err);\r\n            showMessage(`Failed to load deck: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- API Call: Save Deck ---\r\n    const handleSaveDeck = async () => {\r\n        if (!isAuthenticated) {\r\n            showMessage('You must be logged in to save your deck.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/deck/save`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    player_id: playerId,\r\n                    password: password, // Send password for re-validation on backend\r\n                    active_deck_instances: activeDeckInstances, // Save active deck instances (includes current_uses and notes)\r\n                    unlocked_collection_ids: unlockedCollectionIds, // Save unlocked card IDs (now includes duplicates)\r\n                    character_level: characterLevel,\r\n                    wis_mod: wisMod,\r\n                    int_mod: intMod,\r\n                    cha_mod: chaMod,\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to save deck.');\r\n            }\r\n\r\n            showMessage('Deck and unlocked cards saved successfully!', 'success');\r\n        } catch (err) {\r\n            console.error('Error saving deck:', err);\r\n            showMessage(`Failed to save deck: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- Effect to Fetch All Cards on Component Mount ---\r\n    useEffect(() => {\r\n        const fetchAllCards = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const cardsResponse = await fetch(`${API_BASE_URL}/cards`);\r\n                if (!cardsResponse.ok) {\r\n                    throw new Error(`HTTP error fetching cards! status: ${cardsResponse.status}`);\r\n                }\r\n                const cardsData = await cardsResponse.json();\r\n                setAllCards(cardsData);\r\n            } catch (err) {\r\n                console.error('Error fetching initial data:', err);\r\n                showMessage('Failed to fetch initial data: ' + err.message, 'error');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchAllCards();\r\n    }, [showMessage]); // Empty dependency array, this effect runs only once on mount\r\n\r\n    // --- Effect to Calculate Max Deck Size when Character Stats Change ---\r\n    useEffect(() => {\r\n        const calculateDeckSize = async () => {\r\n            setError(''); // Clear previous errors related to deck size\r\n            try {\r\n                const response = await fetch(`${API_BASE_URL}/calculate_deck_size`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        character_level: characterLevel,\r\n                        wis_mod: wisMod,\r\n                        int_mod: intMod,\r\n                        cha_mod: chaMod,\r\n                    }),\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setMaxDeckSize(data.max_deck_size);\r\n            } catch (err) {\r\n                setError('Failed to calculate deck size: ' + err.message);\r\n                console.error('Error calculating deck size:', err);\r\n            }\r\n        };\r\n\r\n        if (!isNaN(characterLevel) && !isNaN(wisMod) && !isNaN(intMod) && !isNaN(chaMod)) {\r\n            calculateDeckSize();\r\n        }\r\n    }, [characterLevel, wisMod, intMod, chaMod]);\r\n\r\n    // --- Booster Pack Logic: Open a new pack (Player initiated) ---\r\n    const handleOpenBoosterPack = async () => {\r\n        if (!isAuthenticated) {\r\n            showMessage(\"You must be logged in to open booster packs.\", \"error\");\r\n            return;\r\n        }\r\n        setLoading(true); // Indicate loading while opening pack\r\n        setNewlyAcquiredCards([]); // Clear previous new cards display\r\n        setLastOpenedPackType('');\r\n        setPrePackUnlockedIds(unlockedCollectionIds); // Store current collection for duplicate check\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/deck/open_booster`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password }), // Backend determines pack size\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to open booster pack.');\r\n            }\r\n\r\n            setLastOpenedPackType(data.pack_type);\r\n\r\n            if (data.new_cards && data.new_cards.length > 0) {\r\n                // Update the unlockedCollectionIds state with the new IDs (now including duplicates)\r\n                setUnlockedCollectionIds(data.updated_unlocked_collection_ids || []);\r\n                setNewlyAcquiredCards(data.new_cards); // Store new cards for display\r\n                showMessage(`You opened a ${data.pack_type} and acquired ${data.new_cards.length} cards!`, 'success');\r\n            } else {\r\n                showMessage(data.message || \"No new cards were found in the booster pack.\", 'info');\r\n            }\r\n        } catch (err) {\r\n            console.error('Error opening booster pack:', err);\r\n            showMessage(`Failed to open booster pack: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- Player: Open a pending booster pack ---\r\n    const handleOpenPendingBooster = async () => {\r\n        if (!isAuthenticated || pendingBoosterPacks.length === 0) {\r\n            showMessage('No pending booster packs to open.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        setNewlyAcquiredCards([]); // Clear previous new cards display\r\n        setLastOpenedPackType('');\r\n        setPrePackUnlockedIds(unlockedCollectionIds); // Store current collection for duplicate check\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/player/open_pending_booster`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password }),\r\n            });\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to open pending booster pack.');\r\n            }\r\n\r\n            setLastOpenedPackType(data.pack_type);\r\n            setUnlockedCollectionIds(data.updated_unlocked_collection_ids || []);\r\n            setPendingBoosterPacks(data.updated_pending_booster_packs || []);\r\n            setNewlyAcquiredCards(data.new_cards || []);\r\n            showMessage(`You opened a ${data.pack_type} and acquired ${data.new_cards.length} cards!`, 'success');\r\n        } catch (err) {\r\n            console.error('Error opening pending booster pack:', err);\r\n            showMessage(`Failed to open pending booster pack: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- Player: Accept a pending card ---\r\n    const handleAcceptPendingCard = async (cardIdToAccept) => {\r\n        if (!isAuthenticated || !cardIdToAccept) {\r\n            showMessage('No pending card selected or you are not logged in.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/player/accept_pending_card`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password, card_id: cardIdToAccept }),\r\n            });\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to accept pending card.');\r\n            }\r\n            setUnlockedCollectionIds(data.updated_unlocked_collection_ids || []);\r\n            setPendingCards(data.updated_pending_cards || []);\r\n            showMessage(`You accepted \"${data.card_name}\" into your collection!`, 'success');\r\n        } catch (err) {\r\n            console.error('Error accepting pending card:', err);\r\n            showMessage(`Failed to accept pending card: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    // --- Deck Building Logic: Add Card ---\r\n    const handleAddCardToDeck = useCallback((card) => {\r\n        if (!isAuthenticated) {\r\n            showMessage(\"You must be logged in to build a deck.\", \"error\");\r\n            return;\r\n        }\r\n        if (activeDeckInstances.length >= maxDeckSize) {\r\n            showMessage('Deck is full! Remove cards to add new ones.', 'error');\r\n            return;\r\n        }\r\n        \r\n        const ownedCopiesOfThisCard = unlockedCollectionIds.filter(id => id === card.id).length;\r\n        const copiesInActiveDeck = activeDeckInstances.filter(c => c.id === card.id).length;\r\n\r\n        if (copiesInActiveDeck >= ownedCopiesOfThisCard) {\r\n            showMessage(`You have already added all owned copies of ${card.name} to your deck. Open more booster packs to get more!`, 'error');\r\n            return;\r\n        }\r\n\r\n        const cantripCountInDeck = activeDeckInstances.filter(c => c.type === 'Cantrip').length;\r\n        if (card.type !== 'Cantrip' && cantripCountInDeck === 0 && activeDeckInstances.length === 0) {\r\n             showMessage('Your deck must contain at least one Cantrip! Add a Cantrip first.', 'error');\r\n             return;\r\n        }\r\n\r\n        // Add a new instance of the card to the active deck\r\n        setActiveDeckInstances(prev => [...prev, {\r\n            ...card,\r\n            instance_id: uuidv4(), // Assign a unique ID for this specific copy in the active deck\r\n            current_uses: card.default_uses_per_rest,\r\n            notes: '' // Initialize notes for new card instances\r\n        }]);\r\n        showMessage('Card added to your deck!', 'success');\r\n    }, [isAuthenticated, maxDeckSize, activeDeckInstances, unlockedCollectionIds, showMessage]);\r\n\r\n    // --- Deck Building Logic: Remove Card ---\r\n    const handleRemoveCardFromDeck = useCallback((instance_id) => {\r\n        const updatedDeck = activeDeckInstances.filter(card => card.instance_id !== instance_id);\r\n        const cantripCount = updatedDeck.filter(c => c.type === 'Cantrip').length;\r\n\r\n        if (cantripCount === 0 && updatedDeck.length > 0) {\r\n            showMessage('Your deck must contain at least one Cantrip! You cannot remove the last one.', 'error');\r\n            return;\r\n        }\r\n        setActiveDeckInstances(updatedDeck);\r\n        showMessage('Card removed from deck.', 'success');\r\n    }, [activeDeckInstances, showMessage]);\r\n\r\n    // --- Card Usage Logic: Mark Card as Used ---\r\n    const handleMarkCardUsed = useCallback(async (instance_id) => {\r\n        const cardToUse = activeDeckInstances.find(card => card.instance_id === instance_id);\r\n        if (!cardToUse) return;\r\n\r\n        if (cardToUse.current_uses > 0) {\r\n            setActiveDeckInstances(prev =>\r\n                prev.map(card =>\r\n                    card.instance_id === instance_id ? { ...card, current_uses: card.current_uses - 1 } : card\r\n                )\r\n            );\r\n\r\n            // Notify backend about the card usage for logging purposes.\r\n            try {\r\n                const response = await fetch(`${API_BASE_URL}/card_used`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        name: cardToUse.name, // Use 'name' to match backend's 'card_name' expectation\r\n                        type: cardToUse.type, // Use 'type' to match backend's 'card_type' expectation\r\n                        deck_card_id: cardToUse.instance_id\r\n                    }),\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                console.log('Backend notification:', data.message);\r\n                console.log('Simulated System Log Entry from Backend:', data.log_entry);\r\n            } catch (err) {\r\n                showMessage('Failed to notify backend of card usage for logging: ' + err.message, 'error');\r\n                console.error('Error sending card used notification:', err);\r\n            }\r\n        } else {\r\n            showMessage(`\"${cardToUse.name}\" has no uses left! It needs a long rest.`, 'error');\r\n        }\r\n    }, [activeDeckInstances, showMessage]);\r\n\r\n    // --- Card Usage Logic: Reset Card Uses (Long Rest) ---\r\n    const handleResetCardUses = useCallback((instance_id) => {\r\n        setActiveDeckInstances(prev =>\r\n            prev.map(card =>\r\n                card.instance_id === instance_id ? { ...card, current_uses: card.default_uses_per_rest } : card\r\n            )\r\n        );\r\n        showMessage('Card uses reset!', 'success');\r\n    }, [showMessage]);\r\n\r\n    // --- NEW: Handle changes to card notes in the active deck ---\r\n    const handleChangeCardNote = useCallback((instance_id, newNote) => {\r\n        setActiveDeckInstances(prev =>\r\n            prev.map(card =>\r\n                card.instance_id === instance_id ? { ...card, notes: newNote } : card\r\n            )\r\n        );\r\n    }, []);\r\n\r\n    // Helper to map card IDs from player data back to full card objects from allCards\r\n    const getFullCardDetails = (cardId) => {\r\n        return allCards.find(card => card.id === cardId);\r\n    };\r\n\r\n    // --- Player: Filtered & Sorted Available Cards (Memoized) ---\r\n    const uniqueUnlockedCards = useMemo(() => {\r\n        // First, get all unique cards the player has unlocked, with their counts\r\n        const uniqueCardsMap = allCards\r\n            .filter(card => unlockedCollectionIds.includes(card.id))\r\n            .reduce((acc, card) => {\r\n                if (!acc[card.id]) {\r\n                    const count = unlockedCollectionIds.filter(id => id === card.id).length;\r\n                    acc[card.id] = { ...card, owned_copies: count };\r\n                }\r\n                return acc;\r\n            }, {});\r\n        return Object.values(uniqueCardsMap);\r\n    }, [allCards, unlockedCollectionIds]);\r\n\r\n    const filteredAndSortedAvailableCards = useMemo(() => {\r\n        let filteredCards = [...uniqueUnlockedCards]; // Start with the unique unlocked cards\r\n\r\n        // Apply search filter\r\n        if (searchAvailableCards) {\r\n            const searchTerm = searchAvailableCards.toLowerCase();\r\n            filteredCards = filteredCards.filter(card =>\r\n                card.name.toLowerCase().includes(searchTerm) ||\r\n                card.type.toLowerCase().includes(searchTerm) ||\r\n                card.rarity.toLowerCase().includes(searchTerm) ||\r\n                (card.description && card.description.toLowerCase().includes(searchTerm)) ||\r\n                (card.effect && card.effect.toLowerCase().includes(searchTerm))\r\n            );\r\n        }\r\n\r\n        // Apply type filter\r\n        if (filterType !== 'All') {\r\n            filteredCards = filteredCards.filter(card => card.type === filterType);\r\n        }\r\n\r\n        // Apply rarity filter\r\n        if (filterRarity !== 'All') {\r\n            filteredCards = filteredCards.filter(card => card.rarity === filterRarity);\r\n        }\r\n\r\n        // Apply sorting\r\n        filteredCards.sort((a, b) => {\r\n            switch (sortOrder) {\r\n                case 'name-asc':\r\n                    return a.name.localeCompare(b.name);\r\n                case 'name-desc':\r\n                    return b.name.localeCompare(a.name);\r\n                case 'rarity-asc':\r\n                    // Assuming rarity has an inherent order, or you define one\r\n                    const rarityOrder = { 'Common': 1, 'Uncommon': 2, 'Rare': 3, 'Legendary': 4 };\r\n                    return (rarityOrder[a.rarity] || 0) - (rarityOrder[b.rarity] || 0);\r\n                case 'rarity-desc':\r\n                    const rarityOrderDesc = { 'Common': 1, 'Uncommon': 2, 'Rare': 3, 'Legendary': 4 };\r\n                    return (rarityOrderDesc[b.rarity] || 0) - (rarityOrderDesc[a.rarity] || 0);\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n\r\n        return filteredCards;\r\n    }, [uniqueUnlockedCards, searchAvailableCards, filterType, filterRarity, sortOrder]);\r\n\r\n\r\n    // Extract unique card types and rarities for filter options\r\n    const uniqueCardTypes = useMemo(() => ['All', ...new Set(allCards.map(card => card.type))], [allCards]);\r\n    const uniqueCardRarities = useMemo(() => ['All', ...new Set(allCards.map(card => card.rarity))], [allCards]);\r\n\r\n    // --- DM/Session Functions (Corrected to be within component scope) ---\r\n\r\n    // Effect to fetch DM sessions whenever DM mode is active and player ID is set\r\n    const fetchMyDMSessions = useCallback(async () => {\r\n        if (!isAuthenticated || !playerId || !password) return;\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/dm/my_sessions`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password }),\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to fetch your sessions.');\r\n            }\r\n            // Fetch player counts for each session here\r\n            const sessionsWithPlayerCounts = await Promise.all((data.sessions || []).map(async (session) => {\r\n                const playersResponse = await fetch(`${API_BASE_URL}/dm/sessions/${session.session_id}/players`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ player_id: playerId, password: password }),\r\n                });\r\n                const playersData = await playersResponse.json();\r\n                return {\r\n                    ...session,\r\n                    player_count: playersData.players ? playersData.players.length : 0\r\n                };\r\n            }));\r\n            setDmSessions(sessionsWithPlayerCounts);\r\n        } catch (err) {\r\n            console.error('Error fetching DM sessions or player counts:', err);\r\n            showMessage(`Failed to fetch DM sessions: ${err.message}`, 'error');\r\n            setDmSessions([]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, playerId, password, showMessage]);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated && isDMMode && playerId && activeDmTab === 'my_sessions') {\r\n            fetchMyDMSessions();\r\n        }\r\n    }, [isAuthenticated, isDMMode, playerId, activeDmTab, fetchMyDMSessions]);\r\n\r\n\r\n    const handleCreateSession = useCallback(async () => { // Made useCallback\r\n        if (!playerId || !password) {\r\n            showMessage('You must be logged in to create a session.', 'error');\r\n            return;\r\n        }\r\n        if (!sessionNameInput) {\r\n            showMessage('Session name is required.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/dm/create_session`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password, session_name: sessionNameInput }),\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to create session.');\r\n            }\r\n            showMessage(`Session \"${data.session_name}\" created with code: ${data.session_code}`, 'success');\r\n            setSessionNameInput(''); // Clear input\r\n            fetchMyDMSessions(); // Refresh DM's session list\r\n        } catch (err) {\r\n            console.error('Error creating session:', err);\r\n            showMessage(`Failed to create session: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [playerId, password, sessionNameInput, fetchMyDMSessions, showMessage]); // Dependencies\r\n\r\n    const handleJoinSession = useCallback(async () => { // Made useCallback\r\n        if (!isAuthenticated) { // Players must be authenticated to join\r\n            showMessage('You must be logged in to join a session.', 'error');\r\n            return;\r\n        }\r\n        if (isDMMode) { // DMs cannot join sessions as players\r\n            showMessage('You are in DM mode. Switch to Player mode to join a session.', 'error');\r\n            return;\r\n        }\r\n        if (!sessionCodeInput) {\r\n            showMessage('Session code is required.', 'error');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/player/join_session`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password, session_code: sessionCodeInput }),\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to join session.');\r\n            }\r\n            showMessage(data.message, 'success');\r\n            setSessionCodeInput(''); // Clear input\r\n        } catch (err) {\r\n            console.error('Error joining session:', err);\r\n            showMessage(`Failed to join session: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, isDMMode, playerId, password, sessionCodeInput, showMessage]); // Dependencies\r\n\r\n    const fetchPlayersInSession = useCallback(async (sessionId) => {\r\n        if (!isAuthenticated || !playerId || !password || !sessionId) return;\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/dm/sessions/${sessionId}/players`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password }),\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to fetch players for this session.');\r\n            }\r\n            setPlayersInSelectedDmSession(data.players || []);\r\n        } catch (err) {\r\n            console.error('Error fetching players in session:', err);\r\n            showMessage(`Failed to fetch players: ${err.message}`, 'error');\r\n            setPlayersInSelectedDmSession([]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [isAuthenticated, playerId, password, showMessage]);\r\n\r\n    const handleSelectDmSession = useCallback((session) => { // Made useCallback\r\n        setSelectedDmSession(session);\r\n        fetchPlayersInSession(session.session_id);\r\n        setSelectedPlayerForDMView(null); // Clear any previously selected player\r\n        setSelectedPlayerDMData(null);\r\n        setActiveDmTab('my_sessions'); // Stay on my sessions tab, but show players for selected session\r\n    }, [fetchPlayersInSession]); // Dependency\r\n\r\n    const handleViewPlayerCards = useCallback((player_id_to_view) => { // Made useCallback\r\n        const player = playersInSelectedDmSession.find(p => p.player_id === player_id_to_view);\r\n        if (player) {\r\n            setSelectedPlayerForDMView(player.player_id);\r\n            setSelectedPlayerDMData(player.data); // This is the full player data including deck/collection\r\n            setActiveDmTab('view_player'); // Switch to a sub-tab to view player details\r\n        } else {\r\n            showMessage(\"Could not find player data for viewing.\", \"error\");\r\n        }\r\n    }, [playersInSelectedDmSession, showMessage]); // Dependency\r\n\r\n    const handleGiveSpecificPack = useCallback(async () => { // Made useCallback\r\n        if (!selectedPlayerForDMView || !selectedPackTypeToGive) {\r\n            showMessage('Select a player and a pack type.', 'error');\r\n            return;\r\n        }\r\n        if (!playerId || !password) {\r\n            showMessage('DM must be logged in to give packs.', 'error');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/dm/give_booster`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    dm_player_id: playerId,\r\n                    password: password,\r\n                    target_player_id: selectedPlayerForDMView,\r\n                    pack_type: selectedPackTypeToGive\r\n                }),\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to give booster pack.');\r\n            }\r\n            showMessage(data.message, 'success'); // DM sees confirmation\r\n\r\n            // Re-fetch player data for DM to reflect pending item\r\n            const updatedPlayerResponse = await fetch(`${API_BASE_URL}/dm/sessions/${selectedDmSession.session_id}/players`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password }),\r\n            });\r\n            const updatedPlayersData = await updatedPlayerResponse.json();\r\n            const updatedPlayer = updatedPlayersData.players.find(p => p.player_id === selectedPlayerForDMView);\r\n            if (updatedPlayer) {\r\n                setSelectedPlayerDMData(updatedPlayer.data); // Update DM's view of player's data\r\n            }\r\n            \r\n        } catch (err) {\r\n            console.error('Error giving booster pack:', err);\r\n            showMessage(`Failed to give booster pack: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [selectedPlayerForDMView, selectedPackTypeToGive, playerId, password, selectedDmSession, showMessage]); // Dependencies\r\n\r\n    const handleGiveSpecificCard = useCallback(async (cardId) => { // Made useCallback\r\n        if (!selectedPlayerForDMView || !cardId) {\r\n            showMessage('Select a player and a card to give.', 'error');\r\n            return;\r\n        }\r\n        if (!playerId || !password) {\r\n            showMessage('DM must be logged in to give cards.', 'error');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/dm/give_card`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    dm_player_id: playerId,\r\n                    password: password,\r\n                    target_player_id: selectedPlayerForDMView,\r\n                    card_id: cardId\r\n                }),\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to give card.');\r\n            }\r\n            showMessage(data.message, 'success'); // DM sees confirmation\r\n\r\n            // Re-fetch player data for DM to reflect pending item\r\n            const updatedPlayerResponse = await fetch(`${API_BASE_URL}/dm/sessions/${selectedDmSession.session_id}/players`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password }),\r\n            });\r\n            const updatedPlayersData = await updatedPlayerResponse.json();\r\n            const updatedPlayer = updatedPlayersData.players.find(p => p.player_id === selectedPlayerForDMView);\r\n            if (updatedPlayer) {\r\n                setSelectedPlayerDMData(updatedPlayer.data); // Update DM's view of player's data\r\n            }\r\n\r\n        } catch (err) {\r\n            console.error('Error giving card:', err);\r\n            showMessage(`Failed to give card: ${err.message}`, 'error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [selectedPlayerForDMView, playerId, password, selectedDmSession, showMessage]); // Dependencies\r\n\r\n\r\n    // Filter all cards for DM distribution search\r\n    const filteredAllCardsForDM = allCards.filter(card => \r\n        card.name.toLowerCase().includes(searchCardInputForDM.toLowerCase()) ||\r\n        card.type.toLowerCase().includes(searchCardInputForDM.toLowerCase()) ||\r\n        card.rarity.toLowerCase().includes(searchCardInputForDM.toLowerCase())\r\n    );\r\n\r\n    // --- NEW: Function to fetch pending items ---\r\n    const fetchPendingItems = useCallback(async () => {\r\n        if (!isAuthenticated || !playerId || !password || isDMMode) return; // Only fetch if logged in, in player mode\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/player/pending_items`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ player_id: playerId, password: password }),\r\n            });\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || 'Failed to fetch pending items.');\r\n            }\r\n\r\n            // Check if there are new pending items\r\n            const newPacks = data.pending_booster_packs || [];\r\n            const newCards = data.pending_cards || [];\r\n\r\n            if (newPacks.length > pendingBoosterPacks.length || newCards.length > pendingCards.length) {\r\n                showMessage('You have new items from your DM!', 'info');\r\n            }\r\n\r\n            setPendingBoosterPacks(newPacks);\r\n            setPendingCards(newCards);\r\n\r\n        } catch (err) {\r\n            console.error('Error fetching pending items:', err);\r\n            // Don't show an error message for every failed poll to avoid spamming the user\r\n        }\r\n    }, [isAuthenticated, playerId, password, isDMMode, pendingBoosterPacks.length, pendingCards.length, showMessage]);\r\n\r\n    // --- NEW: Polling effect for pending items ---\r\n    useEffect(() => {\r\n        let intervalId;\r\n        if (isAuthenticated && !isDMMode && playerId && password) {\r\n            // Fetch immediately on login/mode switch\r\n            fetchPendingItems();\r\n            // Then set up polling every 10 seconds\r\n            intervalId = setInterval(fetchPendingItems, 10000); \r\n        }\r\n\r\n        // Cleanup function to clear the interval when component unmounts or dependencies change\r\n        return () => {\r\n            if (intervalId) {\r\n                clearInterval(intervalId);\r\n            }\r\n        };\r\n    }, [isAuthenticated, isDMMode, playerId, password, fetchPendingItems]);\r\n\r\n\r\n    // --- Main Component Render ---\r\n    return (\r\n        <>\r\n            <style>{AppStyles}</style>\r\n            <div className=\"App\">\r\n                <h1 className=\"app-title\">Spell Trading Cards Manager</h1>\r\n\r\n                {/* Login/Auth Section */}\r\n                <div className=\"login-container\">\r\n                    {/* DM Mode Toggle */}\r\n                    {isAuthenticated && ( // Only show toggle if logged in\r\n                        <div className=\"dm-toggle-container\">\r\n                            <label className=\"dm-toggle-switch\">\r\n                                <input type=\"checkbox\" checked={isDMMode} onChange={(e) => {\r\n                                    setIsDMMode(e.target.checked);\r\n                                    // When toggling, reset DM specific states and ensure appropriate tab is active\r\n                                    setSelectedDmSession(null); \r\n                                    setSelectedPlayerForDMView(null);\r\n                                    setSelectedPlayerDMData(null);\r\n                                    setActiveDmTab('my_sessions'); // Reset DM sub-tab\r\n                                    // If switching to DM mode, set main active tab to dm_screen\r\n                                    // Otherwise, set to 'available' (default player tab)\r\n                                    setActiveTab(e.target.checked ? 'dm_screen' : 'available'); \r\n                                }} />\r\n                                <span className=\"dm-slider\"></span>\r\n                            </label>\r\n                            <span>DM Mode</span>\r\n                        </div>\r\n                    )}\r\n                    \r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Player ID\"\r\n                        value={playerId}\r\n                        onChange={(e) => setPlayerId(e.target.value)}\r\n                        disabled={loading}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        disabled={loading}\r\n                    />\r\n                    <button onClick={handleLoginAndLoadDeck} disabled={loading}>Log In</button>\r\n                    <button onClick={handleCreateAccount} disabled={loading}>Create Account</button>\r\n                    {isAuthenticated && <button onClick={handleSaveDeck} disabled={loading}>Save Deck</button>}\r\n                </div>\r\n\r\n                {/* Message Box */}\r\n                {message.text && <div className={`message-box ${message.type}`}>{message.text}</div>}\r\n\r\n                {/* Conditional Rendering of Player vs. DM content */}\r\n                {!isAuthenticated ? (\r\n                    <div className=\"pre-login-message\">\r\n                        <h3>Please log in to access the Spell Card Manager.</h3>\r\n                        <p>Create an account or log in to manage your spells and game sessions!</p>\r\n                    </div>\r\n                ) : isDMMode ? (\r\n                    /* DM Screen Section (full screen when isDMMode is true) */\r\n                    <div className=\"dm-screen-container\">\r\n                        <h2 className=\"panel-title\">DM Screen</h2>\r\n\r\n                        <div className=\"dm-sub-nav\">\r\n                            <div \r\n                                className={`dm-sub-nav-item ${activeDmTab === 'create_session' ? 'active' : ''}`} \r\n                                onClick={() => { setActiveDmTab('create_session'); setSelectedDmSession(null); setSelectedPlayerForDMView(null); }}\r\n                            >\r\n                                Create Session\r\n                            </div>\r\n                            <div \r\n                                className={`dm-sub-nav-item ${activeDmTab === 'my_sessions' ? 'active' : ''}`} \r\n                                onClick={() => { setActiveDmTab('my_sessions'); setSelectedPlayerForDMView(null); }}\r\n                            >\r\n                                My Sessions\r\n                            </div>\r\n                            {selectedPlayerForDMView && (\r\n                                <div \r\n                                    className={`dm-sub-nav-item ${activeDmTab === 'view_player' ? 'active' : ''}`} \r\n                                    onClick={() => setActiveDmTab('view_player')}\r\n                                >\r\n                                    Viewing: {selectedPlayerForDMView}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* DM Create Session View */}\r\n                        {activeDmTab === 'create_session' && (\r\n                            <div className=\"dm-section-panel\">\r\n                                <h3>Create New Game Session</h3>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Session Name (e.g., 'Dragon's Breath Campaign')\"\r\n                                    value={sessionNameInput}\r\n                                    onChange={(e) => setSessionNameInput(e.target.value)}\r\n                                    disabled={loading}\r\n                                    style={{ maxWidth: '400px' }}\r\n                                />\r\n                                <button onClick={handleCreateSession} disabled={loading}>\r\n                                    Generate Session Code\r\n                                </button>\r\n                                <p className=\"empty-message\">\r\n                                    Once created, share the 6-character session code with your players!\r\n                                </p>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* DM My Sessions & View Players View */}\r\n                        {activeDmTab === 'my_sessions' && (\r\n                            <div className=\"dm-section-panel\">\r\n                                <h3>Your Game Sessions</h3>\r\n                                {loading ? (\r\n                                    <p className=\"empty-message\">Loading sessions...</p>\r\n                                ) : dmSessions.length === 0 ? (\r\n                                    <p className=\"empty-message\">You haven't created any sessions yet.</p>\r\n                                ) : (\r\n                                    <div className=\"dm-session-list\">\r\n                                        <ul>\r\n                                            {dmSessions.map(session => (\r\n                                                <li key={session.session_id} onClick={() => handleSelectDmSession(session)}>\r\n                                                    <span>\r\n                                                        <strong>{session.session_name}</strong> (Code: {session.session_code})\r\n                                                    </span>\r\n                                                    <span>\r\n                                                        Players: {session.player_count} {/* This now displays the fetched count */}\r\n                                                    </span>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {selectedDmSession && (\r\n                                    <>\r\n                                        <h3 style={{ marginTop: '2rem' }}>Players in \"{selectedDmSession.session_name}\"</h3>\r\n                                        {loading ? (\r\n                                            <p className=\"empty-message\">Loading players...</p>\r\n                                        ) : playersInSelectedDmSession.length === 0 ? (\r\n                                            <p className=\"empty-message\">No players have joined this session yet.</p>\r\n                                        ) : (\r\n                                            <div className=\"dm-player-list\">\r\n                                                <ul>\r\n                                                    {playersInSelectedDmSession.map(player => (\r\n                                                        <li key={player.player_id} onClick={() => handleViewPlayerCards(player.player_id)}>\r\n                                                            <span className=\"dm-player-id\">{player.player_id}</span>\r\n                                                            <button className=\"select-button\">View Cards</button>\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n\r\n                         {/* DM Player View (when a DM selects a specific player) */}\r\n                        {activeDmTab === 'view_player' && selectedPlayerDMData && (\r\n                            <div className=\"dm-section-panel\">\r\n                                <h3>Viewing Player: {selectedPlayerForDMView}</h3>\r\n                                <button onClick={() => setActiveDmTab('my_sessions')} className=\"select-button\" style={{ marginBottom: '1rem' }}>\r\n                                    Back to Session Players\r\n                                </button>\r\n\r\n                                <div className=\"dm-player-view-details\">\r\n                                    <div className=\"dm-player-stats-panel\">\r\n                                        <h4>Player Stats</h4>\r\n                                        <p>Level: <span>{selectedPlayerDMData.character_level}</span></p>\r\n                                        <p>WIS Mod: <span>{selectedPlayerDMData.wis_mod}</span></p>\r\n                                        <p>INT Mod: <span>{selectedPlayerDMData.int_mod}</span></p>\r\n                                        <p>CHA Mod: <span>{selectedPlayerDMData.cha_mod}</span></p>\r\n                                    </div>\r\n\r\n                                    <div className=\"dm-player-deck-panel\">\r\n                                        <h4>Active Deck ({selectedPlayerDMData.active_deck_instances.length})</h4>\r\n                                        <div className=\"card-list\">\r\n                                            {selectedPlayerDMData.active_deck_instances.length === 0 ? (\r\n                                                <p className=\"empty-message no-hover\">No cards in active deck.</p>\r\n                                            ) : (\r\n                                                selectedPlayerDMData.active_deck_instances.map(card => (\r\n                                                    <div key={card.instance_id} className=\"card-item\">\r\n                                                         <img\r\n                                                            src={`https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`}\r\n                                                            alt={card.name}\r\n                                                            className=\"card-image\"\r\n                                                            onError={(e) => { e.target.onerror = null; e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\"; }}\r\n                                                        />\r\n                                                        {card.backlash_effect && (\r\n                                                            <p className=\"card-backlash\">Backlash: {card.backlash_effect}</p>\r\n                                                        )}\r\n                                                        <h3 className=\"card-name\">{card.name}</h3>\r\n                                                        <p className=\"card-description\">{card.description}</p>\r\n                                                        {card.effect && (\r\n                                                            <p className=\"card-effect\">Effect: {card.effect}</p>\r\n                                                        )}\r\n                                                        <p className=\"card-uses\">Uses: {card.current_uses}/{card.default_uses_per_rest}</p>\r\n                                                    </div>\r\n                                                ))\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Owned Collection Panel - Now Scrollable and Smaller Cards */}\r\n                                    <div className=\"dm-player-collection-panel\">\r\n                                        <h4>Owned Collection ({selectedPlayerDMData.unlocked_collection_ids.length})</h4>\r\n                                        <div className=\"card-list\">\r\n                                            {selectedPlayerDMData.unlocked_collection_ids.length === 0 ? (\r\n                                                <p className=\"empty-message no-hover\">No cards owned.</p>\r\n                                            ) : (\r\n                                                // Display unique cards from collection, with count\r\n                                                Object.entries(selectedPlayerDMData.unlocked_collection_ids.reduce((acc, cardId) => {\r\n                                                    acc[cardId] = (acc[cardId] || 0) + 1;\r\n                                                    return acc;\r\n                                                }, {})).map(([cardId, count]) => {\r\n                                                    const fullCard = getFullCardDetails(cardId);\r\n                                                    return fullCard ? (\r\n                                                        <div key={cardId} className=\"card-item\">\r\n                                                             <img\r\n                                                                src={`https://placehold.co/100x150/a8dadc/ffffff?text=${fullCard.name.split('.')[0].replace('_', '%20')}`}\r\n                                                                alt={fullCard.name}\r\n                                                                className=\"card-image\"\r\n                                                                onError={(e) => { e.target.onerror = null; e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\"; }}\r\n                                                            />\r\n                                                            <h4 className=\"card-name\">{fullCard.name}</h4>\r\n                                                            {fullCard.backlash_effect && (\r\n                                                                <p className=\"card-backlash\">Backlash: {fullCard.backlash_effect}</p>\r\n                                                            )}\r\n                                                            <p className=\"card-description\">{fullCard.description}</p>\r\n                                                            {fullCard.effect && (\r\n                                                                <p className=\"card-effect\">Effect: {fullCard.effect}</p>\r\n                                                            )}\r\n                                                            <p className=\"card-meta\">Rarity: <span>{fullCard.rarity}</span></p>\r\n                                                            <p className=\"card-meta\">Owned: <span>{count}</span></p>\r\n                                                        </div>\r\n                                                    ) : null;\r\n                                                })\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* Display Pending Items for the Player being viewed by DM */}\r\n                                    {(selectedPlayerDMData.pending_booster_packs.length > 0 || selectedPlayerDMData.pending_cards.length > 0) && (\r\n                                        <div className=\"player-notification-area\" style={{ marginTop: '2rem' }}>\r\n                                            <h3>Player's Pending Items</h3>\r\n                                            <ul>\r\n                                                {selectedPlayerDMData.pending_booster_packs.map((pack, index) => (\r\n                                                    <li key={`dm-player-pending-pack-${index}`}>\r\n                                                        <span className=\"notification-text\">Pending: {pack}</span>\r\n                                                    </li>\r\n                                                ))}\r\n                                                {selectedPlayerDMData.pending_cards.map((cardId, index) => {\r\n                                                    const card = getFullCardDetails(cardId);\r\n                                                    return card ? (\r\n                                                        <li key={`dm-player-pending-card-${cardId}-${index}`}>\r\n                                                            <span className=\"notification-text\">Pending: {card.name}</span>\r\n                                                        </li>\r\n                                                    ) : null;\r\n                                                })}\r\n                                            </ul>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* --- DM Distribution Controls --- */}\r\n                                <div className=\"dm-distribution-controls\">\r\n                                    <h3>Distribute Items to {selectedPlayerForDMView}</h3>\r\n\r\n                                    {/* Give Booster Pack */}\r\n                                    <div className=\"input-group\">\r\n                                        <select \r\n                                            value={selectedPackTypeToGive} \r\n                                            onChange={(e) => setSelectedPackTypeToGive(e.target.value)}\r\n                                            disabled={loading}\r\n                                        >\r\n                                            <option value=\"Common Pack\">Common Pack</option>\r\n                                            <option value=\"Uncommon Pack\">Uncommon Pack</option>\r\n                                            <option value=\"Rare Pack\">Rare Pack</option>\r\n                                            <option value=\"Legendary Pack\">Legendary Pack</option>\r\n                                        </select>\r\n                                        <button onClick={handleGiveSpecificPack} disabled={loading}> {/* Removed class here, using direct style */}\r\n                                            Give Pack\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {/* Give Specific Card */}\r\n                                    <h4 style={{marginTop: '1rem', marginBottom: '0.5rem'}}>Give Specific Card</h4>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Search Cards to Give...\"\r\n                                        value={searchCardInputForDM}\r\n                                        onChange={(e) => setSearchCardInputForDM(e.target.value)}\r\n                                        disabled={loading}\r\n                                        style={{ maxWidth: '400px' }}\r\n                                    />\r\n                                    <div className=\"dm-card-distribution-list\">\r\n                                        {loading ? (\r\n                                            <p className=\"empty-message no-hover\">Loading all cards...</p>\r\n                                        ) : filteredAllCardsForDM.length === 0 ? (\r\n                                            <p className=\"empty-message no-hover\">No cards found matching your search.</p>\r\n                                        ) : (\r\n                                            <ul>\r\n                                                {filteredAllCardsForDM.map(card => (\r\n                                                    <li key={`dm-give-${card.id}`}>\r\n                                                        <span className=\"card-name\">{card.name} ({card.type}) - {card.rarity}</span>\r\n                                                        <button \r\n                                                            onClick={() => handleGiveSpecificCard(card.id)} \r\n                                                            disabled={loading}\r\n                                                            className=\"select-button\"\r\n                                                        >\r\n                                                            Give\r\n                                                        </button>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    /* Player Content (when isDMMode is false) */\r\n                    <div className=\"main-content\">\r\n                        {/* Player Stats Input Panel */}\r\n                        <div className=\"stats-container\">\r\n                            <label>Level: <input type=\"number\" value={characterLevel} onChange={(e) => setCharacterLevel(Math.max(1, parseInt(e.target.value) || 1))} min=\"1\" max=\"20\" /></label>\r\n                            <label>WIS Mod: <input type=\"number\" value={wisMod} onChange={(e) => setWisMod(parseInt(e.target.value) || 0)} /></label>\r\n                            <label>INT Mod: <input type=\"number\" value={intMod} onChange={(e) => setIntMod(parseInt(e.target.value) || 0)} /></label>\r\n                            <label>CHA Mod: <input type=\"number\" value={chaMod} onChange={(e) => setChaMod(parseInt(e.target.value) || 0)} /></label>\r\n                            <p>Max Deck Size: <span className=\"highlight\">{maxDeckSize}</span></p>\r\n                        </div>\r\n\r\n                        {/* Player Notification Area */}\r\n                        {(pendingBoosterPacks.length > 0 || pendingCards.length > 0) && (\r\n                            <div className=\"player-notification-area\">\r\n                                <h3>You Have New Items! 🎉</h3>\r\n                                <ul>\r\n                                    {pendingBoosterPacks.map((pack, index) => (\r\n                                        <li key={`pending-pack-${index}`}>\r\n                                            <span className=\"notification-text\">Pending: {pack}</span>\r\n                                            <button onClick={handleOpenPendingBooster} disabled={loading} className=\"booster-button\">\r\n                                                Open Pack\r\n                                            </button>\r\n                                        </li>\r\n                                    ))}\r\n                                    {pendingCards.map((cardId, index) => {\r\n                                        const card = getFullCardDetails(cardId);\r\n                                        return card ? (\r\n                                            <li key={`pending-card-${cardId}-${index}`}>\r\n                                                <span className=\"notification-text\">Pending: {card.name} ({card.rarity})</span>\r\n                                                <button onClick={() => handleAcceptPendingCard(card.id)} disabled={loading} className=\"select-button\">\r\n                                                    Accept Card\r\n                                                </button>\r\n                                            </li>\r\n                                        ) : null;\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Tab Navigation for Player Mode */}\r\n                        <div className=\"tab-navigation\">\r\n                            <div \r\n                                className={`tab-item ${activeTab === 'available' ? 'active' : ''}`} \r\n                                onClick={() => setActiveTab('available')}\r\n                            >\r\n                                Available Spells ({filteredAndSortedAvailableCards.length} Types / {unlockedCollectionIds.length} Total Owned)\r\n                            </div>\r\n                            <div \r\n                                className={`tab-item ${activeTab === 'deck' ? 'active' : ''}`} \r\n                                onClick={() => setActiveTab('deck')}\r\n                            >\r\n                                Your Deck ({activeDeckInstances.length}/{maxDeckSize})\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Available Cards Section - Now Scrollable with Filters, Sort, Search */}\r\n                        {activeTab === 'available' && (\r\n                            <>\r\n                                {/* Player Filters, Sort, Search Controls */}\r\n                                <div className=\"player-filters-sort-search\">\r\n                                    <label htmlFor=\"search-cards\">Search:</label>\r\n                                    <input\r\n                                        id=\"search-cards\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Search spells...\"\r\n                                        value={searchAvailableCards}\r\n                                        onChange={(e) => setSearchAvailableCards(e.target.value)}\r\n                                        disabled={loading}\r\n                                    />\r\n\r\n                                    <label htmlFor=\"filter-type\">Type:</label>\r\n                                    <select\r\n                                        id=\"filter-type\"\r\n                                        value={filterType}\r\n                                        onChange={(e) => setFilterType(e.target.value)}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        {uniqueCardTypes.map(type => (\r\n                                            <option key={type} value={type}>{type}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <label htmlFor=\"filter-rarity\">Rarity:</label>\r\n                                    <select\r\n                                        id=\"filter-rarity\"\r\n                                        value={filterRarity}\r\n                                        onChange={(e) => setFilterRarity(e.target.value)}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        {uniqueCardRarities.map(rarity => (\r\n                                            <option key={rarity} value={rarity}>{rarity}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <label htmlFor=\"sort-order\">Sort By:</label>\r\n                                    <select\r\n                                        id=\"sort-order\"\r\n                                        value={sortOrder}\r\n                                        onChange={(e) => setSortOrder(e.target.value)}\r\n                                        disabled={loading}\r\n                                    >\r\n                                        <option value=\"name-asc\">Name (A-Z)</option>\r\n                                        <option value=\"name-desc\">Name (Z-A)</option>\r\n                                        <option value=\"rarity-asc\">Rarity (Low to High)</option>\r\n                                        <option value=\"rarity-desc\">Rarity (High to Low)</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"card-collection-panel\"> {/* This panel now has max-height and overflow-y: auto */}\r\n                                    <h2 className=\"panel-title\">Available Spells</h2>\r\n                                    {loading && <p className=\"empty-message\">Loading cards...</p>}\r\n                                    {!isAuthenticated && !loading && (\r\n                                        <div className=\"pre-login-message\">\r\n                                            <h3>Log in to see your available spells.</h3>\r\n                                        </div>\r\n                                    )}\r\n                                    {isAuthenticated && !loading && filteredAndSortedAvailableCards.length > 0 ? (\r\n                                        <div className=\"card-list\">\r\n                                            {filteredAndSortedAvailableCards.map((card) => (\r\n                                                <div key={card.id} className=\"card-item available-card\" onClick={() => handleAddCardToDeck(card)}>\r\n                                                    <img\r\n                                                        src={`https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`}\r\n                                                        alt={card.name}\r\n                                                        className=\"card-image\"\r\n                                                        onError={(e) => { e.target.onerror = null; e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\"; }}\r\n                                                    />\r\n                                                    {card.backlash_effect && (\r\n                                                        <p className=\"card-backlash\">Backlash: {card.backlash_effect}</p>\r\n                                                    )}\r\n                                                    <h3 className=\"card-name\">{card.name} ({card.type})</h3>\r\n                                                    <p className=\"card-description\">{card.description}</p>\r\n                                                    {card.effect && (\r\n                                                        <p className=\"card-effect\">Effect: {card.effect}</p>\r\n                                                    )}\r\n                                                    <p className=\"card-meta\">Rarity: <span>{card.rarity}</span></p>\r\n                                                    <p className=\"card-meta\">Owned Copies: <span>{card.owned_copies}</span></p>\r\n                                                    <button\r\n                                                        onClick={(e) => { e.stopPropagation(); handleAddCardToDeck(card); }} // Stop propagation to prevent parent onClick\r\n                                                        // Disable button if deck is full OR if all owned copies are already in the deck\r\n                                                        disabled={activeDeckInstances.length >= maxDeckSize || \r\n                                                                    activeDeckInstances.filter(c => c.id === card.id).length >= card.owned_copies}\r\n                                                        className=\"select-button\"\r\n                                                    >\r\n                                                        Add to Deck\r\n                                                    </button>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    ) : ( isAuthenticated && !loading &&\r\n                                        <p className=\"empty-message\">No available spells match your current filters or search.</p>\r\n                                    )}\r\n\r\n                                </div>\r\n                                {/* Booster Pack Section - Moved outside card-collection-panel */}\r\n                                {isAuthenticated && !loading && (\r\n                                    <div className=\"booster-pack-section\">\r\n                                        {uniqueUnlockedCards.length === 0 && pendingBoosterPacks.length === 0 && filteredAndSortedAvailableCards.length === 0 && (\r\n                                            <p className=\"empty-message\">You haven't unlocked any unique spell types yet! Open a booster pack to get started.</p>\r\n                                        )}\r\n                                        {/* Only show \"Open Booster Pack\" button if no pending packs */}\r\n                                        {pendingBoosterPacks.length === 0 && (\r\n                                            <button \r\n                                                onClick={handleOpenBoosterPack} \r\n                                                disabled={loading}\r\n                                                className=\"booster-button\"\r\n                                            >\r\n                                                Open Booster Pack\r\n                                            </button>\r\n                                        )}\r\n                                        \r\n                                        {newlyAcquiredCards.length > 0 && (\r\n                                            <div className=\"new-cards-display\">\r\n                                                <h4>Newly Acquired Cards from {lastOpenedPackType}:</h4>\r\n                                                <ul>\r\n                                                    {newlyAcquiredCards.map((card, index) => (\r\n                                                        <li key={card.id + \"-new-\" + index}> {/* Use unique key for each new card */}\r\n                                                            {card.name} ({card.type}, {card.rarity})\r\n                                                            {prePackUnlockedIds.includes(card.id) && <span> (Duplicate)</span>}\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                            </>\r\n                        )}\r\n\r\n                        {/* Built Deck Section */}\r\n                        {activeTab === 'deck' && (\r\n                            <div className=\"built-deck-panel\">\r\n                                <h2 className=\"panel-title\">Your Deck ({activeDeckInstances.length}/{maxDeckSize})</h2>\r\n                                <div className=\"deck-list\">\r\n                                    {isAuthenticated ? (\r\n                                        activeDeckInstances.length === 0 ? (\r\n                                            <p className=\"empty-message\">Select cards from the \"Available Spells\" tab to build your deck!</p>\r\n                                        ) : (\r\n                                            activeDeckInstances.map((card) => (\r\n                                                <div key={card.instance_id} className=\"card-item deck-card\">\r\n                                                    <img\r\n                                                        src={`https://placehold.co/100x150/a8dadc/ffffff?text=${card.name.split('.')[0].replace('_', '%20')}`}\r\n                                                        alt={card.name}\r\n                                                        className=\"card-image\"\r\n                                                        onError={(e) => { e.target.onerror = null; e.target.src = \"https://placehold.co/100x150/cccccc/333333?text=Image%20Error\"; }}\r\n                                                    />\r\n                                                    {card.backlash_effect && (\r\n                                                        <p className=\"card-backlash\">Backlash: {card.backlash_effect}</p>\r\n                                                    )}\r\n                                                    <h3 className=\"card-name\">{card.name} ({card.type})</h3>\r\n                                                    <p className=\"card-description\">{card.description}</p>\r\n                                                    {card.effect && (\r\n                                                        <p className=\"card-effect\">Effect: {card.effect}</p>\r\n                                                    )}\r\n                                                    <p className=\"card-meta\">Rarity: <span>{card.rarity}</span></p>\r\n                                                    <p className=\"card-uses\">Uses Left: {card.current_uses}/{card.default_uses_per_rest}</p>\r\n                                                    {/* Card Notes Text Area */}\r\n                                                    <textarea\r\n                                                        className=\"card-note-textarea\"\r\n                                                        placeholder=\"Add personal notes here...\"\r\n                                                        value={card.notes}\r\n                                                        onChange={(e) => handleChangeCardNote(card.instance_id, e.target.value)}\r\n                                                    ></textarea>\r\n                                                    <div className=\"card-actions\">\r\n                                                        <button\r\n                                                            onClick={() => handleMarkCardUsed(card.instance_id)}\r\n                                                            disabled={card.current_uses <= 0}\r\n                                                            className=\"use-button\"\r\n                                                        >\r\n                                                            Use\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={() => handleResetCardUses(card.instance_id)}\r\n                                                            className=\"reset-button\"\r\n                                                        >\r\n                                                            Reset Uses\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={() => handleRemoveCardFromDeck(card.instance_id)}\r\n                                                            className=\"remove-button\"\r\n                                                        >\r\n                                                            Remove\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        )\r\n                                    ) : (\r\n                                        <div className=\"pre-login-message\">\r\n                                            <h3>Please log in to load your character and spell deck.</h3>\r\n                                            <p>Once logged in, your deck and stats will appear here.</p>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Player Join Session Input */}\r\n                        {isAuthenticated && (\r\n                            <div className=\"dm-section-panel\" style={{ marginTop: '2rem' }}>\r\n                                <h3>Join a Game Session</h3>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Session Code\"\r\n                                    value={sessionCodeInput}\r\n                                    onChange={(e) => setSessionCodeInput(e.target.value)}\r\n                                    disabled={loading}\r\n                                    style={{ maxWidth: '250px' }}\r\n                                />\r\n                                <button onClick={handleJoinSession} disabled={loading}>\r\n                                    Join Session\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}